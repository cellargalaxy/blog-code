__NUXT_JSONP__("/page/5", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA){q.type=e;q.children=[{type:b,tag:r,props:{id:s},children:[{type:b,tag:l,props:{ariaHidden:t,href:"#%E5%89%8D%E8%A8%80",tabIndex:u},children:[{type:b,tag:v,props:{className:[w,x]},children:[]}]},{type:a,value:s}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"貌似我许久以前去尝试去看过OAuth2.0的东西，但看了一下这么鬼复杂，又这个请求那个请求，这个token那个token，哪用得着这么复杂~~（看不懂才对）~~，然后就放弃了。"}]}];C.type=e;C.children=[];H.type=e;H.children=[{type:b,tag:r,props:{id:I},children:[{type:b,tag:l,props:{href:"#%E6%AD%A5%E9%AA%A4",ariaHidden:t,tabIndex:u},children:[{type:b,tag:v,props:{className:[w,x]},children:[]}]},{type:a,value:I}]},{type:a,value:c},{type:b,tag:J,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"lottie是一种视频格式，数据会保存为一个json，所以lottie文件是一个json文件，可以在进行"},{type:b,tag:l,props:{href:K,rel:[L,M,N],target:O},children:[{type:a,value:K}]},{type:a,value:"播放。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"tg的动态壁纸的后缀为"},{type:b,tag:j,props:{},children:[{type:a,value:n}]},{type:a,value:"，官方介绍"},{type:b,tag:j,props:{},children:[{type:a,value:n}]},{type:a,value:"是lottie格式的gzip压缩。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:j,props:{},children:[{type:a,value:n}]},{type:a,value:"文件在手机的"},{type:b,tag:j,props:{},children:[{type:a,value:"\u002Fstorage\u002Femulated\u002F0\u002FAndroid\u002Fdata\u002Forg.telegram.messenger\u002Fcache"}]},{type:a,value:"里，虽然后缀为"},{type:b,tag:j,props:{},children:[{type:a,value:n}]},{type:a,value:"，但其实已经解压过，直接是个json文件了可以播放了。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"使用"},{type:b,tag:l,props:{href:P,rel:[L,M,N],target:O},children:[{type:a,value:P}]},{type:a,value:"，依赖于"},{type:b,tag:j,props:{},children:[{type:a,value:"gifski"}]},{type:a,value:"和"},{type:b,tag:j,props:{},children:[{type:a,value:"ffmpeg"}]},{type:a,value:"，可以直接装换为mp4或者gif。但是发现最后一帧会有问题，导致视频会闪一闪。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"使用puppeteer-lottie对lottie转gif，会在"},{type:b,tag:j,props:{},children:[{type:a,value:"\u002Ftmp"}]},{type:a,value:"生成一个临时目录，文件夹名字形似一个md5，保存全部帧的png，拷贝出来待用"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"使用ffmpeg将png压成mp4"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"使用ffmpeg将mp4压成gif"}]},{type:a,value:c}]}];U.type=e;U.children=[];Z.type=e;Z.children=[];ad.type=e;ad.children=[{type:b,tag:m,props:{},children:[{type:a,value:ab}]}];ai.type=e;ai.children=[];an.type=e;an.children=[];at.type=e;at.children=[];ay.type=e;ay.children=[{type:b,tag:m,props:{},children:[{type:a,value:"最近终于终于啃完翟永超的《Spring Cloud微服务实战》。看完之后，对于这些牛逼的东西，我只能说我终于知道Spring Cloud是想干嘛了（叹气。jpg）。对此总结一下。"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"实施Spring Cloud，即想通过把原本单独的大系统，拆分为多个的微服务，以达到系统解耦的目的。但为了依旧提供完整的服务，各个微服务仍然存在着业务依赖。而这些业务依赖则通过rpc等方式进行调用。因此微服务里存在着两个根本角色：服务提供者和服务消费者。当然，对于某一个微服务而言，他自己可以既是服务提供者也是服务消费者，因为他即为其他微服务提供服务，也使用其他微服务的服务。然而这么做问题会出现一大堆，Spring Cloud就是为了解决这些问题而开发或者封装其他工具诞生的。这里先罗列几个这些问题："}]},{type:a,value:c},{type:b,tag:J,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"作为服务消费者，怎么知道服务提供者在哪"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"作为服务消费者，怎样调用服务提供者的服务"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"作为服务消费者，万一服务提供者挂了该怎么办。不可能晾着其他请求一直等这位服务提供者恢复吧！？"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"拆分后，微服务数量众多，又各自为政。接口自行变更，管理混乱，怎么办？"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"拆分后，微服务数量众多，又各自为政。微服务之间怎样互通消息？"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"拆分后，微服务数量众多，又各自为政。如果要修改配置，岂不是要一改就要改好几十甚至上百台机？"}]},{type:a,value:c}]}];return {data:[{navbarConfig:{brandText:"无名の窝",brandUrl:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}]},homeConfig:{brandInterval:10000,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1650990223083),pageSize:10,total:110,currentPage:5,files:[{slug:o,description:"前言\n貌似我许久以前去尝试去看过OAuth2.0的东西，但看了一下这么鬼复杂，又这个请求那个请求，这个token那个token，哪用得着这么复杂~~（看不懂才对）~~，然后就放弃了。",createdAt:p,updatedAt:p,toc:[],body:q,excerpt:q,dir:y,path:"\u002F协议\u002F20191111\u002FOAuth2.0协议",extension:f,title:o,url:"\u002Fblog-code\u002Fview\u002F协议\u002F20191111\u002FOAuth2.0协议",createAt:new Date(1573430400000),updateAt:new Date(1573430400000),attributes:[{name:g,value:z},{name:h,value:z},{name:i,value:y,url:"\u002Fblog-code\u002Fpage\u002F协议\u002F20191111\u002F1\u002F"}]},{slug:A,description:k,createdAt:B,updatedAt:B,toc:[],body:C,excerpt:C,dir:D,path:"\u002F算法\u002F20191015\u002FPython深度学习笔记",extension:f,title:A,url:"\u002Fblog-code\u002Fview\u002F算法\u002F20191015\u002FPython深度学习笔记",createAt:new Date(1571097600000),updateAt:new Date(1571097600000),attributes:[{name:g,value:E},{name:h,value:E},{name:i,value:D,url:"\u002Fblog-code\u002Fpage\u002F算法\u002F20191015\u002F1\u002F"}]},{slug:F,description:"步骤\n\nlottie是一种视频格式，数据会保存为一个json，所以lottie文件是一个json文件，可以在进行https:\u002F\u002Fsvgsprite.com\u002Ftools\u002Flottie-player\u002F播放。\ntg的动态壁纸的后缀为tgs，官方介绍tgs是lottie格式的gzip压缩。\ntgs文件在手机的\u002Fstorage\u002Femulated\u002F0\u002FAndroid\u002Fdata\u002Forg.telegram.messenger\u002Fcache里，虽然后缀为tgs，但其实已经解压过，直接是个json文件了可以播放了。\n使用https:\u002F\u002Fgithub.com\u002Ftransitive-bullshit\u002Fpuppeteer-lottie，依赖于gifski和ffmpeg，可以直接装换为mp4或者gif。但是发现最后一帧会有问题，导致视频会闪一闪。\n使用puppeteer-lottie对lottie转gif，会在\u002Ftmp生成一个临时目录，文件夹名字形似一个md5，保存全部帧的png，拷贝出来待用\n使用ffmpeg将png压成mp4\n使用ffmpeg将mp4压成gif\n",createdAt:G,updatedAt:G,toc:[],body:H,excerpt:H,dir:Q,path:"\u002F折腾\u002F20190914\u002Ftg动态壁纸转MP4和GIF",extension:f,title:F,url:"\u002Fblog-code\u002Fview\u002F折腾\u002F20190914\u002Ftg动态壁纸转MP4和GIF",createAt:new Date(1568419200000),updateAt:new Date(1568419200000),attributes:[{name:g,value:R},{name:h,value:R},{name:i,value:Q,url:"\u002Fblog-code\u002Fpage\u002F折腾\u002F20190914\u002F1\u002F"}]},{slug:S,description:k,createdAt:T,updatedAt:T,toc:[],body:U,excerpt:U,dir:V,path:"\u002F折腾\u002F20190912\u002F给Gboard导入搜狗词库",extension:f,title:S,url:"\u002Fblog-code\u002Fview\u002F折腾\u002F20190912\u002F给Gboard导入搜狗词库",createAt:new Date(1568246400000),updateAt:new Date(1568246400000),attributes:[{name:g,value:W},{name:h,value:W},{name:i,value:V,url:"\u002Fblog-code\u002Fpage\u002F折腾\u002F20190912\u002F1\u002F"}]},{slug:X,description:k,createdAt:Y,updatedAt:Y,toc:[],body:Z,excerpt:Z,dir:_,path:"\u002F框架\u002F20190828\u002F创建自定义starter包",extension:f,title:X,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20190828\u002F创建自定义starter包",createAt:new Date(1566950400000),updateAt:new Date(1566950400000),attributes:[{name:g,value:$},{name:h,value:$},{name:i,value:_,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20190828\u002F1\u002F"}]},{slug:aa,description:ab,createdAt:ac,updatedAt:ac,toc:[],body:ad,excerpt:ad,dir:ae,path:"\u002F折腾\u002F20190823\u002F通过ssh远程Windows的linux环境",extension:f,title:aa,url:"\u002Fblog-code\u002Fview\u002F折腾\u002F20190823\u002F通过ssh远程Windows的linux环境",createAt:new Date(1566518400000),updateAt:new Date(1566518400000),attributes:[{name:g,value:af},{name:h,value:af},{name:i,value:ae,url:"\u002Fblog-code\u002Fpage\u002F折腾\u002F20190823\u002F1\u002F"}]},{slug:ag,description:k,createdAt:ah,updatedAt:ah,toc:[],body:ai,excerpt:ai,dir:aj,path:"\u002F框架\u002F20190215\u002FSpring Boot自动配置",extension:f,title:ag,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20190215\u002FSpring Boot自动配置",createAt:new Date(1550188800000),updateAt:new Date(1550188800000),attributes:[{name:g,value:ak},{name:h,value:ak},{name:i,value:aj,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20190215\u002F1\u002F"}]},{slug:al,description:k,createdAt:am,updatedAt:am,toc:[],body:an,excerpt:an,dir:ao,path:"\u002F折腾\u002F20190201\u002F小米8国际版刷机记",extension:f,title:al,url:"\u002Fblog-code\u002Fview\u002F折腾\u002F20190201\u002F小米8国际版刷机记",createAt:new Date(1548979200000),updateAt:new Date(1548979200000),attributes:[{name:g,value:ap},{name:h,value:ap},{name:i,value:ao,url:"\u002Fblog-code\u002Fpage\u002F折腾\u002F20190201\u002F1\u002F"}]},{slug:aq,description:k,createdAt:ar,updatedAt:ar,toc:[{id:"mysql的乐观锁",depth:as,text:"Mysql的乐观锁"},{id:"mysql的悲观锁",depth:as,text:"Mysql的悲观锁"}],body:at,excerpt:at,dir:au,path:"\u002F中间件\u002F20181222\u002FMysql，Redis与Zookeeper实现分布式锁",extension:f,title:aq,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20181222\u002FMysql，Redis与Zookeeper实现分布式锁",createAt:new Date(1545436800000),updateAt:new Date(1545436800000),attributes:[{name:g,value:av},{name:h,value:av},{name:i,value:au,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20181222\u002F1\u002F"}]},{slug:aw,description:"最近终于终于啃完翟永超的《Spring Cloud微服务实战》。看完之后，对于这些牛逼的东西，我只能说我终于知道Spring Cloud是想干嘛了（叹气。jpg）。对此总结一下。\n实施Spring Cloud，即想通过把原本单独的大系统，拆分为多个的微服务，以达到系统解耦的目的。但为了依旧提供完整的服务，各个微服务仍然存在着业务依赖。而这些业务依赖则通过rpc等方式进行调用。因此微服务里存在着两个根本角色：服务提供者和服务消费者。当然，对于某一个微服务而言，他自己可以既是服务提供者也是服务消费者，因为他即为其他微服务提供服务，也使用其他微服务的服务。然而这么做问题会出现一大堆，Spring Cloud就是为了解决这些问题而开发或者封装其他工具诞生的。这里先罗列几个这些问题：\n\n作为服务消费者，怎么知道服务提供者在哪\n作为服务消费者，怎样调用服务提供者的服务\n作为服务消费者，万一服务提供者挂了该怎么办。不可能晾着其他请求一直等这位服务提供者恢复吧！？\n拆分后，微服务数量众多，又各自为政。接口自行变更，管理混乱，怎么办？\n拆分后，微服务数量众多，又各自为政。微服务之间怎样互通消息？\n拆分后，微服务数量众多，又各自为政。如果要修改配置，岂不是要一改就要改好几十甚至上百台机？\n",createdAt:ax,updatedAt:ax,toc:[],body:ay,excerpt:ay,dir:az,path:"\u002F框架\u002F20181216\u002FSpring Cloud",extension:f,title:aw,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20181216\u002FSpring Cloud",createAt:new Date(1544918400000),updateAt:new Date(1544918400000),attributes:[{name:g,value:aA},{name:h,value:aA},{name:i,value:az,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20181216\u002F1\u002F"}]}]}],fetch:{},mutations:void 0}}("text","element","\n","li","root",".md","createAt","updateAt","sort","code","","a","p","tgs","OAuth2.0协议","2019-11-11T00:00:00.000Z",{},"h1","前言","true",-1,"span","icon","icon-link","\u002F协议\u002F20191111","2019-11-11","Python深度学习笔记","2019-10-15T00:00:00.000Z",{},"\u002F算法\u002F20191015","2019-10-15","tg动态壁纸转MP4和GIF","2019-09-14T00:00:00.000Z",{},"步骤","ol","https:\u002F\u002Fsvgsprite.com\u002Ftools\u002Flottie-player\u002F","nofollow","noopener","noreferrer","_blank","https:\u002F\u002Fgithub.com\u002Ftransitive-bullshit\u002Fpuppeteer-lottie","\u002F折腾\u002F20190914","2019-09-14","给Gboard导入搜狗词库","2019-09-12T00:00:00.000Z",{},"\u002F折腾\u002F20190912","2019-09-12","创建自定义starter包","2019-08-28T00:00:00.000Z",{},"\u002F框架\u002F20190828","2019-08-28","通过ssh远程Windows的linux环境","最近垃圾电信的手机信号差到爆炸，满格的4G等于断网，一格的3G不掉线已经偷笑，所以是不可能通过桌面远程到公司电脑了。鉴于此，打算起了能不能通过ssh远程到windows里，随便模拟一把linux的bash shell环境，减轻网络负担。经过倒腾，目前的方案是windows10自带的openssh+linux子系统方案。","2019-08-23T00:00:00.000Z",{},"\u002F折腾\u002F20190823","2019-08-23","Spring Boot自动配置","2019-02-15T00:00:00.000Z",{},"\u002F框架\u002F20190215","2019-02-15","小米8国际版刷机记","2019-02-01T00:00:00.000Z",{},"\u002F折腾\u002F20190201","2019-02-01","Mysql，Redis与Zookeeper实现分布式锁","2018-12-22T00:00:00.000Z",2,{},"\u002F中间件\u002F20181222","2018-12-22","Spring Cloud","2018-12-16T00:00:00.000Z",{},"\u002F框架\u002F20181216","2018-12-16")));