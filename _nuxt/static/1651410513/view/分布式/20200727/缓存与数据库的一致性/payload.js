__NUXT_JSONP__("/view/%E5%88%86%E5%B8%83%E5%BC%8F/20200727/%E7%BC%93%E5%AD%98%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A){return {data:[{navbarConfig:{brandText:n,brandUrl:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}]},homeConfig:{brandInterval:10000,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1651410521391),siteName:n,file:{slug:o,description:"",createdAt:p,updatedAt:p,toc:[],body:{type:q,children:[{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"一般而言，缓存都需要设置过期时间，通过缓存过期实现缓存与数据库的数据一致性是最后的兜底策略。\n然后根据更新数据库的先后和是更新还是删除缓存做排序，有以下四种情形。\n一般是使用更新数据库，删除缓存，当然都还是有并发问题的。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"更新缓存，更新数据库\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果更新数据库失败，那么其实操作还没执行成功，缓存最终还是会变回旧数据"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果缓存不是会被经常读取，那么这个缓存就会占用空间，还可能浪费计算资源"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"删除缓存，更新数据库\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"同样有更新数据库失败问题"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"更新数据库，更新缓存\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"同样有更新缓存问题"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"更新数据库，删除缓存\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"以数据库更新是否成功为准"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"删除缓存，减少了空间占用和计算"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果删除缓存失败，只能通过过期更新"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:r},children:[{type:b,tag:f,props:{href:"#%E5%88%A0%E9%99%A4%E7%BC%93%E5%AD%98%E5%AF%BC%E8%87%B4%E7%BC%93%E5%AD%98%E5%87%BB%E7%A9%BF",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:r}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"机器不多，可以只用本地锁"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"机器多，需要上分布式锁"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:s},children:[{type:b,tag:f,props:{href:"#%E8%A7%A3%E5%86%B3%E5%B9%B6%E5%8F%91%E6%9B%B4%E6%96%B0%E7%BC%93%E5%AD%98",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:s}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"双删除：删除缓存-\u003E更新数据库-\u003E延迟一段时间-\u003E删除缓存。\n这个延迟一段时间，第一是等待那些读到旧值的线程完成缓存的写入，第二可以等待mysql主从同步"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:t},children:[{type:b,tag:f,props:{href:"#%E8%A7%A3%E5%86%B3%E5%88%A0%E9%99%A4%E7%BC%93%E5%AD%98%E5%A4%B1%E8%B4%A5",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:t}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"本地重试：但是如果是网络问题，短时间内的网络重试没什么意义"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"MQ异步重试：本地删除失败了，通过MQ的消费服异步删除，只有在redis和MQ同时故障的时候才行不通"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Mysql的binlog异步删除：通过一个服务解析binlog，去删除相应的缓存"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:u},children:[{type:b,tag:f,props:{href:"#%E5%BC%BA%E4%B8%80%E8%87%B4%E6%80%A7",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"强一致性方案当然可以解决并发更新缓存问题。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"分布式读写锁：让读线程等待写线程完成写入。\n读多写少可能还好，读少写多的缓存没啥作用，可能要考虑是不是要去掉缓存"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"参考文章："}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fjuejin.im\u002Fpost\u002F5d7c7a14f265da03f47c4f93",rel:[v,w,x],target:y},children:[{type:a,value:"聊聊数据库与缓存数据一致性问题"}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.cnblogs.com\u002Frjzheng\u002Fp\u002F9041659.html",rel:[v,w,x],target:y},children:[{type:a,value:"【原创】分布式之数据库和缓存双写一致性方案解析"}]}]}]},excerpt:{type:q,children:[]},dir:z,path:"\u002F分布式\u002F20200727\u002F缓存与数据库的一致性",extension:".md",title:o,url:"\u002Fblog-code\u002Fview\u002F分布式\u002F20200727\u002F缓存与数据库的一致性",createAt:new Date(1595808000000),updateAt:new Date(1595808000000),attributes:[{name:"createAt",value:A},{name:"updateAt",value:A},{name:"sort",value:z,url:"\u002Fblog-code\u002Fpage\u002F分布式\u002F20200727\u002F1\u002F"}]}}],fetch:{},mutations:void 0}}("text","element","\n","li","ul","a","p","h1","true",-1,"span","icon","icon-link","无名の窝","缓存与数据库的一致性","2020-07-27T00:00:00.000Z","root","删除缓存导致缓存击穿","解决并发更新缓存","解决删除缓存失败","强一致性","nofollow","noopener","noreferrer","_blank","\u002F分布式\u002F20200727","2020-07-27")));