__NUXT_JSONP__("/page/框架/20181216/1", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){n.type="root";n.children=[{type:b,tag:o,props:{},children:[{type:a,value:"最近终于终于啃完翟永超的《Spring Cloud微服务实战》。看完之后，对于这些牛逼的东西，我只能说我终于知道Spring Cloud是想干嘛了（叹气。jpg）。对此总结一下。"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:"实施Spring Cloud，即想通过把原本单独的大系统，拆分为多个的微服务，以达到系统解耦的目的。但为了依旧提供完整的服务，各个微服务仍然存在着业务依赖。而这些业务依赖则通过rpc等方式进行调用。因此微服务里存在着两个根本角色：服务提供者和服务消费者。当然，对于某一个微服务而言，他自己可以既是服务提供者也是服务消费者，因为他即为其他微服务提供服务，也使用其他微服务的服务。然而这么做问题会出现一大堆，Spring Cloud就是为了解决这些问题而开发或者封装其他工具诞生的。这里先罗列几个这些问题："}]},{type:a,value:c},{type:b,tag:"ol",props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"作为服务消费者，怎么知道服务提供者在哪"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"作为服务消费者，怎样调用服务提供者的服务"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"作为服务消费者，万一服务提供者挂了该怎么办。不可能晾着其他请求一直等这位服务提供者恢复吧！？"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"拆分后，微服务数量众多，又各自为政。接口自行变更，管理混乱，怎么办？"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"拆分后，微服务数量众多，又各自为政。微服务之间怎样互通消息？"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"拆分后，微服务数量众多，又各自为政。如果要修改配置，岂不是要一改就要改好几十甚至上百台机？"}]},{type:a,value:c}]}];return {data:[{siteConfig:{siteName:"无名の窝",siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:f},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:g,urlReplace:{"^/file/blog/code":"https:\u002F\u002Foracleamd1.dynv6.net\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:h,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:i,type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:i,type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:d}]}},homeConfig:{brandInterval:h,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1676784618895),rootPath:f,crumbs:[{text:"框架",url:"\u002Fblog-code\u002Fpage\u002F框架\u002F1\u002F"},{text:"20181216",url:j}],pageSize:g,total:k,currentPage:k,files:[{slug:l,description:"最近终于终于啃完翟永超的《Spring Cloud微服务实战》。看完之后，对于这些牛逼的东西，我只能说我终于知道Spring Cloud是想干嘛了（叹气。jpg）。对此总结一下。\n实施Spring Cloud，即想通过把原本单独的大系统，拆分为多个的微服务，以达到系统解耦的目的。但为了依旧提供完整的服务，各个微服务仍然存在着业务依赖。而这些业务依赖则通过rpc等方式进行调用。因此微服务里存在着两个根本角色：服务提供者和服务消费者。当然，对于某一个微服务而言，他自己可以既是服务提供者也是服务消费者，因为他即为其他微服务提供服务，也使用其他微服务的服务。然而这么做问题会出现一大堆，Spring Cloud就是为了解决这些问题而开发或者封装其他工具诞生的。这里先罗列几个这些问题：\n\n作为服务消费者，怎么知道服务提供者在哪\n作为服务消费者，怎样调用服务提供者的服务\n作为服务消费者，万一服务提供者挂了该怎么办。不可能晾着其他请求一直等这位服务提供者恢复吧！？\n拆分后，微服务数量众多，又各自为政。接口自行变更，管理混乱，怎么办？\n拆分后，微服务数量众多，又各自为政。微服务之间怎样互通消息？\n拆分后，微服务数量众多，又各自为政。如果要修改配置，岂不是要一改就要改好几十甚至上百台机？\n",createdAt:m,updatedAt:m,toc:[],body:n,excerpt:n,dir:p,path:"\u002F框架\u002F20181216\u002FSpring Cloud",extension:".md",title:l,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20181216\u002FSpring Cloud\u002F",createAt:new Date(1544918400000),updateAt:new Date(1544918400000),attributes:[{name:"createAt",value:q},{name:"updateAt",value:q},{name:"sort",value:p,url:j}]}]}],fetch:{},mutations:void 0}}("text","element","\n","wide","li","\u002Fblog-code\u002Fpage\u002F1\u002F",10,10000,"青春猪头-牧之原翔子-江之岛","\u002Fblog-code\u002Fpage\u002F框架\u002F20181216\u002F1\u002F",1,"Spring Cloud","2018-12-16T00:00:00.000Z",{},"p","\u002F框架\u002F20181216","2018-12-16")));