__NUXT_JSONP__("/view/%E5%8D%8F%E8%AE%AE/20180314/HTTP%E5%8D%8F%E8%AE%AE", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U){return {data:[{navbarConfig:{brandText:y,brandUrl:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}]},homeConfig:{brandInterval:10000,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1649602653119),siteName:y,file:{slug:z,description:"URI,URL与HTTP\nURI，统一资源标识符，个人理解是一种概念性的东西，即能唯一表示一个资源的都可以叫URI，例如给每个资源起一个唯一的编号。而URL则是URI的一种实现。URL也能唯一定位一个资源。而HTTP又是URL的一种实现。\nhttp是基于TCP\u002FIP协议的，应用层的，无连接无状态的协议。",createdAt:A,updatedAt:A,toc:[{id:B,depth:r,text:C},{id:D,depth:r,text:E},{id:F,depth:r,text:G},{id:H,depth:r,text:I}],body:{type:J,children:[{type:b,tag:q,props:{id:K},children:[{type:b,tag:f,props:{href:L,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:N}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:O}]},{type:a,value:c},{type:a,value:c},{type:b,tag:q,props:{id:"http请求方法"},children:[{type:b,tag:f,props:{href:"#http%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:"HTTP请求方法"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"在HTTP1.1版协议中，HTTP请求方法有八种。"}]},{type:a,value:c},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"GET      请求指定的页面信息，并返回实体主体\nHEAD     类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头\nPOST     向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和\u002F或已有资源的修改\nPUT      从客户端向服务器传送的数据取代指定的文档的内容\nDELETE   请求服务器删除指定的页面\nCONNECT  HTTP\u002F1.1协议中预留给能够将连接改为管道方式的代理服务器\nOPTIONS  允许客户端查看服务器的性能\nTRACE    回显服务器收到的请求，主要用于测试或诊断\n"}]}]}]},{type:a,value:c},{type:b,tag:q,props:{id:"http请求报文"},children:[{type:b,tag:f,props:{href:"#http%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:"HTTP请求报文"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"HTTP请求报文分四个部分组成：请求行，请求头，空行，请求体。\n"},{type:b,tag:"img",props:{alt:"","data-src":"http:\u002F\u002F123.207.79.108\u002Ffile\u002Ffile\u002Fblog\u002Fcode\u002F20180314\u002Fupload-images.jianshu.io-upload_images-2964446-fdfb1a8fce8de946.png.1.png",loading:"lazy"},children:[]}]},{type:a,value:c},{type:b,tag:s,props:{id:B},children:[{type:b,tag:f,props:{href:"#get%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95%E7%9A%84%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"GET \u002F?sex=man&name=Professional HTTP\u002F1.1\nHost:www.example.com\nUser-Agent:Mozilla\u002F5.0 (Windows NT 10.0; WOW64) AppleWebKit\u002F537.36 (KHTML, like Gecko) Chrome\u002F51.0.2704.106 Safari\u002F537.36\n\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"请求行是第一行，又三部分组成。第一部分是请求方法"},{type:b,tag:d,props:{},children:[{type:a,value:"GET"}]},{type:a,value:"，第二部分是URL"},{type:b,tag:d,props:{},children:[{type:a,value:"\u002F?sex=man&name=Professional"}]},{type:a,value:"，第三部分是协议版本"},{type:b,tag:d,props:{},children:[{type:a,value:"HTTP\u002F1.1"}]},{type:a,value:"。三部分之间用空格间隔。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"接下来是请求头，请求头以"},{type:b,tag:d,props:{},children:[{type:a,value:"key:value"}]},{type:a,value:"结构组成。请求头存在的目的是浏览器给服务器提供一些协议里没有定义，但又不是需要传输的数据的额外的信息。这里如请求的目的地址"},{type:b,tag:d,props:{},children:[{type:a,value:"www.example.com"}]},{type:a,value:"，系统是"},{type:b,tag:d,props:{},children:[{type:a,value:"Windows NT 10.0"}]},{type:a,value:"，浏览器是"},{type:b,tag:d,props:{},children:[{type:a,value:"Chrome"}]},{type:a,value:"之类的。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"第三部分是空行，用于把请求头与请求体分割开。即使请求体为空，这一空行任然要存在。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"第四部分是请求体，可以为任意类型的数据。每一行之间都已回车换行符"},{type:b,tag:d,props:{},children:[{type:a,value:"\\r\\n"}]},{type:a,value:"分割。"}]},{type:a,value:c},{type:b,tag:s,props:{id:D},children:[{type:b,tag:f,props:{href:"#post%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95%E7%9A%84%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:E}]},{type:a,value:c},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"POST \u002F HTTP\u002F1.1\nHost:www.example.com\nUser-Agent:Mozilla\u002F5.0 (Windows NT 10.0; WOW64) AppleWebKit\u002F537.36 (KHTML, like Gecko) Chrome\u002F51.0.2704.106 Safari\u002F537.36\nContent-Type:application\u002Fx-www-form-urlencoded\nContent-Length:40\n\nsex=man&name=Professional\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"HTTP协议规定POST提交的数据都要在请求体里。由于请求体可以是任意编码数据，所以为了服务器能以正确的方式解析这些数据，会在请求头添加一个"},{type:b,tag:d,props:{},children:[{type:a,value:t}]},{type:a,value:"来告诉服务器请求体的数据编码。这里的"},{type:b,tag:d,props:{},children:[{type:a,value:"application\u002Fx-www-form-urlencoded"}]},{type:a,value:"是最常见的，浏览器默认的表单数据编码类型。而"},{type:b,tag:d,props:{},children:[{type:a,value:"multipart\u002Fform-data"}]},{type:a,value:"则是二进制编码。一个二进制编码的POST请求报文："}]},{type:a,value:c},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"POST \u002F HTTP\u002F1.1\nContent-Type:multipart\u002Fform-data; boundary=----WebKitFormBoundaryrGKCBY7qhFd3TrwA\n\n------WebKitFormBoundaryrGKCBY7qhFd3TrwA\nContent-Disposition: form-data; name=\"sex\"\n\nman\n------WebKitFormBoundaryrGKCBY7qhFd3TrwA\nContent-Disposition: form-data; name=\"file\"; filename=\"chrome.png\"\nContent-Type: image\u002Fpng\n\nPNG ... content of chrome.png ...\n------WebKitFormBoundaryrGKCBY7qhFd3TrwA--\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"这里提交了一个sex为man的数据，以及一个参数名为file，文件名为chrome.png的图片。我们看到"},{type:b,tag:d,props:{},children:[{type:a,value:t}]},{type:a,value:"后面除了指定了"},{type:b,tag:d,props:{},children:[{type:a,value:":multipart\u002Fform-data"}]},{type:a,value:"，表明是二进制数据以外，还有一个"},{type:b,tag:d,props:{},children:[{type:a,value:"boundary"}]},{type:a,value:"值为"},{type:b,tag:d,props:{},children:[{type:a,value:P}]},{type:a,value:"。这个"},{type:b,tag:d,props:{},children:[{type:a,value:P}]},{type:a,value:"用于将请求体分割开几个部分，各部分是一个参数。例如请求体第一部分，"},{type:b,tag:d,props:{},children:[{type:a,value:"Content-Disposition"}]},{type:a,value:"说他说表单数据，参数名叫sex，值在空一个空行之后为man。"}]},{type:a,value:c},{type:b,tag:q,props:{id:"http响应报文"},children:[{type:b,tag:f,props:{href:"#http%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:"HTTP响应报文"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"HTTP响应报文也是由四部分组成：状态行，响应头，空行，响应体"}]},{type:a,value:c},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"HTTP\u002F1.1 200 OK\nContent-Type: text\u002Fplain; charset=utf-8\nContent-Length: 137582\nExpires: Thu, 05 Dec 1997 16:00:00 GMT\nLast-Modified: Wed, 5 August 1996 15:55:28 GMT\nServer: Apache 0.84\n\n\u003Chtml\u003E\n  \u003Cbody\u003EHello World\u003C\u002Fbody\u003E\n\u003C\u002Fhtml\u003E\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"状态行是第一行，由三个部分组成，每部分之间用空格隔开。第一部分是协议版本，第二部分是状态码，第三部分是状态消息。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"之后是响应头，作用跟请求头一样，只不过变成服务器告诉浏览器的一些额外信息。如表明响应体的文本类型，长度137582，时间等等"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"第三部分是空行，即使响应体为空依然需要存在"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"第四部分是响应体，数据编码任意"}]},{type:a,value:c},{type:b,tag:s,props:{id:F},children:[{type:b,tag:f,props:{href:"#http%E7%8A%B6%E6%80%81%E7%A0%81",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:G}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"HTTP状态码分为五类"}]},{type:a,value:c},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"1xx：指示信息--表示请求已接收，继续处理\n2xx：成功--表示请求已被成功接收、理解、接受\n3xx：重定向--要完成请求必须进行更进一步的操作\n4xx：客户端错误--请求有语法错误或请求无法实现\n5xx：服务器端错误--服务器未能实现合法的请求\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"常见HTTP状态码"}]},{type:a,value:c},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"200 OK                        客户端请求成功\n400 Bad Request               客户端请求有语法错误，不能被服务器所理解\n401 Unauthorized              请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用\n403 Forbidden                 服务器收到请求，但是拒绝提供服务\n404 Not Found                 请求资源不存在，eg：输入了错误的URL\n500 Internal Server Error     服务器发生不可预期的错误\n503 Server Unavailable        服务器当前不能处理客户端的请求，一段时间后可能恢复正常\n"}]}]}]},{type:a,value:c},{type:b,tag:s,props:{id:H},children:[{type:b,tag:f,props:{href:"#mime-type",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:I}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"响应头的"},{type:b,tag:d,props:{},children:[{type:a,value:t}]},{type:a,value:"的值是MIME type，用来表明响应体的数据类型。MIME type可以自定义，只有服务器能识别并解析，一些常见的MIME type："}]},{type:a,value:c},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"text\u002Fplain\ntext\u002Fhtml\ntext\u002Fcss\nimage\u002Fjpeg\nimage\u002Fpng\nimage\u002Fsvg+xml\naudio\u002Fmp4\nvideo\u002Fmp4\napplication\u002Fjavascript\napplication\u002Fpdf\napplication\u002Fzip\napplication\u002Fatom+xml\n"}]}]}]},{type:a,value:c},{type:b,tag:q,props:{id:"http协议版本的发展"},children:[{type:b,tag:f,props:{href:"#http%E5%8D%8F%E8%AE%AE%E7%89%88%E6%9C%AC%E7%9A%84%E5%8F%91%E5%B1%95",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:"HTTP协议版本的发展"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"最早的HTTP\u002F0.9发表于1991年，只有GET方法，返回的也一定要是html。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"1996年5月发布了HTTP\u002F1.0，增加了POST和HEAD方法。增加了头信息，状态码之类的。但其缺点是每个TCP连接只能做一次HTTP请求，erTCP建立成本大，性能差。为了是一个TCP连接能请求多个HTTP，会有些非规范做法，在请求头里添加"},{type:b,tag:d,props:{},children:[{type:a,value:"Connection: keep-alive"}]},{type:a,value:"，告诉服务器不要关闭TCP连接。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"1997年1月发布HTTP\u002F1.1版本，此版本沿用至今。HTTP\u002F1.1默认TCP连接不关闭，需要关闭时在头里添加"},{type:b,tag:d,props:{},children:[{type:a,value:"Connection: close"}]},{type:a,value:"。还引入管道机制，使得客户端能同时发送多个请求，服务器对多个请求依次回应，提高效率。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"参考文献"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.jianshu.com\u002Fp\u002F80e25cb1d81a",rel:[u,v,w],target:x,title:Q},children:[{type:a,value:Q}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:f,props:{href:R,rel:[u,v,w],target:x},children:[{type:a,value:R}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.ruanyifeng.com\u002Fblog\u002F2016\u002F08\u002Fhttp.html",rel:[u,v,w],target:x,title:S},children:[{type:a,value:S}]}]}]},excerpt:{type:J,children:[{type:b,tag:q,props:{id:K},children:[{type:b,tag:f,props:{ariaHidden:g,href:L,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:N}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:O}]}]},dir:T,path:"\u002F协议\u002F20180314\u002FHTTP协议",extension:".md",title:z,url:"\u002Fblog-code\u002Fview\u002F协议\u002F20180314\u002FHTTP协议",createAt:new Date(1520985600000),updateAt:new Date(1520985600000),attributes:[{name:"createAt",value:U},{name:"updateAt",value:U},{name:"sort",value:T,url:"\u002Fblog-code\u002Fpage\u002F协议\u002F20180314\u002F1\u002F"}]}}],fetch:{},mutations:void 0}}("text","element","\n","code","p","a","true",-1,"span","icon","icon-link","div","nuxt-content-highlight","pre","language-text","line-numbers","h1",2,"h2","Content-Type","nofollow","noopener","noreferrer","_blank","无名の窝","HTTP协议","2018-03-14T00:00:00.000Z","get请求方法的请求报文","GET请求方法的请求报文","post请求方法的请求报文","POST请求方法的请求报文","http状态码","HTTP状态码","mime-type","MIME type","root","uriurl与http","#uriurl%E4%B8%8Ehttp","URI,URL与HTTP","URI，统一资源标识符，个人理解是一种概念性的东西，即能唯一表示一个资源的都可以叫URI，例如给每个资源起一个唯一的编号。而URL则是URI的一种实现。URL也能唯一定位一个资源。而HTTP又是URL的一种实现。","http是基于TCP\u002FIP协议的，应用层的，无连接无状态的协议。","----WebKitFormBoundaryrGKCBY7qhFd3TrwA","关于HTTP协议，一篇就够了","https:\u002F\u002Fhit-alibaba.github.io\u002Finterview\u002Fbasic\u002Fnetwork\u002FHTTP.html","HTTP 协议入门","\u002F协议\u002F20180314","2018-03-14")));