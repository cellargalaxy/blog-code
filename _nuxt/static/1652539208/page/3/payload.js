__NUXT_JSONP__("/page/3", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF){x.type=d;x.children=[];B.type=d;B.children=[];E.type=d;E.children=[{type:c,tag:F,props:{id:G},children:[{type:c,tag:H,props:{ariaHidden:I,href:"#%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%85%A5",tabIndex:J},children:[{type:c,tag:K,props:{className:[L,M]},children:[]}]},{type:b,value:G}]},{type:b,value:l},{type:c,tag:j,props:{},children:[{type:b,value:"API网关最重要的功能就是提供服务的统一接入。\n通常是外部服务统一经过API网关请求到内部不同的服务。\n这样内部服务不会直接暴露在外部，保护了内部服务的安全。\n外部服务也只需要面向API网关进行对接即可，不用跟内部各种异构的服务打交道。"}]}];W.type=d;W.children=[{type:c,tag:F,props:{id:"java内存模型jmm"},children:[{type:c,tag:H,props:{ariaHidden:I,href:"#java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8Bjmm",tabIndex:J},children:[{type:c,tag:K,props:{className:[L,M]},children:[]}]},{type:b,value:"java内存模型(JMM)"}]},{type:b,value:l},{type:c,tag:j,props:{},children:[{type:b,value:"JMM模型下，每个线程都有自己的本地内存，线程对内存的操作也是先操作本地内存。\n之后才将本地内存的数据刷新到主内存里，让各个线程更新共享。"}]}];$.type=d;$.children=[];ak.type=d;ak.children=[];ao.type=d;ao.children=[];ar.type=d;ar.children=[{type:c,tag:j,props:{},children:[{type:b,value:"ES的数据结构：index -\u003E type -\u003E document -\u003E field。"}]},{type:b,value:l},{type:c,tag:j,props:{},children:[{type:b,value:"每一个索引会被分为多个shard，每个shard保存部分数据，分别放在不同节点上。\nshard有主shard允许读写，从shard允许读，从shard会与主shard同步数据。\nES集群会选举出一个主节点，负责维护索引元数据和管理主shard和从shard。"}]},{type:b,value:l},{type:c,tag:j,props:{},children:[{type:b,value:"ES写数据请求：客户端选择一个节点作为自己的协调节点，协调节点根据请求文档进行路由。\n把请求转发给主shard所在的节点，当从shard也同步完成了，协调节点才会给客户端响应。"}]},{type:b,value:l},{type:c,tag:j,props:{},children:[{type:b,value:"ES读数据请求：客户端选择一个节点作为自己的协调节点，协调节点根据请求文档进行路由。\n在主shard和全部从shard节点上轮询一个节点进行请求转发，然后把结果返回给客户端。"}]}];ax.type=d;ax.children=[];aD.type=d;aD.children=[{type:c,tag:j,props:{},children:[{type:b,value:aB}]}];return {data:[{siteConfig:{siteName:"无名の窝",siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:r},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:s,urlReplace:{"^/file/blog/code":"http:\u002F\u002F123.207.79.108\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:t,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:u,type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:u,type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:i}]}},homeConfig:{brandInterval:t,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1652539217429),rootPath:r,crumbs:[],pageSize:s,total:112,currentPage:3,files:[{slug:v,description:k,createdAt:w,updatedAt:w,toc:[{id:"required",depth:a,text:"REQUIRED"},{id:"nested",depth:a,text:"NESTED"},{id:"requires_new",depth:a,text:"REQUIRES_NEW"},{id:"mandatory",depth:a,text:"MANDATORY"},{id:"supports",depth:a,text:"SUPPORTS"},{id:"not_supported",depth:a,text:"NOT_SUPPORTED"},{id:"never",depth:a,text:"NEVER"}],body:x,excerpt:x,dir:y,path:"\u002F框架\u002F20200707\u002FSpring事务总结",extension:e,title:v,url:"\u002Fblog-code\u002Fview\u002F$E6$A1$86$E6$9E$B6\u002F20200707\u002FSpring$E4$BA$8B$E5$8A$A1$E6$80$BB$E7$BB$93\u002F",createAt:new Date(1594080000000),updateAt:new Date(1594080000000),attributes:[{name:f,value:z},{name:g,value:z},{name:h,value:y,url:"\u002Fblog-code\u002Fpage\u002F$E6$A1$86$E6$9E$B6\u002F20200707\u002F1\u002F"}]},{slug:A,description:k,createdAt:m,updatedAt:m,toc:[],body:B,excerpt:B,dir:n,path:"\u002F分布式\u002F20200703\u002F分布式限流",extension:e,title:A,url:"\u002Fblog-code\u002Fview\u002F$E5$88$86$E5$B8$83$E5$BC$8F\u002F20200703\u002F$E5$88$86$E5$B8$83$E5$BC$8F$E9$99$90$E6$B5$81\u002F",createAt:new Date(1593734400000),updateAt:new Date(1593734400000),attributes:[{name:f,value:o},{name:g,value:o},{name:h,value:n,url:C}]},{slug:D,description:"服务接入\nAPI网关最重要的功能就是提供服务的统一接入。\n通常是外部服务统一经过API网关请求到内部不同的服务。\n这样内部服务不会直接暴露在外部，保护了内部服务的安全。\n外部服务也只需要面向API网关进行对接即可，不用跟内部各种异构的服务打交道。",createdAt:m,updatedAt:m,toc:[],body:E,excerpt:E,dir:n,path:"\u002F分布式\u002F20200703\u002FAPI网关总结",extension:e,title:D,url:"\u002Fblog-code\u002Fview\u002F$E5$88$86$E5$B8$83$E5$BC$8F\u002F20200703\u002FAPI$E7$BD$91$E5$85$B3$E6$80$BB$E7$BB$93\u002F",createAt:new Date(1593734400000),updateAt:new Date(1593734400000),attributes:[{name:f,value:o},{name:g,value:o},{name:h,value:n,url:C}]},{slug:N,description:"java内存模型(JMM)\nJMM模型下，每个线程都有自己的本地内存，线程对内存的操作也是先操作本地内存。\n之后才将本地内存的数据刷新到主内存里，让各个线程更新共享。",createdAt:O,updatedAt:O,toc:[{id:P,depth:a,text:P},{id:Q,depth:a,text:Q},{id:R,depth:a,text:R},{id:S,depth:a,text:S},{id:T,depth:a,text:T},{id:U,depth:a,text:U},{id:V,depth:a,text:V}],body:W,excerpt:W,dir:X,path:"\u002Fjava\u002F20200617\u002FJava并发",extension:e,title:N,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20200617\u002FJava$E5$B9$B6$E5$8F$91\u002F",createAt:new Date(1592352000000),updateAt:new Date(1592352000000),attributes:[{name:f,value:Y},{name:g,value:Y},{name:h,value:X,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20200617\u002F1\u002F"}]},{slug:Z,description:k,createdAt:_,updatedAt:_,toc:[],body:$,excerpt:$,dir:aa,path:"\u002F中间件\u002F20200609\u002FMySQL总结",extension:e,title:Z,url:"\u002Fblog-code\u002Fview\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20200609\u002FMySQL$E6$80$BB$E7$BB$93\u002F",createAt:new Date(1591660800000),updateAt:new Date(1591660800000),attributes:[{name:f,value:ab},{name:g,value:ab},{name:h,value:aa,url:"\u002Fblog-code\u002Fpage\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20200609\u002F1\u002F"}]},{slug:ac,description:k,createdAt:ad,updatedAt:ad,toc:[{id:ae,depth:a,text:ae},{id:af,depth:a,text:af},{id:ag,depth:a,text:ag},{id:ah,depth:a,text:ah},{id:"sorted-set",depth:a,text:"sorted set"},{id:"rdb",depth:a,text:"RDB"},{id:"aof",depth:a,text:"AOF"},{id:ai,depth:a,text:ai},{id:aj,depth:a,text:aj}],body:ak,excerpt:ak,dir:al,path:"\u002F中间件\u002F20200603\u002FRedis总结",extension:e,title:ac,url:"\u002Fblog-code\u002Fview\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20200603\u002FRedis$E6$80$BB$E7$BB$93\u002F",createAt:new Date(1591142400000),updateAt:new Date(1591142400000),attributes:[{name:f,value:am},{name:g,value:am},{name:h,value:al,url:"\u002Fblog-code\u002Fpage\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20200603\u002F1\u002F"}]},{slug:an,description:k,createdAt:p,updatedAt:p,toc:[],body:ao,excerpt:ao,dir:ap,path:"\u002F框架\u002F20200602\u002FTaf框架",extension:e,title:an,url:"\u002Fblog-code\u002Fview\u002F$E6$A1$86$E6$9E$B6\u002F20200602\u002FTaf$E6$A1$86$E6$9E$B6\u002F",createAt:new Date(1591056000000),updateAt:new Date(1591056000000),attributes:[{name:f,value:q},{name:g,value:q},{name:h,value:ap,url:"\u002Fblog-code\u002Fpage\u002F$E6$A1$86$E6$9E$B6\u002F20200602\u002F1\u002F"}]},{slug:aq,description:"ES的数据结构：index -\u003E type -\u003E document -\u003E field。\n每一个索引会被分为多个shard，每个shard保存部分数据，分别放在不同节点上。\nshard有主shard允许读写，从shard允许读，从shard会与主shard同步数据。\nES集群会选举出一个主节点，负责维护索引元数据和管理主shard和从shard。\nES写数据请求：客户端选择一个节点作为自己的协调节点，协调节点根据请求文档进行路由。\n把请求转发给主shard所在的节点，当从shard也同步完成了，协调节点才会给客户端响应。\nES读数据请求：客户端选择一个节点作为自己的协调节点，协调节点根据请求文档进行路由。\n在主shard和全部从shard节点上轮询一个节点进行请求转发，然后把结果返回给客户端。",createdAt:p,updatedAt:p,toc:[],body:ar,excerpt:ar,dir:as,path:"\u002F中间件\u002F20200602\u002FElasticSearch总结",extension:e,title:aq,url:"\u002Fblog-code\u002Fview\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20200602\u002FElasticSearch$E6$80$BB$E7$BB$93\u002F",createAt:new Date(1591056000000),updateAt:new Date(1591056000000),attributes:[{name:f,value:q},{name:g,value:q},{name:h,value:as,url:"\u002Fblog-code\u002Fpage\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20200602\u002F1\u002F"}]},{slug:at,description:k,createdAt:au,updatedAt:au,toc:[{id:av,depth:a,text:av},{id:"kafka端",depth:a,text:"Kafka端"},{id:aw,depth:a,text:aw}],body:ax,excerpt:ax,dir:ay,path:"\u002F中间件\u002F20200601\u002FMQ总结",extension:e,title:at,url:"\u002Fblog-code\u002Fview\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20200601\u002FMQ$E6$80$BB$E7$BB$93\u002F",createAt:new Date(1590969600000),updateAt:new Date(1590969600000),attributes:[{name:f,value:az},{name:g,value:az},{name:h,value:ay,url:"\u002Fblog-code\u002Fpage\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20200601\u002F1\u002F"}]},{slug:aA,description:aB,createdAt:aC,updatedAt:aC,toc:[],body:aD,excerpt:aD,dir:aE,path:"\u002Fjava\u002F20200518\u002FJava引用类型",extension:e,title:aA,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20200518\u002FJava$E5$BC$95$E7$94$A8$E7$B1$BB$E5$9E$8B\u002F",createAt:new Date(1589760000000),updateAt:new Date(1589760000000),attributes:[{name:f,value:aF},{name:g,value:aF},{name:h,value:aE,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20200518\u002F1\u002F"}]}]}],fetch:{},mutations:void 0}}(2,"text","element","root",".md","createAt","updateAt","sort","wide","p","","\n","2020-07-03T00:00:00.000Z","\u002F分布式\u002F20200703","2020-07-03","2020-06-02T00:00:00.000Z","2020-06-02","\u002Fblog-code\u002Fpage\u002F1\u002F",10,10000,"青春猪头-牧之原翔子-江之岛","Spring事务总结","2020-07-07T00:00:00.000Z",{},"\u002F框架\u002F20200707","2020-07-07","分布式限流",{},"\u002Fblog-code\u002Fpage\u002F$E5$88$86$E5$B8$83$E5$BC$8F\u002F20200703\u002F1\u002F","API网关总结",{},"h1","服务接入","a","true",-1,"span","icon","icon-link","Java并发","2020-06-17T00:00:00.000Z","偏向锁","获取轻量级锁","释放轻量级锁","重量级锁","锁消除","锁优化","锁升级与锁降级",{},"\u002Fjava\u002F20200617","2020-06-17","MySQL总结","2020-06-09T00:00:00.000Z",{},"\u002F中间件\u002F20200609","2020-06-09","Redis总结","2020-06-03T00:00:00.000Z","string","list","hash","set","哨兵集群选举","哨兵集群的数据丢失",{},"\u002F中间件\u002F20200603","2020-06-03","Taf框架",{},"\u002F框架\u002F20200602","ElasticSearch总结",{},"\u002F中间件\u002F20200602","MQ总结","2020-06-01T00:00:00.000Z","生产端","消费端",{},"\u002F中间件\u002F20200601","2020-06-01","Java引用类型","java除了基本类型以外，其余的都是引用类型。\n而java的引用类型有四种：强引用，软引用，弱引用和虚引用。\n除了强引用外，其余的引用都是抽象类Reference的子类。","2020-05-18T00:00:00.000Z",{},"\u002Fjava\u002F20200518","2020-05-18")));