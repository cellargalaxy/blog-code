__NUXT_JSONP__("/page/3", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC){w.type=b;w.children=[];A.type=b;A.children=[];D.type=b;D.children=[];G.type=b;G.children=[];K.type=b;K.children=[];N.type=b;N.children=[{type:i,tag:O,props:{id:P},children:[{type:i,tag:Q,props:{ariaHidden:R,href:"#%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%85%A5",tabIndex:S},children:[{type:i,tag:T,props:{className:[U,V]},children:[]}]},{type:j,value:P}]},{type:j,value:W},{type:i,tag:X,props:{},children:[{type:j,value:"API网关最重要的功能就是提供服务的统一接入。\n通常是外部服务统一经过API网关请求到内部不同的服务。\n这样内部服务不会直接暴露在外部，保护了内部服务的安全。\n外部服务也只需要面向API网关进行对接即可，不用跟内部各种异构的服务打交道。"}]}];af.type=b;af.children=[{type:i,tag:O,props:{id:"java内存模型jmm"},children:[{type:i,tag:Q,props:{ariaHidden:R,href:"#java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8Bjmm",tabIndex:S},children:[{type:i,tag:T,props:{className:[U,V]},children:[]}]},{type:j,value:"java内存模型(JMM)"}]},{type:j,value:W},{type:i,tag:X,props:{},children:[{type:j,value:"JMM模型下，每个线程都有自己的本地内存，线程对内存的操作也是先操作本地内存。\n之后才将本地内存的数据刷新到主内存里，让各个线程更新共享。"}]}];ak.type=b;ak.children=[];av.type=b;av.children=[];aA.type=b;aA.children=[];return {data:[{siteConfig:{siteName:"无名の窝",siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:q},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:r,urlReplace:{"^/file/blog/code":"https:\u002F\u002Foracleamd1.dynv6.net\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:s,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:t,type:g},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:t,type:g},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:g},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:g},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:g},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:g},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:g},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:g}]}},homeConfig:{brandInterval:s,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1659171924605),rootPath:q,crumbs:[],pageSize:r,total:115,currentPage:3,files:[{slug:u,description:h,createdAt:v,updatedAt:v,toc:[],body:w,excerpt:w,dir:x,path:"\u002F框架\u002F20200714\u002FSpring Bean总结",extension:c,title:u,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20200714\u002FSpring Bean总结\u002F",createAt:new Date(1594684800000),updateAt:new Date(1594684800000),attributes:[{name:d,value:y},{name:e,value:y},{name:f,value:x,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20200714\u002F1\u002F"}]},{slug:z,description:h,createdAt:k,updatedAt:k,toc:[],body:A,excerpt:A,dir:l,path:"\u002F分布式\u002F20200709\u002F分布式事务",extension:c,title:z,url:"\u002Fblog-code\u002Fview\u002F分布式\u002F20200709\u002F分布式事务\u002F",createAt:new Date(1594252800000),updateAt:new Date(1594252800000),attributes:[{name:d,value:m},{name:e,value:m},{name:f,value:l,url:B}]},{slug:C,description:h,createdAt:k,updatedAt:k,toc:[],body:D,excerpt:D,dir:l,path:"\u002F分布式\u002F20200709\u002F分布式ID",extension:c,title:C,url:"\u002Fblog-code\u002Fview\u002F分布式\u002F20200709\u002F分布式ID\u002F",createAt:new Date(1594252800000),updateAt:new Date(1594252800000),attributes:[{name:d,value:m},{name:e,value:m},{name:f,value:l,url:B}]},{slug:E,description:h,createdAt:F,updatedAt:F,toc:[{id:"required",depth:a,text:"REQUIRED"},{id:"nested",depth:a,text:"NESTED"},{id:"requires_new",depth:a,text:"REQUIRES_NEW"},{id:"mandatory",depth:a,text:"MANDATORY"},{id:"supports",depth:a,text:"SUPPORTS"},{id:"not_supported",depth:a,text:"NOT_SUPPORTED"},{id:"never",depth:a,text:"NEVER"}],body:G,excerpt:G,dir:H,path:"\u002F框架\u002F20200707\u002FSpring事务总结",extension:c,title:E,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20200707\u002FSpring事务总结\u002F",createAt:new Date(1594080000000),updateAt:new Date(1594080000000),attributes:[{name:d,value:I},{name:e,value:I},{name:f,value:H,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20200707\u002F1\u002F"}]},{slug:J,description:h,createdAt:n,updatedAt:n,toc:[],body:K,excerpt:K,dir:o,path:"\u002F分布式\u002F20200703\u002F分布式限流",extension:c,title:J,url:"\u002Fblog-code\u002Fview\u002F分布式\u002F20200703\u002F分布式限流\u002F",createAt:new Date(1593734400000),updateAt:new Date(1593734400000),attributes:[{name:d,value:p},{name:e,value:p},{name:f,value:o,url:L}]},{slug:M,description:"服务接入\nAPI网关最重要的功能就是提供服务的统一接入。\n通常是外部服务统一经过API网关请求到内部不同的服务。\n这样内部服务不会直接暴露在外部，保护了内部服务的安全。\n外部服务也只需要面向API网关进行对接即可，不用跟内部各种异构的服务打交道。",createdAt:n,updatedAt:n,toc:[],body:N,excerpt:N,dir:o,path:"\u002F分布式\u002F20200703\u002FAPI网关总结",extension:c,title:M,url:"\u002Fblog-code\u002Fview\u002F分布式\u002F20200703\u002FAPI网关总结\u002F",createAt:new Date(1593734400000),updateAt:new Date(1593734400000),attributes:[{name:d,value:p},{name:e,value:p},{name:f,value:o,url:L}]},{slug:Y,description:"java内存模型(JMM)\nJMM模型下，每个线程都有自己的本地内存，线程对内存的操作也是先操作本地内存。\n之后才将本地内存的数据刷新到主内存里，让各个线程更新共享。",createdAt:Z,updatedAt:Z,toc:[{id:_,depth:a,text:_},{id:$,depth:a,text:$},{id:aa,depth:a,text:aa},{id:ab,depth:a,text:ab},{id:ac,depth:a,text:ac},{id:ad,depth:a,text:ad},{id:ae,depth:a,text:ae}],body:af,excerpt:af,dir:ag,path:"\u002Fjava\u002F20200617\u002FJava并发",extension:c,title:Y,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20200617\u002FJava并发\u002F",createAt:new Date(1592352000000),updateAt:new Date(1592352000000),attributes:[{name:d,value:ah},{name:e,value:ah},{name:f,value:ag,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20200617\u002F1\u002F"}]},{slug:ai,description:h,createdAt:aj,updatedAt:aj,toc:[],body:ak,excerpt:ak,dir:al,path:"\u002F中间件\u002F20200609\u002FMySQL总结",extension:c,title:ai,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20200609\u002FMySQL总结\u002F",createAt:new Date(1591660800000),updateAt:new Date(1591660800000),attributes:[{name:d,value:am},{name:e,value:am},{name:f,value:al,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20200609\u002F1\u002F"}]},{slug:an,description:h,createdAt:ao,updatedAt:ao,toc:[{id:ap,depth:a,text:ap},{id:aq,depth:a,text:aq},{id:ar,depth:a,text:ar},{id:as,depth:a,text:as},{id:"sorted-set",depth:a,text:"sorted set"},{id:"rdb",depth:a,text:"RDB"},{id:"aof",depth:a,text:"AOF"},{id:at,depth:a,text:at},{id:au,depth:a,text:au}],body:av,excerpt:av,dir:aw,path:"\u002F中间件\u002F20200603\u002FRedis总结",extension:c,title:an,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20200603\u002FRedis总结\u002F",createAt:new Date(1591142400000),updateAt:new Date(1591142400000),attributes:[{name:d,value:ax},{name:e,value:ax},{name:f,value:aw,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20200603\u002F1\u002F"}]},{slug:ay,description:h,createdAt:az,updatedAt:az,toc:[],body:aA,excerpt:aA,dir:aB,path:"\u002F框架\u002F20200602\u002FTaf框架",extension:c,title:ay,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20200602\u002FTaf框架\u002F",createAt:new Date(1591056000000),updateAt:new Date(1591056000000),attributes:[{name:d,value:aC},{name:e,value:aC},{name:f,value:aB,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20200602\u002F1\u002F"}]}]}],fetch:{},mutations:void 0}}(2,"root",".md","createAt","updateAt","sort","wide","","element","text","2020-07-09T00:00:00.000Z","\u002F分布式\u002F20200709","2020-07-09","2020-07-03T00:00:00.000Z","\u002F分布式\u002F20200703","2020-07-03","\u002Fblog-code\u002Fpage\u002F1\u002F",10,10000,"青春猪头-牧之原翔子-江之岛","Spring Bean总结","2020-07-14T00:00:00.000Z",{},"\u002F框架\u002F20200714","2020-07-14","分布式事务",{},"\u002Fblog-code\u002Fpage\u002F分布式\u002F20200709\u002F1\u002F","分布式ID",{},"Spring事务总结","2020-07-07T00:00:00.000Z",{},"\u002F框架\u002F20200707","2020-07-07","分布式限流",{},"\u002Fblog-code\u002Fpage\u002F分布式\u002F20200703\u002F1\u002F","API网关总结",{},"h1","服务接入","a","true",-1,"span","icon","icon-link","\n","p","Java并发","2020-06-17T00:00:00.000Z","偏向锁","获取轻量级锁","释放轻量级锁","重量级锁","锁消除","锁优化","锁升级与锁降级",{},"\u002Fjava\u002F20200617","2020-06-17","MySQL总结","2020-06-09T00:00:00.000Z",{},"\u002F中间件\u002F20200609","2020-06-09","Redis总结","2020-06-03T00:00:00.000Z","string","list","hash","set","哨兵集群选举","哨兵集群的数据丢失",{},"\u002F中间件\u002F20200603","2020-06-03","Taf框架","2020-06-02T00:00:00.000Z",{},"\u002F框架\u002F20200602","2020-06-02")));