__NUXT_JSONP__("/page/9", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw){x.type=c;x.children=[];A.type=c;A.children=[{type:b,tag:n,props:{},children:[{type:a,value:"JDBC是通过"},{type:b,tag:k,props:{},children:[{type:a,value:"Class.forName(String)"}]},{type:a,value:"反射加载所需的驱动类。然后就可以通过jdk自带的"},{type:b,tag:k,props:{},children:[{type:a,value:"DriverManager"}]},{type:a,value:"的静态方法获取一个数据库连接："},{type:b,tag:k,props:{},children:[{type:a,value:"Connection"}]},{type:a,value:"。通过这个Connection我们就可以对数据库进行增删查改了。要对数据库进行增删查改还是离不开sql。需要使用sql，调用Connection的方法创建一个"},{type:b,tag:k,props:{},children:[{type:a,value:"Statement"}]},{type:a,value:"或者"},{type:b,tag:k,props:{},children:[{type:a,value:"PreparedStatement"}]},{type:a,value:"对象。创建Statement就利用一句完整的sql就好了，但是不防止注入。而PreparedStatement的sql在参数上用问号代替，作为占位符。之后再填充这些占位符，其占位符是用下标指定，下标从1开始，是防止注入的。创建好PreparedStatement执行。在这里可以设置事务。如果是select，执行后返回一个"},{type:b,tag:k,props:{},children:[{type:a,value:"ResultSet"}]},{type:a,value:"对象作为返回结果。可以通过这个结果获取列名，元组的数据等。如果是insert，delete或者update，会返回一个int，表示受此命令影响的行数。"}]}];E.type=c;E.children=[{type:b,tag:n,props:{},children:[{type:a,value:"简单明了入门Netty，还是看官方文档来的好："},{type:b,tag:q,props:{href:"https:\u002F\u002Fnetty.io\u002Fwiki\u002Fuser-guide-for-4.x.html",rel:[F,G,H],target:I,title:J},children:[{type:a,value:J}]},{type:a,value:"。接下来是我看我这篇文档之后的加工，想看的深一点可以看"},{type:b,tag:q,props:{href:"https:\u002F\u002Fsylvanassun.github.io\u002F2017\u002F11\u002F30\u002F2017-11-30-netty_introduction\u002F",rel:[F,G,H],target:I,title:K},children:[{type:a,value:K}]},{type:a,value:"。最好是有些NIO的概念和基础。依照官方文档进行改进，下面代码是要实现一个时间服务器。功能为客户端连接到服务端时，服务端主动发送一个long时间戳给客户端，客户端收到这个时间后打印出来。并且客户端向服务端发送自己的long时间戳后关闭连接，服务器打印收到客户端的时间后也关闭连接。"}]}];P.type=c;P.children=[];U.type=c;U.children=[{type:b,tag:"h1",props:{id:"method对象"},children:[{type:b,tag:q,props:{ariaHidden:"true",href:"#method%E5%AF%B9%E8%B1%A1",tabIndex:-1},children:[{type:b,tag:"span",props:{className:["icon","icon-link"]},children:[]}]},{type:a,value:"Method对象"}]},{type:a,value:V},{type:b,tag:n,props:{},children:[{type:a,value:"既然是java的反射，就躲不开class对象。class对象保存着对应的Method，Field，Constructor。接下来以Method为例~~（因为我只看了Method）~~。"}]},{type:a,value:V},{type:b,tag:n,props:{},children:[{type:a,value:"不知为何，可能是为了安全把，class并不会直接暴露Method，这个Method对象叫做root对象。而是当需要获取这个rootMethod时，再new一个Method代理这个rootMethod。因此每次获取的Method对象都是新的对象。"}]}];ae.type=c;ae.children=[];aj.type=c;aj.children=[];ao.type=c;ao.children=[];as.type=c;as.children=[];av.type=c;av.children=[];return {data:[{siteConfig:{siteName:"无名の窝",siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:r},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:s,urlReplace:{"^/file/blog/code":"https:\u002F\u002Foracleamd1.dynv6.net\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:t,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:u,type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:u,type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:h}]}},homeConfig:{brandInterval:t,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1659171925967),rootPath:r,crumbs:[],pageSize:s,total:115,currentPage:9,files:[{slug:v,description:j,createdAt:l,updatedAt:l,toc:[{id:w,depth:i,text:w},{id:"innodb的锁",depth:i,text:"InnoDB的锁"}],body:x,excerpt:x,dir:y,path:"\u002F中间件\u002F20180510\u002Fmysql杂七杂八",extension:d,title:v,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20180510\u002Fmysql杂七杂八\u002F",createAt:new Date(1525910400000),updateAt:new Date(1525910400000),attributes:[{name:e,value:m},{name:f,value:m},{name:g,value:y,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20180510\u002F1\u002F"}]},{slug:z,description:"JDBC是通过Class.forName(String)反射加载所需的驱动类。然后就可以通过jdk自带的DriverManager的静态方法获取一个数据库连接：Connection。通过这个Connection我们就可以对数据库进行增删查改了。要对数据库进行增删查改还是离不开sql。需要使用sql，调用Connection的方法创建一个Statement或者PreparedStatement对象。创建Statement就利用一句完整的sql就好了，但是不防止注入。而PreparedStatement的sql在参数上用问号代替，作为占位符。之后再填充这些占位符，其占位符是用下标指定，下标从1开始，是防止注入的。创建好PreparedStatement执行。在这里可以设置事务。如果是select，执行后返回一个ResultSet对象作为返回结果。可以通过这个结果获取列名，元组的数据等。如果是insert，delete或者update，会返回一个int，表示受此命令影响的行数。",createdAt:l,updatedAt:l,toc:[],body:A,excerpt:A,dir:B,path:"\u002Fjava\u002F20180510\u002FJDBC复习",extension:d,title:z,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180510\u002FJDBC复习\u002F",createAt:new Date(1525910400000),updateAt:new Date(1525910400000),attributes:[{name:e,value:m},{name:f,value:m},{name:g,value:B,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180510\u002F1\u002F"}]},{slug:C,description:"简单明了入门Netty，还是看官方文档来的好：Netty.docs: User guide for 4.x。接下来是我看我这篇文档之后的加工，想看的深一点可以看Netty的那点事儿。最好是有些NIO的概念和基础。依照官方文档进行改进，下面代码是要实现一个时间服务器。功能为客户端连接到服务端时，服务端主动发送一个long时间戳给客户端，客户端收到这个时间后打印出来。并且客户端向服务端发送自己的long时间戳后关闭连接，服务器打印收到客户端的时间后也关闭连接。",createdAt:D,updatedAt:D,toc:[],body:E,excerpt:E,dir:L,path:"\u002Fjava\u002F20180509\u002FNetty学习",extension:d,title:C,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180509\u002FNetty学习\u002F",createAt:new Date(1525824000000),updateAt:new Date(1525824000000),attributes:[{name:e,value:M},{name:f,value:M},{name:g,value:L,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180509\u002F1\u002F"}]},{slug:N,description:j,createdAt:O,updatedAt:O,toc:[],body:P,excerpt:P,dir:Q,path:"\u002F数据结构\u002F20180508\u002F再看ConcurrentHashMap源码（1.7与1.8）",extension:d,title:N,url:"\u002Fblog-code\u002Fview\u002F数据结构\u002F20180508\u002F再看ConcurrentHashMap源码（1.7与1.8）\u002F",createAt:new Date(1525737600000),updateAt:new Date(1525737600000),attributes:[{name:e,value:R},{name:f,value:R},{name:g,value:Q,url:"\u002Fblog-code\u002Fpage\u002F数据结构\u002F20180508\u002F1\u002F"}]},{slug:S,description:"Method对象\n既然是java的反射，就躲不开class对象。class对象保存着对应的Method，Field，Constructor。接下来以Method为例~~（因为我只看了Method）~~。\n不知为何，可能是为了安全把，class并不会直接暴露Method，这个Method对象叫做root对象。而是当需要获取这个rootMethod时，再new一个Method代理这个rootMethod。因此每次获取的Method对象都是新的对象。",createdAt:T,updatedAt:T,toc:[],body:U,excerpt:U,dir:W,path:"\u002Fjava\u002F20180430\u002Fjava反射源码",extension:d,title:S,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180430\u002Fjava反射源码\u002F",createAt:new Date(1525046400000),updateAt:new Date(1525046400000),attributes:[{name:e,value:X},{name:f,value:X},{name:g,value:W,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180430\u002F1\u002F"}]},{slug:Y,description:j,createdAt:Z,updatedAt:Z,toc:[{id:_,depth:i,text:_},{id:$,depth:i,text:$},{id:aa,depth:i,text:aa},{id:ab,depth:i,text:ab},{id:ac,depth:i,text:ac},{id:ad,depth:i,text:ad}],body:ae,excerpt:ae,dir:af,path:"\u002F其他\u002F20180421\u002F拖沓下来的各种笔试笔记",extension:d,title:Y,url:"\u002Fblog-code\u002Fview\u002F其他\u002F20180421\u002F拖沓下来的各种笔试笔记\u002F",createAt:new Date(1524268800000),updateAt:new Date(1524268800000),attributes:[{name:e,value:ag},{name:f,value:ag},{name:g,value:af,url:"\u002Fblog-code\u002Fpage\u002F其他\u002F20180421\u002F1\u002F"}]},{slug:ah,description:j,createdAt:ai,updatedAt:ai,toc:[],body:aj,excerpt:aj,dir:ak,path:"\u002Fjava\u002F20180418\u002FNIO学习笔记",extension:d,title:ah,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180418\u002FNIO学习笔记\u002F",createAt:new Date(1524009600000),updateAt:new Date(1524009600000),attributes:[{name:e,value:al},{name:f,value:al},{name:g,value:ak,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180418\u002F1\u002F"}]},{slug:am,description:j,createdAt:an,updatedAt:an,toc:[],body:ao,excerpt:ao,dir:ap,path:"\u002F折腾\u002F20180412\u002Fvps重装系统的习惯性操作",extension:d,title:am,url:"\u002Fblog-code\u002Fview\u002F折腾\u002F20180412\u002Fvps重装系统的习惯性操作\u002F",createAt:new Date(1523491200000),updateAt:new Date(1523491200000),attributes:[{name:e,value:aq},{name:f,value:aq},{name:g,value:ap,url:"\u002Fblog-code\u002Fpage\u002F折腾\u002F20180412\u002F1\u002F"}]},{slug:ar,description:j,createdAt:o,updatedAt:o,toc:[],body:as,excerpt:as,dir:at,path:"\u002F框架\u002F20180406\u002Fspring boot 使用 mongodb",extension:d,title:ar,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20180406\u002Fspring boot 使用 mongodb\u002F",createAt:new Date(1522972800000),updateAt:new Date(1522972800000),attributes:[{name:e,value:p},{name:f,value:p},{name:g,value:at,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20180406\u002F1\u002F"}]},{slug:au,description:j,createdAt:o,updatedAt:o,toc:[],body:av,excerpt:av,dir:aw,path:"\u002F折腾\u002F20180406\u002Flinux下mongodb的安装与配置",extension:d,title:au,url:"\u002Fblog-code\u002Fview\u002F折腾\u002F20180406\u002Flinux下mongodb的安装与配置\u002F",createAt:new Date(1522972800000),updateAt:new Date(1522972800000),attributes:[{name:e,value:p},{name:f,value:p},{name:g,value:aw,url:"\u002Fblog-code\u002Fpage\u002F折腾\u002F20180406\u002F1\u002F"}]}]}],fetch:{},mutations:void 0}}("text","element","root",".md","createAt","updateAt","sort","wide",2,"","code","2018-05-10T00:00:00.000Z","2018-05-10","p","2018-04-06T00:00:00.000Z","2018-04-06","a","\u002Fblog-code\u002Fpage\u002F1\u002F",10,10000,"青春猪头-牧之原翔子-江之岛","mysql杂七杂八","引擎的锁",{},"\u002F中间件\u002F20180510","JDBC复习",{},"\u002Fjava\u002F20180510","Netty学习","2018-05-09T00:00:00.000Z",{},"nofollow","noopener","noreferrer","_blank","Netty.docs: User guide for 4.x","Netty的那点事儿","\u002Fjava\u002F20180509","2018-05-09","再看ConcurrentHashMap源码（1.7与1.8）","2018-05-08T00:00:00.000Z",{},"\u002F数据结构\u002F20180508","2018-05-08","java反射源码","2018-04-30T00:00:00.000Z",{},"\n","\u002Fjava\u002F20180430","2018-04-30","拖沓下来的各种笔试笔记","2018-04-21T00:00:00.000Z","接口","lambda表达式和函数式接口","容器接口","子接口","抽象容器类","实现类",{},"\u002F其他\u002F20180421","2018-04-21","NIO学习笔记","2018-04-18T00:00:00.000Z",{},"\u002Fjava\u002F20180418","2018-04-18","vps重装系统的习惯性操作","2018-04-12T00:00:00.000Z",{},"\u002F折腾\u002F20180412","2018-04-12","spring boot 使用 mongodb",{},"\u002F框架\u002F20180406","linux下mongodb的安装与配置",{},"\u002F折腾\u002F20180406")));