__NUXT_JSONP__("/page/%E4%B8%AD%E9%97%B4%E4%BB%B6/1", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar){u.type=g;u.children=[{type:h,tag:i,props:{},children:[{type:f,value:q}]}];z.type=g;z.children=[{type:h,tag:i,props:{},children:[{type:f,value:x}]}];E.type=g;E.children=[];P.type=g;P.children=[];U.type=g;U.children=[{type:h,tag:i,props:{},children:[{type:f,value:"ES的数据结构：index -\u003E type -\u003E document -\u003E field。"}]},{type:f,value:l},{type:h,tag:i,props:{},children:[{type:f,value:"每一个索引会被分为多个shard，每个shard保存部分数据，分别放在不同节点上。\nshard有主shard允许读写，从shard允许读，从shard会与主shard同步数据。\nES集群会选举出一个主节点，负责维护索引元数据和管理主shard和从shard。"}]},{type:f,value:l},{type:h,tag:i,props:{},children:[{type:f,value:"ES写数据请求：客户端选择一个节点作为自己的协调节点，协调节点根据请求文档进行路由。\n把请求转发给主shard所在的节点，当从shard也同步完成了，协调节点才会给客户端响应。"}]},{type:f,value:l},{type:h,tag:i,props:{},children:[{type:f,value:"ES读数据请求：客户端选择一个节点作为自己的协调节点，协调节点根据请求文档进行路由。\n在主shard和全部从shard节点上轮询一个节点进行请求转发，然后把结果返回给客户端。"}]}];$.type=g;$.children=[];ae.type=g;ae.children=[];ak.type=g;ak.children=[{type:h,tag:i,props:{},children:[{type:f,value:ai}]}];ap.type=g;ap.children=[];return {data:[{navbarConfig:{brandText:"无名の窝",brandUrl:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}]},homeConfig:{brandInterval:10000,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1652020606030),basePath:"\u002Fpage",folderPath:"中间件",pageSize:10,total:13,currentPage:1,files:[{slug:m,toc:[],body:k,dir:n,path:"\u002F中间件\u002F20220428\u002FOLTP、OLAP与HTAP",extension:b,createdAt:"2022-05-08T14:33:33.627Z",updatedAt:"2022-05-08T14:33:33.631Z",excerpt:k,title:m,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20220428\u002FOLTP、OLAP与HTAP",createAt:new Date(1652020413627),updateAt:new Date(1652020413631),attributes:[{name:c,value:o},{name:d,value:o},{name:e,value:n,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20220428\u002F1\u002F"}]},{slug:p,description:q,createdAt:"2022-03-04T00:00:00.000Z",updatedAt:"2022-03-07T00:00:00.000Z",toc:[{id:"wal",depth:a,text:"WAL"},{id:r,depth:a,text:r},{id:"sstable",depth:a,text:"SSTable"},{id:"compaction",depth:3,text:"Compaction"},{id:s,depth:a,text:s},{id:t,depth:a,text:t},{id:"column-family",depth:a,text:"Column Family"}],body:u,excerpt:u,dir:v,path:"\u002F中间件\u002F20220304\u002FRocksDB初步了解",extension:b,title:p,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20220304\u002FRocksDB初步了解",createAt:new Date(1646352000000),updateAt:new Date(1646611200000),attributes:[{name:c,value:"2022-03-04"},{name:d,value:"2022-03-07"},{name:e,value:v,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20220304\u002F1\u002F"}]},{slug:w,description:x,createdAt:y,updatedAt:y,toc:[],body:z,excerpt:z,dir:A,path:"\u002F中间件\u002F20210427\u002FRocketMQ原理简介",extension:b,title:w,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20210427\u002FRocketMQ原理简介",createAt:new Date(1619481600000),updateAt:new Date(1619481600000),attributes:[{name:c,value:B},{name:d,value:B},{name:e,value:A,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20210427\u002F1\u002F"}]},{slug:C,description:j,createdAt:D,updatedAt:D,toc:[],body:E,excerpt:E,dir:F,path:"\u002F中间件\u002F20200609\u002FMySQL总结",extension:b,title:C,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20200609\u002FMySQL总结",createAt:new Date(1591660800000),updateAt:new Date(1591660800000),attributes:[{name:c,value:G},{name:d,value:G},{name:e,value:F,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20200609\u002F1\u002F"}]},{slug:H,description:j,createdAt:I,updatedAt:I,toc:[{id:J,depth:a,text:J},{id:K,depth:a,text:K},{id:L,depth:a,text:L},{id:M,depth:a,text:M},{id:"sorted-set",depth:a,text:"sorted set"},{id:"rdb",depth:a,text:"RDB"},{id:"aof",depth:a,text:"AOF"},{id:N,depth:a,text:N},{id:O,depth:a,text:O}],body:P,excerpt:P,dir:Q,path:"\u002F中间件\u002F20200603\u002FRedis总结",extension:b,title:H,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20200603\u002FRedis总结",createAt:new Date(1591142400000),updateAt:new Date(1591142400000),attributes:[{name:c,value:R},{name:d,value:R},{name:e,value:Q,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20200603\u002F1\u002F"}]},{slug:S,description:"ES的数据结构：index -\u003E type -\u003E document -\u003E field。\n每一个索引会被分为多个shard，每个shard保存部分数据，分别放在不同节点上。\nshard有主shard允许读写，从shard允许读，从shard会与主shard同步数据。\nES集群会选举出一个主节点，负责维护索引元数据和管理主shard和从shard。\nES写数据请求：客户端选择一个节点作为自己的协调节点，协调节点根据请求文档进行路由。\n把请求转发给主shard所在的节点，当从shard也同步完成了，协调节点才会给客户端响应。\nES读数据请求：客户端选择一个节点作为自己的协调节点，协调节点根据请求文档进行路由。\n在主shard和全部从shard节点上轮询一个节点进行请求转发，然后把结果返回给客户端。",createdAt:T,updatedAt:T,toc:[],body:U,excerpt:U,dir:V,path:"\u002F中间件\u002F20200602\u002FElasticSearch总结",extension:b,title:S,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20200602\u002FElasticSearch总结",createAt:new Date(1591056000000),updateAt:new Date(1591056000000),attributes:[{name:c,value:W},{name:d,value:W},{name:e,value:V,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20200602\u002F1\u002F"}]},{slug:X,description:j,createdAt:Y,updatedAt:Y,toc:[{id:Z,depth:a,text:Z},{id:"kafka端",depth:a,text:"Kafka端"},{id:_,depth:a,text:_}],body:$,excerpt:$,dir:aa,path:"\u002F中间件\u002F20200601\u002FMQ总结",extension:b,title:X,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20200601\u002FMQ总结",createAt:new Date(1590969600000),updateAt:new Date(1590969600000),attributes:[{name:c,value:ab},{name:d,value:ab},{name:e,value:aa,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20200601\u002F1\u002F"}]},{slug:ac,description:j,createdAt:ad,updatedAt:ad,toc:[],body:ae,excerpt:ae,dir:af,path:"\u002F中间件\u002F20200509\u002F一些SQL知识点",extension:b,title:ac,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20200509\u002F一些SQL知识点",createAt:new Date(1588982400000),updateAt:new Date(1588982400000),attributes:[{name:c,value:ag},{name:d,value:ag},{name:e,value:af,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20200509\u002F1\u002F"}]},{slug:ah,description:ai,createdAt:aj,updatedAt:aj,toc:[{id:"redlock",depth:a,text:"Redlock"}],body:ak,excerpt:ak,dir:al,path:"\u002F中间件\u002F20200416\u002Fredis锁与redis计数器",extension:b,title:ah,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20200416\u002Fredis锁与redis计数器",createAt:new Date(1586995200000),updateAt:new Date(1586995200000),attributes:[{name:c,value:am},{name:d,value:am},{name:e,value:al,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20200416\u002F1\u002F"}]},{slug:an,description:j,createdAt:ao,updatedAt:ao,toc:[{id:"mysql的乐观锁",depth:a,text:"Mysql的乐观锁"},{id:"mysql的悲观锁",depth:a,text:"Mysql的悲观锁"}],body:ap,excerpt:ap,dir:aq,path:"\u002F中间件\u002F20181222\u002FMysql，Redis与Zookeeper实现分布式锁",extension:b,title:an,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20181222\u002FMysql，Redis与Zookeeper实现分布式锁",createAt:new Date(1545436800000),updateAt:new Date(1545436800000),attributes:[{name:c,value:ar},{name:d,value:ar},{name:e,value:aq,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20181222\u002F1\u002F"}]}]}],fetch:{},mutations:k}}(2,".md","createAt","updateAt","sort","text","root","element","p","",void 0,"\n","OLTP、OLAP与HTAP","\u002F中间件\u002F20220428","2022-05-08","RocksDB初步了解","RocksDB是一个嵌入式的KV数据库，由Facebook基于levelDB开发。\n多数情况下，看一把RocksDB看做是一个在本地的，数据落盘的，大数据量的Redis，且访问性能高于远端的Redis。\nRocksDB底层使用LSM树实现，但LSM树实际上并不是一棵具体的树，其实是一套存储处理算法。\nLSM树对KV的持久化，保持较高性能的读的基础上，实现了追加写，提供了写入的性能。","mentable","读操作","写操作",{},"\u002F中间件\u002F20220304","RocketMQ原理简介","RocketMQ是一个用java实现的队列模型消息中间件，由阿里开发，之后贡献给了Apache。","2021-04-27T00:00:00.000Z",{},"\u002F中间件\u002F20210427","2021-04-27","MySQL总结","2020-06-09T00:00:00.000Z",{},"\u002F中间件\u002F20200609","2020-06-09","Redis总结","2020-06-03T00:00:00.000Z","string","list","hash","set","哨兵集群选举","哨兵集群的数据丢失",{},"\u002F中间件\u002F20200603","2020-06-03","ElasticSearch总结","2020-06-02T00:00:00.000Z",{},"\u002F中间件\u002F20200602","2020-06-02","MQ总结","2020-06-01T00:00:00.000Z","生产端","消费端",{},"\u002F中间件\u002F20200601","2020-06-01","一些SQL知识点","2020-05-09T00:00:00.000Z",{},"\u002F中间件\u002F20200509","2020-05-09","redis锁与redis计数器","之前写过一篇分别用mysql，redis和zookeeper实现分布式锁，但写的比较简略。这次写个比较完整的redis锁和redis计数器的实现。","2020-04-16T00:00:00.000Z",{},"\u002F中间件\u002F20200416","2020-04-16","Mysql，Redis与Zookeeper实现分布式锁","2018-12-22T00:00:00.000Z",{},"\u002F中间件\u002F20181222","2018-12-22")));