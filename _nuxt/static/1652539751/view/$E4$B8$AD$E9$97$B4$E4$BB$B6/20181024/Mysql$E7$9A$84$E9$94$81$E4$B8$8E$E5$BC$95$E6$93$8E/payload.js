__NUXT_JSONP__("/view/$E4$B8$AD$E9$97$B4$E4$BB$B6/20181024/Mysql$E7$9A$84$E9$94$81$E4$B8$8E$E5$BC$95$E6$93$8E", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB){return {data:[{siteConfig:{siteName:Y,siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:10,urlReplace:{"^/file/blog/code":"http:\u002F\u002F123.207.79.108\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:Z,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:_,type:t},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:_,type:t},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:t},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:t},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:t},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:t},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:t},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:t}]}},homeConfig:{brandInterval:Z,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1652539757476),siteName:Y,file:{slug:$,description:R,createdAt:aa,updatedAt:aa,toc:[{id:J,depth:ab,text:J},{id:K,depth:ab,text:K}],body:{type:ac,children:[{type:a,value:e},{type:b,tag:u,props:{id:ad},children:[{type:b,tag:l,props:{href:"#%E4%B9%90%E8%A7%82%E9%94%81",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:ad}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"先不获取锁，认为写的时候一般数据不会被写的事务修改，但要提交数据的时候才检查数据是否被修改了。用于读多写少的情景。而检查数据是否被修改的方法一般是给数据添加版本号或者是时间戳。乐观锁数据库没有实现，需要我们自己实现。例如："}]},{type:a,value:e},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ae}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:L}]},{type:a,value:"version "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:S}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:D}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"#{id}"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:T}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:U}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:L}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:r}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"+"}]},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:N}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:D}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"#{id} and version=#{version}"}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:u,props:{id:aj},children:[{type:b,tag:l,props:{href:"#%E6%82%B2%E8%A7%82%E9%94%81",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:aj}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"认为别的事务很有可能会修改数据，因此自己修改数据时先获取锁，获取不到锁就等待。用于写多读少的情景。其中有两个分类：共享锁（读锁）和独占锁（写锁）。共享锁下只能加共享锁而不能加独占锁，独占锁下共享锁和独占锁都不能加。数据库已经实现了悲观锁。"}]},{type:a,value:e},{type:b,tag:ak,props:{id:J},children:[{type:b,tag:l,props:{href:"#%E5%85%B1%E4%BA%AB%E9%94%81",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:J}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"共享锁的用法是在sql后面加上"},{type:b,tag:v,props:{},children:[{type:a,value:"lock in share mode"}]},{type:a,value:al}]},{type:a,value:e},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:an}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:"  "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:E}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:S}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:D}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:N}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"lock"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"in"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"share"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"mode"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:ak,props:{id:K},children:[{type:b,tag:l,props:{href:"#%E7%8B%AC%E5%8D%A0%E9%94%81",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:K}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"独占锁的用法是在sql后面加上"},{type:b,tag:v,props:{},children:[{type:a,value:"for update"}]},{type:a,value:al}]},{type:a,value:e},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"#以免事务自动提交"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:U}]},{type:a,value:" autocommit "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"0"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:an}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ae}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:E}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:S}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:D}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:N}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"for"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:T}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:U}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ag}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:ah}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:D}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:u,props:{id:"innodb的行锁"},children:[{type:b,tag:l,props:{href:"#innodb%E7%9A%84%E8%A1%8C%E9%94%81",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:"InnoDB的行锁"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"当where有主键索引或者唯一索引，并且实际上mysql查询时候走了索引，InnoDB优先使用行锁。如果where的是普通索引，mysql会判断此索引的值区分度高低，高的走索引，使用行锁，否则都使用表锁。对于inser、delete和update，InnoDB会自动加排它锁，而select不加锁。但是，如果要操作表中大部分甚至全部数据，反而建议用表锁。\n优势：并发能力高\n劣势：开销大，加锁慢，容易出现死锁"}]},{type:a,value:e},{type:b,tag:u,props:{id:"innodb的间隙锁"},children:[{type:b,tag:l,props:{href:"#innodb%E7%9A%84%E9%97%B4%E9%9A%99%E9%94%81",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:"InnoDB的间隙锁"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"当where使用的是范围条件，在查询范围内但实际不存在的记录也会加锁，称为间隙锁。例如where id\u003E100，实际[...100,101,102]。大于103的数据虽然不存在，但仍会加锁，以避免幻读。"}]},{type:a,value:e},{type:b,tag:u,props:{id:"innodb的死锁"},children:[{type:b,tag:l,props:{href:"#innodb%E7%9A%84%E6%AD%BB%E9%94%81",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:"InnoDB的死锁"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"InnoDB里有表锁或者行锁，那么就可能两个不同事务先获取了锁1锁2，然后他们又先获取锁2锁1，就死锁了。\n"},{type:b,tag:at,props:{alt:R,"data-src":"http:\u002F\u002F123.207.79.108\u002Ffile\u002Ffile\u002Fblog\u002Fcode\u002F20181024\u002Fimg2.tbcdn.cn-L1-461-1-da89a5774d02b974b63bf08bf47f146c94e75909.png.1.png"},children:[]},{type:a,value:e},{type:b,tag:at,props:{alt:R,"data-src":"http:\u002F\u002F123.207.79.108\u002Ffile\u002Ffile\u002Fblog\u002Fcode\u002F20181024\u002Fimg1.tbcdn.cn-L1-461-1-e470063b82bb3d005f6935cb51ec656c2c1a3d1e.png.1.png"},children:[]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"死锁解决办法"}]},{type:a,value:e},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 查看当前的事务"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:E}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:V}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:X}]},{type:a,value:"INNODB_TRX"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 查看当前锁定的事务"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:E}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:V}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:X}]},{type:a,value:"INNODB_LOCKS"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 查看当前等锁的事务"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:E}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:V}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:X}]},{type:a,value:"INNODB_LOCK_WAITS"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:k}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 杀死进程"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"kill"}]},{type:a,value:" 进程ID\n"}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"减少死锁的办法："}]},{type:a,value:e},{type:b,tag:"ol",props:{},children:[{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"按统一顺序访问表或者行"}]},{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"尽量使用小事务"}]},{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"事务中尽可能一次锁定全部所需资源"}]},{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"降低隔离级别"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:u,props:{id:"myisam的读写锁"},children:[{type:b,tag:l,props:{href:"#myisam%E7%9A%84%E8%AF%BB%E5%86%99%E9%94%81",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:"MyISAM的读写锁"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"MyISAM不支持事务。MyISAM默认给insert、delete和update加写锁，给select加读锁。"}]},{type:a,value:e},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 锁定表"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"LOCK"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:au}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aw}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ay}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"["}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aw}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ay}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:L}]},{type:a,value:"…"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"]"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 解锁表"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"UNLOCK"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:au}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"因此MyISAM的读写是串行的。但也可以通过配置concurrent_insert字段设置。\nconcurrent_insert=0：不允许并发插入\nconcurrent_insert=1：如果表中没有空洞（即表中没有被删除的行），允许边读，边在表尾插入，默认。\nconcurrent_insert=2：无论有没有空洞，都允许在表尾插入。"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"而当读和写两个事务同时想获取锁，写事务优先。也可通过配置修改。"}]},{type:a,value:e},{type:b,tag:u,props:{id:"myisam和innodb的比较"},children:[{type:b,tag:l,props:{href:"#myisam%E5%92%8Cinnodb%E7%9A%84%E6%AF%94%E8%BE%83",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:"MyISAM和InnoDB的比较"}]},{type:a,value:e},{type:b,tag:"ul",props:{},children:[{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"MyISAM不支持事务，不支持外键，访问速度快。"}]},{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"物理储存会把表分为三个文件：表定义、数据和索引。由于索引是单独一个文件，直接保存数据文件的地址，索引查找速度会更快。而InnoDB的所有表都保存在同一个文件里。"}]},{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"MyISAM的储存格式也有三个：静态表、动态表和压缩表。静态表适用于字段都是固定长度，而有text或者blob的会使用动态表。压缩表能减少磁盘占用。"}]},{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"MyISAM只支持表锁，InnoDB支持行锁和表锁"}]},{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"MyISAM支持全文索引，InnoDB不支持"}]},{type:a,value:e},{type:b,tag:m,props:{},children:[{type:a,value:"MyISAM允许没有任何索引主键，InnoDB没有也会偷偷创建一个不可见的主键"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"参考文献："}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:b,tag:l,props:{href:"https:\u002F\u002Fjuejin.im\u002Fpost\u002F5b82e0196fb9a019f47d1823",rel:[F,G,H],target:I},children:[{type:a,value:"全面了解mysql锁机制（InnoDB）与问题排查"}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:b,tag:l,props:{href:"https:\u002F\u002Fwww.jianshu.com\u002Fp\u002Ff5ff017db62a",rel:[F,G,H],target:I},children:[{type:a,value:"MySQL 乐观锁与悲观锁"}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:b,tag:l,props:{href:"https:\u002F\u002Fwww.cnblogs.com\u002FLBSer\u002Fp\u002F5183300.html",rel:[F,G,H],target:I},children:[{type:a,value:"mysql死锁问题分析"}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:b,tag:l,props:{href:"https:\u002F\u002Fwww.cnblogs.com\u002Fxiaoxi\u002Fp\u002F7404870.html",rel:[F,G,H],target:I},children:[{type:a,value:"mysql存储引擎之MyISAM 和 InnoDB的比较"}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:b,tag:l,props:{href:"https:\u002F\u002Fwww.jianshu.com\u002Fp\u002Fa957b18ba40d",rel:[F,G,H],target:I},children:[{type:a,value:"MySQL存储引擎－－MyISAM与InnoDB区别"}]}]}]},excerpt:{type:ac,children:[]},dir:aA,path:"\u002F中间件\u002F20181024\u002FMysql的锁与引擎",extension:".md",title:$,url:"\u002Fblog-code\u002Fview\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20181024\u002FMysql$E7$9A$84$E9$94$81$E4$B8$8E$E5$BC$95$E6$93$8E\u002F",createAt:new Date(1540339200000),updateAt:new Date(1540339200000),attributes:[{name:"createAt",value:aB},{name:"updateAt",value:aB},{name:"sort",value:aA,url:"\u002Fblog-code\u002Fpage\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20181024\u002F1\u002F"}]}}],fetch:{},mutations:void 0}}("text","element","span","token","\n","keyword"," ","punctuation","operator","p",";","a","li","true",-1,"icon","icon-link","=","comment","wide","h1","code","number","div","nuxt-content-highlight","pre","language-sql","line-numbers","table","where","*","nofollow","noopener","noreferrer","_blank","共享锁","独占锁",","," id ","1","begin","\u002F","SELECT","","from","update","set","FROM"," INFORMATION_SCHEMA",".","无名の窝",10000,"青春猪头-牧之原翔子-江之岛","Mysql的锁与引擎","2018-10-24T00:00:00.000Z",2,"root","乐观锁","select"," id","value","2","version","悲观锁","h2","获取锁。获取锁失败将会被阻塞。使用commit提交事务后才释放锁。","work","start","transaction","(","三者选一就可以",")","commit","img","TABLES"," tbl_name {","READ","|","WRITE","}","\u002F中间件\u002F20181024","2018-10-24")));