__NUXT_JSONP__("/view/$E6$A1$86$E6$9E$B6/20180519/Spring$20Cloud$E6$98$AF$E4$B8$AA$E5$95$A5", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C){return {data:[{siteConfig:{siteName:o,siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:10,urlReplace:{"^/file/blog/code":"http:\u002F\u002F123.207.79.108\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:p,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:q,type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:q,type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:f}]}},homeConfig:{brandInterval:p,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1652943854315),siteName:o,file:{slug:r,description:h,createdAt:s,updatedAt:s,toc:[],body:{type:t,children:[{type:b,tag:e,props:{},children:[{type:a,value:h}]},{type:a,value:c},{type:a,value:c},{type:b,tag:i,props:{id:u},children:[{type:b,tag:g,props:{href:"#%E5%BE%AE%E6%9C%8D%E5%8A%A1",ariaHidden:j,tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"所谓微服务，就是把整个项目分解成多个功能模块。由于经过分解，这些模块都很小，所以【微】。并且这些模块都独立实现，对外界提供【服务】。这些微服务再通过轻量级的通讯机制（如http）来组合在一起，构成一个大型的系统再对外界提供服务。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"这样做的优点。第一，各个微服务之间都是松耦合的，能非常方便地增删改微服务。第二，由于微服务都比较小，所以其实现的难度和复杂度都小，升级改版维护难度小，甚至重构也算不算麻烦，可以让个小团队独自掌握。微服务都是各自独立，部署互不影响，对环境依赖小。"}]},{type:a,value:c},{type:b,tag:i,props:{id:"spring-boot与spring-cloud"},children:[{type:b,tag:g,props:{href:"#spring-boot%E4%B8%8Espring-cloud",ariaHidden:j,tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:"Spring Boot与Spring Cloud"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"springboot简单的说，是整合了常用的spring系列框架和配置的框架，使得我们用springboot再也不用配置复杂的文件，实现开箱即用。而springcloud是基于springboot的，新潮东西啊，不用springboot这种新东西就用不上springcloud这种更新的东西。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"应该可以这么理解吧，我们可以用springboot来实现各个微服务（当然，如果只是实现的话，用servlet都可以，但是人家springcloud就是要你用springboot）。一个大型项目进行微服务拆分，自然微服务数量就会非常多。然后又像spring体系下的东西众多整出个springboot那样。springcloud就是用来管理众多的微服务的。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"举个例子。就例如我的博客。当前版本的博客在设计的时候，我就把整个博客系统才分为三个微服务：做图床用的文件服务器，管理文件床的系统和这个博客。文件服务器我开始使用tomcat来实现的，之后换成了nginx。而管理文件床的系统也经历了两个版本，第一个版本是用mysql储存的，另一个使用mongodb来储存的。所以我没有用到springcloud，甚至他们之间也没有进行任何通讯，只是单纯是个独立的服务。但是这种微服务形式的解耦所带来的灵活性显然是很高的。但是可以继续想象，如果之后我为了在博客里添加什么奇奇怪怪的功能，又拆分出好几个，十几个甚至几十个微服务，他们之间还要通讯，其中一个微服务修改了什么，就可能要把其余的全部微服务，起码是配置文件改个遍。哇，真麻烦，因此才有了springcloud。"}]},{type:a,value:c},{type:b,tag:i,props:{id:"spring-cloud干啥子了"},children:[{type:b,tag:g,props:{href:"#spring-cloud%E5%B9%B2%E5%95%A5%E5%AD%90%E4%BA%86",ariaHidden:j,tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:"Spring Cloud干啥子了"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"既然如此，具体springcloud帮我们干了啥呢。springcloud的一些核心功能："}]},{type:a,value:c},{type:b,tag:"ul",props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"分布式\u002F版本化配置"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"服务注册和发现"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"路由"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"服务和服务之间的调用"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"负载均衡"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"断路器"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"分布式消息传递"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"我们来看个图（虽然我都看不懂，但还是要贴上了）\n"},{type:b,tag:"img",props:{alt:"","data-src":"http:\u002F\u002F123.207.79.108\u002Ffile\u002Ffile\u002Fblog\u002Fcode\u002F20180519\u002Fimg-blog.csdn.net-20180207215150790"},children:[]},{type:a,value:"\n各个组件的工作流程是"}]},{type:a,value:c},{type:b,tag:"ol",props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"请求统一通过API网关（Zuul）来访问内部服务."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"网关接收到请求后，从注册中心（Eureka）获取可用服务"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"由Ribbon进行均衡负载后，分发到后端具体实例"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"微服务之间通过Feign进行通信处理业务"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Hystrix负责处理服务超时熔断"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Turbine监控服务间的调用和熔断相关指标"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"参考文章："}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{href:"https:\u002F\u002Fblog.csdn.net\u002Fw05980598\u002Farticle\u002Fdetails\u002F79007194",rel:[v,w,x],target:y,title:z},children:[{type:a,value:z}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{href:"http:\u002F\u002Fwww.mooooc.com\u002Fspringcloud\u002F2017\u002F05\u002F01\u002Fsimple-springcloud.html",rel:[v,w,x],target:y,title:A},children:[{type:a,value:A}]}]}]},excerpt:{type:t,children:[{type:b,tag:e,props:{},children:[{type:a,value:h}]}]},dir:B,path:"\u002F框架\u002F20180519\u002FSpring Cloud是个啥",extension:".md",title:r,url:"\u002Fblog-code\u002Fview\u002F$E6$A1$86$E6$9E$B6\u002F20180519\u002FSpring$20Cloud$E6$98$AF$E4$B8$AA$E5$95$A5\u002F",createAt:new Date(1526688000000),updateAt:new Date(1526688000000),attributes:[{name:"createAt",value:C},{name:"updateAt",value:C},{name:"sort",value:B,url:"\u002Fblog-code\u002Fpage\u002F$E6$A1$86$E6$9E$B6\u002F20180519\u002F1\u002F"}]}}],fetch:{},mutations:void 0}}("text","element","\n","li","p","wide","a","其实你问我Spring Cloud是个啥，我也还是说不清的。因为看了网上的文章，我还是看的有点懵逼的。毕竟，我还是项（人）目（生）经验太少，too young，想东西too simple了。不过，作为一名懒惰的程序员，就算sometimes naive，在设计的时候多多少少有一点倾向Spring Cloud所提倡的来实现了。","h1","true",-1,"span","icon","icon-link","无名の窝",10000,"青春猪头-牧之原翔子-江之岛","Spring Cloud是个啥","2018-05-19T00:00:00.000Z","root","微服务","nofollow","noopener","noreferrer","_blank","Spring Cloud 微服务的那点事","springcloud(一)：大话Spring Cloud","\u002F框架\u002F20180519","2018-05-19")));