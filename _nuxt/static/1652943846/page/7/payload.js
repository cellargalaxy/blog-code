__NUXT_JSONP__("/page/7", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay){w.type=c;w.children=[];A.type=c;A.children=[];F.type=c;F.children=[{type:b,tag:i,props:{},children:[{type:a,value:"之前一直只会使用"},{type:b,tag:j,props:{},children:[{type:a,value:"@RunWith(SpringRunner.class)"}]},{type:a,value:"和"},{type:b,tag:j,props:{},children:[{type:a,value:"@SpringBootTest"}]},{type:a,value:"注解来加载整个项目来注入依赖，就只会用个"},{type:b,tag:j,props:{},children:[{type:a,value:"assertEquals"}]},{type:a,value:"方法来进行测试（虽然现在也是）。但问题还是有的，且不论加载整个项目，把无关的依赖都加载进行，浪费时间。如果我要测试添加用户的接口，第一，一测试就把数据写进数据库了呀，即便是测试数据库，不要紧，那我测试第二遍，由于账户名相同，就写不进去数据库了，不能接受地报了错，其实啥问题都没有，如果要再测试就得改账户名，动了代码。也就是说这样的测试代码是连调用两次都不行的垃圾，这样子不是很奇怪吗。"}]},{type:a,value:l},{type:b,tag:i,props:{},children:[{type:a,value:"而Mockito能解决这些问题。先说说情景，我要对"},{type:b,tag:j,props:{},children:[{type:a,value:"UserService"}]},{type:a,value:"类测试添加账号和获取账号的方法，UserService调用了"},{type:b,tag:j,props:{},children:[{type:a,value:"UserDao"}]},{type:a,value:"的方法，为了避免我调用UserService的时候调用到真的，连接到数据库的UserDao，我需要给UserService替换一个UserDao的实现，而这个新的UserDao的实现的方法的返回我希望我能简单直观的控制，这样就叫做对UserService类mock了UserDao。"}]},{type:a,value:l},{type:b,tag:i,props:{},children:[{type:a,value:"在spring boot里使用很简单，下面是个简单例子，"},{type:b,tag:j,props:{},children:[{type:a,value:"UserPo"}]},{type:a,value:"类就是个普通的bean，放着账号密码，就不贴代码了。"}]}];J.type=c;J.children=[{type:b,tag:i,props:{},children:[{type:a,value:"让spring boot支持CORS非常简单，不用做任何配置，只需要在controller里使用"},{type:b,tag:j,props:{},children:[{type:a,value:"@CrossOrigin"}]},{type:a,value:"注解即可。"}]},{type:a,value:l},{type:b,tag:i,props:{},children:[{type:a,value:"@CrossOrigin注解可以使用在类或者方法上，其参数主要有origins和maxAge，用来指定允许跨域的域默认是*，和OPTIONS响应的有效时间，默认是1800。当类和方法都使用@CrossOrigin注解时，会自动合并两个注解的参数。"}]}];S.type=c;S.children=[{type:b,tag:T,props:{id:U},children:[{type:b,tag:V,props:{ariaHidden:W,href:"#%E4%BD%95%E4%B8%BA%E5%9F%9F",tabIndex:X},children:[{type:b,tag:Y,props:{className:[Z,_]},children:[]}]},{type:a,value:U}]},{type:a,value:l},{type:b,tag:i,props:{},children:[{type:a,value:"这里的域指的并不是域名，而是协议、主机地址和端口的唯一组合，即协议，主机地址和端口其中一个不一样那就是另外一个域了。"}]},{type:a,value:l},{type:b,tag:T,props:{id:$},children:[{type:b,tag:V,props:{ariaHidden:W,href:"#%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E4%B8%BA%E4%BD%95%E8%80%8C%E6%9D%A5",tabIndex:X},children:[{type:b,tag:Y,props:{className:[Z,_]},children:[]}]},{type:a,value:$}]},{type:a,value:l},{type:b,tag:i,props:{},children:[{type:a,value:"浏览器为了安全，避免网页被嵌入恶意代码，限制来源于某个域的脚本只能向其来源的域发起ajax请求，并且脚本也无法获取别的域的cookie，DOM等资源，这个叫同源策略。例如我在"},{type:b,tag:j,props:{},children:[{type:a,value:"http:\u002F\u002Fwww.alipay.com\u002F"}]},{type:a,value:"里嵌入了个检测你支付宝密码的脚本，发现你输入密码，就把你的密码发送到我的域名下，但由于我的域名跟阿里的域名不在同一个域里面，这样子偷偷发送密码的请求就会被浏览器拦截住。"}]},{type:a,value:l},{type:b,tag:i,props:{},children:[{type:a,value:"接下来以来源于a.com域（简称a域）的脚本向b.com（简称b域）发起请求作为情景来解释"}]}];ad.type=c;ad.children=[];ai.type=c;ai.children=[];an.type=c;an.children=[];as.type=c;as.children=[];aw.type=c;aw.children=[];return {data:[{siteConfig:{siteName:"无名の窝",siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:q},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:r,urlReplace:{"^/file/blog/code":"http:\u002F\u002F123.207.79.108\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:s,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:t,type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:t,type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:h}]}},homeConfig:{brandInterval:s,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1652943856508),rootPath:q,crumbs:[],pageSize:r,total:112,currentPage:7,files:[{slug:u,description:k,createdAt:v,updatedAt:v,toc:[],body:w,excerpt:w,dir:x,path:"\u002F框架\u002F20180831\u002Fjwt总结与jjwt的使用",extension:d,title:u,url:"\u002Fblog-code\u002Fview\u002F$E6$A1$86$E6$9E$B6\u002F20180831\u002Fjwt$E6$80$BB$E7$BB$93$E4$B8$8Ejjwt$E7$9A$84$E4$BD$BF$E7$94$A8\u002F",createAt:new Date(1535673600000),updateAt:new Date(1535673600000),attributes:[{name:e,value:y},{name:f,value:y},{name:g,value:x,url:"\u002Fblog-code\u002Fpage\u002F$E6$A1$86$E6$9E$B6\u002F20180831\u002F1\u002F"}]},{slug:n,description:k,createdAt:z,updatedAt:z,toc:[],body:A,excerpt:A,dir:B,path:"\u002F其他\u002F20180820\u002F做题笔记",extension:d,title:n,url:"\u002Fblog-code\u002Fview\u002F$E5$85$B6$E4$BB$96\u002F20180820\u002F$E5$81$9A$E9$A2$98$E7$AC$94$E8$AE$B0\u002F",createAt:new Date(1534723200000),updateAt:new Date(1534723200000),attributes:[{name:e,value:C},{name:f,value:C},{name:g,value:B,url:"\u002Fblog-code\u002Fpage\u002F$E5$85$B6$E4$BB$96\u002F20180820\u002F1\u002F"}]},{slug:D,description:"之前一直只会使用@RunWith(SpringRunner.class)和@SpringBootTest注解来加载整个项目来注入依赖，就只会用个assertEquals方法来进行测试（虽然现在也是）。但问题还是有的，且不论加载整个项目，把无关的依赖都加载进行，浪费时间。如果我要测试添加用户的接口，第一，一测试就把数据写进数据库了呀，即便是测试数据库，不要紧，那我测试第二遍，由于账户名相同，就写不进去数据库了，不能接受地报了错，其实啥问题都没有，如果要再测试就得改账户名，动了代码。也就是说这样的测试代码是连调用两次都不行的垃圾，这样子不是很奇怪吗。\n而Mockito能解决这些问题。先说说情景，我要对UserService类测试添加账号和获取账号的方法，UserService调用了UserDao的方法，为了避免我调用UserService的时候调用到真的，连接到数据库的UserDao，我需要给UserService替换一个UserDao的实现，而这个新的UserDao的实现的方法的返回我希望我能简单直观的控制，这样就叫做对UserService类mock了UserDao。\n在spring boot里使用很简单，下面是个简单例子，UserPo类就是个普通的bean，放着账号密码，就不贴代码了。",createdAt:E,updatedAt:E,toc:[],body:F,excerpt:F,dir:G,path:"\u002F框架\u002F20180809\u002FSpring Boot使用Mockito做单元测试",extension:d,title:D,url:"\u002Fblog-code\u002Fview\u002F$E6$A1$86$E6$9E$B6\u002F20180809\u002FSpring$20Boot$E4$BD$BF$E7$94$A8Mockito$E5$81$9A$E5$8D$95$E5$85$83$E6$B5$8B$E8$AF$95\u002F",createAt:new Date(1533772800000),updateAt:new Date(1533772800000),attributes:[{name:e,value:H},{name:f,value:H},{name:g,value:G,url:"\u002Fblog-code\u002Fpage\u002F$E6$A1$86$E6$9E$B6\u002F20180809\u002F1\u002F"}]},{slug:I,description:"让spring boot支持CORS非常简单，不用做任何配置，只需要在controller里使用@CrossOrigin注解即可。\n@CrossOrigin注解可以使用在类或者方法上，其参数主要有origins和maxAge，用来指定允许跨域的域默认是*，和OPTIONS响应的有效时间，默认是1800。当类和方法都使用@CrossOrigin注解时，会自动合并两个注解的参数。",createdAt:o,updatedAt:o,toc:[],body:J,excerpt:J,dir:K,path:"\u002F框架\u002F20180802\u002Fspring boot与Nginx支持CORS",extension:d,title:I,url:"\u002Fblog-code\u002Fview\u002F$E6$A1$86$E6$9E$B6\u002F20180802\u002Fspring$20boot$E4$B8$8ENginx$E6$94$AF$E6$8C$81CORS\u002F",createAt:new Date(1533168000000),updateAt:new Date(1533168000000),attributes:[{name:e,value:p},{name:f,value:p},{name:g,value:K,url:"\u002Fblog-code\u002Fpage\u002F$E6$A1$86$E6$9E$B6\u002F20180802\u002F1\u002F"}]},{slug:L,description:"何为域\n这里的域指的并不是域名，而是协议、主机地址和端口的唯一组合，即协议，主机地址和端口其中一个不一样那就是另外一个域了。\n跨域问题为何而来\n浏览器为了安全，避免网页被嵌入恶意代码，限制来源于某个域的脚本只能向其来源的域发起ajax请求，并且脚本也无法获取别的域的cookie，DOM等资源，这个叫同源策略。例如我在http:\u002F\u002Fwww.alipay.com\u002F里嵌入了个检测你支付宝密码的脚本，发现你输入密码，就把你的密码发送到我的域名下，但由于我的域名跟阿里的域名不在同一个域里面，这样子偷偷发送密码的请求就会被浏览器拦截住。\n接下来以来源于a.com域（简称a域）的脚本向b.com（简称b域）发起请求作为情景来解释",createdAt:o,updatedAt:o,toc:[{id:M,depth:m,text:M},{id:N,depth:m,text:N},{id:O,depth:m,text:O},{id:P,depth:m,text:P},{id:Q,depth:m,text:Q},{id:R,depth:m,text:R}],body:S,excerpt:S,dir:aa,path:"\u002F协议\u002F20180802\u002FJSONP和CORS的跨域请求",extension:d,title:L,url:"\u002Fblog-code\u002Fview\u002F$E5$8D$8F$E8$AE$AE\u002F20180802\u002FJSONP$E5$92$8CCORS$E7$9A$84$E8$B7$A8$E5$9F$9F$E8$AF$B7$E6$B1$82\u002F",createAt:new Date(1533168000000),updateAt:new Date(1533168000000),attributes:[{name:e,value:p},{name:f,value:p},{name:g,value:aa,url:"\u002Fblog-code\u002Fpage\u002F$E5$8D$8F$E8$AE$AE\u002F20180802\u002F1\u002F"}]},{slug:ab,description:k,createdAt:ac,updatedAt:ac,toc:[],body:ad,excerpt:ad,dir:ae,path:"\u002F框架\u002F20180728\u002Fspring boot+Spring Security+jjwt",extension:d,title:ab,url:"\u002Fblog-code\u002Fview\u002F$E6$A1$86$E6$9E$B6\u002F20180728\u002Fspring$20boot+Spring$20Security+jjwt\u002F",createAt:new Date(1532736000000),updateAt:new Date(1532736000000),attributes:[{name:e,value:af},{name:f,value:af},{name:g,value:ae,url:"\u002Fblog-code\u002Fpage\u002F$E6$A1$86$E6$9E$B6\u002F20180728\u002F1\u002F"}]},{slug:ag,description:k,createdAt:ah,updatedAt:ah,toc:[],body:ai,excerpt:ai,dir:aj,path:"\u002F中间件\u002F20180718\u002F使用sql游标遍历结果集",extension:d,title:ag,url:"\u002Fblog-code\u002Fview\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20180718\u002F$E4$BD$BF$E7$94$A8sql$E6$B8$B8$E6$A0$87$E9$81$8D$E5$8E$86$E7$BB$93$E6$9E$9C$E9$9B$86\u002F",createAt:new Date(1531872000000),updateAt:new Date(1531872000000),attributes:[{name:e,value:ak},{name:f,value:ak},{name:g,value:aj,url:"\u002Fblog-code\u002Fpage\u002F$E4$B8$AD$E9$97$B4$E4$BB$B6\u002F20180718\u002F1\u002F"}]},{slug:al,description:k,createdAt:am,updatedAt:am,toc:[],body:an,excerpt:an,dir:ao,path:"\u002F折腾\u002F20180714\u002FUbuntu安装配置Redis与置换策略",extension:d,title:al,url:"\u002Fblog-code\u002Fview\u002F$E6$8A$98$E8$85$BE\u002F20180714\u002FUbuntu$E5$AE$89$E8$A3$85$E9$85$8D$E7$BD$AERedis$E4$B8$8E$E7$BD$AE$E6$8D$A2$E7$AD$96$E7$95$A5\u002F",createAt:new Date(1531526400000),updateAt:new Date(1531526400000),attributes:[{name:e,value:ap},{name:f,value:ap},{name:g,value:ao,url:"\u002Fblog-code\u002Fpage\u002F$E6$8A$98$E8$85$BE\u002F20180714\u002F1\u002F"}]},{slug:aq,description:k,createdAt:ar,updatedAt:ar,toc:[],body:as,excerpt:as,dir:at,path:"\u002F框架\u002F20180705\u002F作业调度系统-Quarzt的简单使用",extension:d,title:aq,url:"\u002Fblog-code\u002Fview\u002F$E6$A1$86$E6$9E$B6\u002F20180705\u002F$E4$BD$9C$E4$B8$9A$E8$B0$83$E5$BA$A6$E7$B3$BB$E7$BB$9F-Quarzt$E7$9A$84$E7$AE$80$E5$8D$95$E4$BD$BF$E7$94$A8\u002F",createAt:new Date(1530748800000),updateAt:new Date(1530748800000),attributes:[{name:e,value:au},{name:f,value:au},{name:g,value:at,url:"\u002Fblog-code\u002Fpage\u002F$E6$A1$86$E6$9E$B6\u002F20180705\u002F1\u002F"}]},{slug:n,description:k,createdAt:av,updatedAt:av,toc:[],body:aw,excerpt:aw,dir:ax,path:"\u002F其他\u002F20180524\u002F做题笔记",extension:d,title:n,url:"\u002Fblog-code\u002Fview\u002F$E5$85$B6$E4$BB$96\u002F20180524\u002F$E5$81$9A$E9$A2$98$E7$AC$94$E8$AE$B0\u002F",createAt:new Date(1527120000000),updateAt:new Date(1527120000000),attributes:[{name:e,value:ay},{name:f,value:ay},{name:g,value:ax,url:"\u002Fblog-code\u002Fpage\u002F$E5$85$B6$E4$BB$96\u002F20180524\u002F1\u002F"}]}]}],fetch:{},mutations:void 0}}("text","element","root",".md","createAt","updateAt","sort","wide","p","code","","\n",2,"做题笔记","2018-08-02T00:00:00.000Z","2018-08-02","\u002Fblog-code\u002Fpage\u002F1\u002F",10,10000,"青春猪头-牧之原翔子-江之岛","jwt总结与jjwt的使用","2018-08-31T00:00:00.000Z",{},"\u002F框架\u002F20180831","2018-08-31","2018-08-20T00:00:00.000Z",{},"\u002F其他\u002F20180820","2018-08-20","Spring Boot使用Mockito做单元测试","2018-08-09T00:00:00.000Z",{},"\u002F框架\u002F20180809","2018-08-09","spring boot与Nginx支持CORS",{},"\u002F框架\u002F20180802","JSONP和CORS的跨域请求","简单请求的请求","简单请求的响应","预检请求的请求","预检请求的回应","实际请求的请求","实际请求的响应",{},"h1","何为域","a","true",-1,"span","icon","icon-link","跨域问题为何而来","\u002F协议\u002F20180802","spring boot+Spring Security+jjwt","2018-07-28T00:00:00.000Z",{},"\u002F框架\u002F20180728","2018-07-28","使用sql游标遍历结果集","2018-07-18T00:00:00.000Z",{},"\u002F中间件\u002F20180718","2018-07-18","Ubuntu安装配置Redis与置换策略","2018-07-14T00:00:00.000Z",{},"\u002F折腾\u002F20180714","2018-07-14","作业调度系统-Quarzt的简单使用","2018-07-05T00:00:00.000Z",{},"\u002F框架\u002F20180705","2018-07-05","2018-05-24T00:00:00.000Z",{},"\u002F其他\u002F20180524","2018-05-24")));