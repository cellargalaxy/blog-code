__NUXT_JSONP__("/view/java/20180518/java%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B%E9%80%9A%E8%AE%AF", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U){return {data:[{navbarConfig:{brandText:y,brandUrl:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}]},homeConfig:{brandInterval:10000,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1648968598988),siteName:y,file:{slug:z,description:"之前我理解的通讯比较狭隘，以为要是传输数据。但是看了别人的，发现哪怕是信号的传递，同步，也叫通讯。\n线程与进程之间的关系\n进程是系统进行资源分配和调度的独立单位，有自己独立的地址空间。是一个程序在有个数据集合上面的一次活动。而线程是进程的实体，是cpu调度和分派的基本单位。线程除了最基本的栈，程序计数器意外，不拥有专属资源。但可以与进程下的其他线程共享进程的全部资源。\n线程是进程的不同的执行路径。一个进程奔溃后，在保护模式下不会对其他进程造成影响。而一个线程死掉就等于整个进程死掉。因此，进程的健壮性比线程好，但是切换开销大。对于要同时进行又要共享变量，只能用线程。",createdAt:A,updatedAt:A,toc:[],body:{type:B,children:[{type:b,tag:g,props:{},children:[{type:a,value:C}]},{type:a,value:c},{type:b,tag:j,props:{id:k},children:[{type:b,tag:i,props:{href:D,ariaHidden:l,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:k}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:E}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:F}]},{type:a,value:c},{type:a,value:c},{type:b,tag:j,props:{id:G},children:[{type:b,tag:i,props:{href:"#java%E7%BA%BF%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E9%80%9A%E8%AE%AF",ariaHidden:l,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:G}]},{type:a,value:c},{type:b,tag:H,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"synchronized、wait()、notify()和Lock、Condition、await()、signal()。这样只能进行同步的信号传递。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"CountDownLatch，CyclicBarrier和Semaphore。同步信号传递。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"共享变量。共享变量既能传递信号也能传递数据，当共享变量本书就是数据时。为了各个线程之间正确使用共享变量，共享变量一般是搭配同步的手段来使用的。同步的手段有锁和volatile。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"阻塞队列。应该说是阻塞队列作为一个共享变量在线程之间进行通讯，既能传递信号也能传递数据。其内部已经封装了同步手段。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"PipedInputStream和PipedOutputStream"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:"div",props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:"pre",props:{className:["language-java","line-numbers"]},children:[{type:b,tag:"code",props:{},children:[{type:b,tag:d,props:{className:[e,p]},children:[{type:a,value:I}]},{type:a,value:" in "},{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:K}]},{type:a,value:q},{type:b,tag:d,props:{className:[e,L]},children:[{type:a,value:M}]},{type:a,value:q},{type:b,tag:d,props:{className:[e,p]},children:[{type:a,value:I}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:v}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:x}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,p]},children:[{type:a,value:N}]},{type:a,value:" out "},{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:K}]},{type:a,value:q},{type:b,tag:d,props:{className:[e,L]},children:[{type:a,value:M}]},{type:a,value:q},{type:b,tag:d,props:{className:[e,p]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:v}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:x}]},{type:a,value:"\nin"},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:"."}]},{type:b,tag:d,props:{className:[e,"function"]},children:[{type:a,value:"connect"}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:v}]},{type:a,value:"out"},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:x}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:j,props:{id:O},children:[{type:b,tag:i,props:{href:"#%E8%BF%9B%E7%A8%8B%E4%B9%8B%E9%97%B4%E9%80%9A%E8%AE%AF",ariaHidden:l,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:H,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"匿名管道（pipe）有两个限制，一个是半双工的，流是单向的，二是只能在亲戚进程（父子兄弟）进程之间传输。是一种单独的文件系统，只存在于内存中。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"有名管道（named pipe）也是半双工，但是比匿名管道突破了只能亲戚进程之间的限制。因为其名字存在于文件系统中，内容在内存中。只要进程访问对应路径，管道就能相互通讯。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"信号量（semophore）是一个计数器，一般用来做锁同步。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"消息队列（message queue）是由消息组成的链表，存放在内核中。克服了管道的无结构字节流和缓冲区大小有限，信号量的传递信息少。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"信号（signal）是一个复杂的通讯方式，用来通知其他进程某事件已经发生。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"共享内存（shared memory）由一个进程创建，但可以多个线程直接读写同一块内存，是最快的可用IPC。需要一定的同步机制（如信号量）。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"套接字（socket）不仅可以单机，还可以在网络相连下，多机进程通讯。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"参考文章："}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{href:"http:\u002F\u002Fedisonxu.com\u002F2017\u002F03\u002F02\u002Fjava-thread-communication.html",rel:[r,s,t],target:u,title:P},children:[{type:a,value:P}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{href:"https:\u002F\u002Fwww.jianshu.com\u002Fp\u002Fc1015f5ffa74",rel:[r,s,t],target:u,title:Q},children:[{type:a,value:Q}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{href:"https:\u002F\u002Fblog.csdn.net\u002Fyang_teng_\u002Farticle\u002Fdetails\u002F53325280",rel:[r,s,t],target:u,title:R},children:[{type:a,value:R}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{href:"https:\u002F\u002Fblog.csdn.net\u002Fgatieme\u002Farticle\u002Fdetails\u002F50908749",rel:[r,s,t],target:u,title:S},children:[{type:a,value:S}]}]}]},excerpt:{type:B,children:[{type:b,tag:g,props:{},children:[{type:a,value:C}]},{type:a,value:c},{type:b,tag:j,props:{id:k},children:[{type:b,tag:i,props:{ariaHidden:l,href:D,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:k}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:E}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:F}]}]},dir:T,path:"\u002Fjava\u002F20180518\u002Fjava线程与进程通讯",extension:".md",title:z,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180518\u002Fjava线程与进程通讯",createAt:new Date(1526601600000),updateAt:new Date(1526601600000),attributes:[{name:"createAt",value:U},{name:"updateAt",value:U},{name:"sort",value:T,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180518\u002F1\u002F"}]}}],fetch:{},mutations:void 0}}("text","element","\n","span","token","li","p","punctuation","a","h1","线程与进程之间的关系","true",-1,"icon","icon-link","class-name"," ","nofollow","noopener","noreferrer","_blank","(",")",";","无名の窝","java线程与进程通讯","2018-05-18T00:00:00.000Z","root","之前我理解的通讯比较狭隘，以为要是传输数据。但是看了别人的，发现哪怕是信号的传递，同步，也叫通讯。","#%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB","进程是系统进行资源分配和调度的独立单位，有自己独立的地址空间。是一个程序在有个数据集合上面的一次活动。而线程是进程的实体，是cpu调度和分派的基本单位。线程除了最基本的栈，程序计数器意外，不拥有专属资源。但可以与进程下的其他线程共享进程的全部资源。","线程是进程的不同的执行路径。一个进程奔溃后，在保护模式下不会对其他进程造成影响。而一个线程死掉就等于整个进程死掉。因此，进程的健壮性比线程好，但是切换开销大。对于要同时进行又要共享变量，只能用线程。","java线程之间的通讯","ol","PipedInputStream","operator","=","keyword","new","PipedOutputStream","进程之间通讯","JAVA线程间通信的几种方式","进程间通信IPC (InterProcess Communication)","进程间的几种通信方式的比较和线程间的几种通信方式","Linux进程间通信的几种方式总结--linux内核剖析（七）","\u002Fjava\u002F20180518","2018-05-18")));