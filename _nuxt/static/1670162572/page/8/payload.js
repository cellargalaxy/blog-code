__NUXT_JSONP__("/page/8", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av){B.type=c;B.children=[];G.type=c;G.children=[];L.type=c;L.children=[];Q.type=c;Q.children=[];V.type=c;V.children=[];$.type=c;$.children=[{type:a,tag:i,props:{},children:[{type:b,value:Z}]}];ae.type=c;ae.children=[{type:a,tag:i,props:{},children:[{type:b,value:"之前我理解的通讯比较狭隘，以为要是传输数据。但是看了别人的，发现哪怕是信号的传递，同步，也叫通讯。"}]},{type:b,value:k},{type:a,tag:o,props:{id:af},children:[{type:a,tag:p,props:{ariaHidden:q,href:"#%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB",tabIndex:r},children:[{type:a,tag:s,props:{className:[t,u]},children:[]}]},{type:b,value:af}]},{type:b,value:k},{type:a,tag:i,props:{},children:[{type:b,value:"进程是系统进行资源分配和调度的独立单位，有自己独立的地址空间。是一个程序在有个数据集合上面的一次活动。而线程是进程的实体，是cpu调度和分派的基本单位。线程除了最基本的栈，程序计数器意外，不拥有专属资源。但可以与进程下的其他线程共享进程的全部资源。"}]},{type:b,value:k},{type:a,tag:i,props:{},children:[{type:b,value:"线程是进程的不同的执行路径。一个进程奔溃后，在保护模式下不会对其他进程造成影响。而一个线程死掉就等于整个进程死掉。因此，进程的健壮性比线程好，但是切换开销大。对于要同时进行又要共享变量，只能用线程。"}]}];ak.type=c;ak.children=[{type:a,tag:o,props:{id:al},children:[{type:a,tag:p,props:{ariaHidden:q,href:"#%E6%B3%A8%E8%A7%A3%E6%98%AF%E4%BB%80%E4%B9%88",tabIndex:r},children:[{type:a,tag:s,props:{className:[t,u]},children:[]}]},{type:b,value:al}]},{type:b,value:k},{type:a,tag:i,props:{},children:[{type:b,value:"注解用的多了，但是其实注解是什么。打个比喻，注解就是一张标签纸，上面写着若干信息，用来标记解释被贴上这张标签纸的事物.而其事物的性质并没有发生改变，无论这张标签纸上的解释是否正确。因此，使用注解是非入侵代码的。"}]},{type:b,value:k},{type:a,tag:o,props:{id:am},children:[{type:a,tag:p,props:{ariaHidden:q,href:"#%E5%85%83%E6%B3%A8%E8%A7%A3",tabIndex:r},children:[{type:a,tag:s,props:{className:[t,u]},children:[]}]},{type:b,value:am}]},{type:b,value:k},{type:a,tag:i,props:{},children:[{type:b,value:"元注解也是注解，不过是特殊的，用来标注其他注解的注解，就像Object是全部类的父类一样。比喻的说，就是标签纸A上可以贴标签纸B，标签纸B可以贴标签纸C……，最后的标签纸N就是元注解。元注解有五个：@Retention、@Target、@Inherited、@Documented、@Repeatable。"}]}];ar.type=c;ar.children=[{type:a,tag:i,props:{},children:[{type:b,value:aq}]}];av.type=c;av.children=[];return {data:[{siteConfig:{siteName:"无名の窝",siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:v},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:w,urlReplace:{"^/file/blog/code":"https:\u002F\u002Foracleamd1.dynv6.net\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:x,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:y,type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:y,type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:h},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:h}]}},homeConfig:{brandInterval:x,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1670162585503),rootPath:v,crumbs:[],pageSize:w,total:117,currentPage:8,files:[{slug:z,description:j,createdAt:A,updatedAt:A,toc:[],body:B,excerpt:B,dir:C,path:"\u002F框架\u002F20180728\u002Fspring boot+Spring Security+jjwt",extension:d,title:z,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20180728\u002Fspring boot+Spring Security+jjwt\u002F",createAt:new Date(1532736000000),updateAt:new Date(1532736000000),attributes:[{name:e,value:D},{name:f,value:D},{name:g,value:C,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20180728\u002F1\u002F"}]},{slug:E,description:j,createdAt:F,updatedAt:F,toc:[],body:G,excerpt:G,dir:H,path:"\u002F中间件\u002F20180718\u002F使用sql游标遍历结果集",extension:d,title:E,url:"\u002Fblog-code\u002Fview\u002F中间件\u002F20180718\u002F使用sql游标遍历结果集\u002F",createAt:new Date(1531872000000),updateAt:new Date(1531872000000),attributes:[{name:e,value:I},{name:f,value:I},{name:g,value:H,url:"\u002Fblog-code\u002Fpage\u002F中间件\u002F20180718\u002F1\u002F"}]},{slug:J,description:j,createdAt:K,updatedAt:K,toc:[],body:L,excerpt:L,dir:M,path:"\u002F折腾\u002F20180714\u002FUbuntu安装配置Redis与置换策略",extension:d,title:J,url:"\u002Fblog-code\u002Fview\u002F折腾\u002F20180714\u002FUbuntu安装配置Redis与置换策略\u002F",createAt:new Date(1531526400000),updateAt:new Date(1531526400000),attributes:[{name:e,value:N},{name:f,value:N},{name:g,value:M,url:"\u002Fblog-code\u002Fpage\u002F折腾\u002F20180714\u002F1\u002F"}]},{slug:O,description:j,createdAt:P,updatedAt:P,toc:[],body:Q,excerpt:Q,dir:R,path:"\u002F框架\u002F20180705\u002F作业调度系统-Quarzt的简单使用",extension:d,title:O,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20180705\u002F作业调度系统-Quarzt的简单使用\u002F",createAt:new Date(1530748800000),updateAt:new Date(1530748800000),attributes:[{name:e,value:S},{name:f,value:S},{name:g,value:R,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20180705\u002F1\u002F"}]},{slug:T,description:j,createdAt:U,updatedAt:U,toc:[],body:V,excerpt:V,dir:W,path:"\u002F其他\u002F20180524\u002F做题笔记",extension:d,title:T,url:"\u002Fblog-code\u002Fview\u002F其他\u002F20180524\u002F做题笔记\u002F",createAt:new Date(1527120000000),updateAt:new Date(1527120000000),attributes:[{name:e,value:X},{name:f,value:X},{name:g,value:W,url:"\u002Fblog-code\u002Fpage\u002F其他\u002F20180524\u002F1\u002F"}]},{slug:Y,description:Z,createdAt:_,updatedAt:_,toc:[],body:$,excerpt:$,dir:aa,path:"\u002F框架\u002F20180519\u002FSpring Cloud是个啥",extension:d,title:Y,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20180519\u002FSpring Cloud是个啥\u002F",createAt:new Date(1526688000000),updateAt:new Date(1526688000000),attributes:[{name:e,value:ab},{name:f,value:ab},{name:g,value:aa,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20180519\u002F1\u002F"}]},{slug:ac,description:"之前我理解的通讯比较狭隘，以为要是传输数据。但是看了别人的，发现哪怕是信号的传递，同步，也叫通讯。\n线程与进程之间的关系\n进程是系统进行资源分配和调度的独立单位，有自己独立的地址空间。是一个程序在有个数据集合上面的一次活动。而线程是进程的实体，是cpu调度和分派的基本单位。线程除了最基本的栈，程序计数器意外，不拥有专属资源。但可以与进程下的其他线程共享进程的全部资源。\n线程是进程的不同的执行路径。一个进程奔溃后，在保护模式下不会对其他进程造成影响。而一个线程死掉就等于整个进程死掉。因此，进程的健壮性比线程好，但是切换开销大。对于要同时进行又要共享变量，只能用线程。",createdAt:ad,updatedAt:ad,toc:[],body:ae,excerpt:ae,dir:ag,path:"\u002Fjava\u002F20180518\u002Fjava线程与进程通讯",extension:d,title:ac,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180518\u002Fjava线程与进程通讯\u002F",createAt:new Date(1526601600000),updateAt:new Date(1526601600000),attributes:[{name:e,value:ah},{name:f,value:ah},{name:g,value:ag,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180518\u002F1\u002F"}]},{slug:ai,description:"注解是什么\n注解用的多了，但是其实注解是什么。打个比喻，注解就是一张标签纸，上面写着若干信息，用来标记解释被贴上这张标签纸的事物.而其事物的性质并没有发生改变，无论这张标签纸上的解释是否正确。因此，使用注解是非入侵代码的。\n元注解\n元注解也是注解，不过是特殊的，用来标注其他注解的注解，就像Object是全部类的父类一样。比喻的说，就是标签纸A上可以贴标签纸B，标签纸B可以贴标签纸C……，最后的标签纸N就是元注解。元注解有五个：@Retention、@Target、@Inherited、@Documented、@Repeatable。",createdAt:aj,updatedAt:aj,toc:[],body:ak,excerpt:ak,dir:an,path:"\u002Fjava\u002F20180516\u002Fjava注解",extension:d,title:ai,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180516\u002Fjava注解\u002F",createAt:new Date(1526428800000),updateAt:new Date(1526428800000),attributes:[{name:e,value:ao},{name:f,value:ao},{name:g,value:an,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180516\u002F1\u002F"}]},{slug:ap,description:aq,createdAt:l,updatedAt:l,toc:[],body:ar,excerpt:ar,dir:m,path:"\u002F折腾\u002F20180515\u002Fmysql的主从数据库设置",extension:d,title:ap,url:"\u002Fblog-code\u002Fview\u002F折腾\u002F20180515\u002Fmysql的主从数据库设置\u002F",createAt:new Date(1526342400000),updateAt:new Date(1526342400000),attributes:[{name:e,value:n},{name:f,value:n},{name:g,value:m,url:as}]},{slug:at,description:j,createdAt:l,updatedAt:l,toc:[{id:au,depth:2,text:au}],body:av,excerpt:av,dir:m,path:"\u002F折腾\u002F20180515\u002Fmysql和mariadb的安装卸载",extension:d,title:at,url:"\u002Fblog-code\u002Fview\u002F折腾\u002F20180515\u002Fmysql和mariadb的安装卸载\u002F",createAt:new Date(1526342400000),updateAt:new Date(1526342400000),attributes:[{name:e,value:n},{name:f,value:n},{name:g,value:m,url:as}]}]}],fetch:{},mutations:void 0}}("element","text","root",".md","createAt","updateAt","sort","wide","p","","\n","2018-05-15T00:00:00.000Z","\u002F折腾\u002F20180515","2018-05-15","h1","a","true",-1,"span","icon","icon-link","\u002Fblog-code\u002Fpage\u002F1\u002F",10,10000,"青春猪头-牧之原翔子-江之岛","spring boot+Spring Security+jjwt","2018-07-28T00:00:00.000Z",{},"\u002F框架\u002F20180728","2018-07-28","使用sql游标遍历结果集","2018-07-18T00:00:00.000Z",{},"\u002F中间件\u002F20180718","2018-07-18","Ubuntu安装配置Redis与置换策略","2018-07-14T00:00:00.000Z",{},"\u002F折腾\u002F20180714","2018-07-14","作业调度系统-Quarzt的简单使用","2018-07-05T00:00:00.000Z",{},"\u002F框架\u002F20180705","2018-07-05","做题笔记","2018-05-24T00:00:00.000Z",{},"\u002F其他\u002F20180524","2018-05-24","Spring Cloud是个啥","其实你问我Spring Cloud是个啥，我也还是说不清的。因为看了网上的文章，我还是看的有点懵逼的。毕竟，我还是项（人）目（生）经验太少，too young，想东西too simple了。不过，作为一名懒惰的程序员，就算sometimes naive，在设计的时候多多少少有一点倾向Spring Cloud所提倡的来实现了。","2018-05-19T00:00:00.000Z",{},"\u002F框架\u002F20180519","2018-05-19","java线程与进程通讯","2018-05-18T00:00:00.000Z",{},"线程与进程之间的关系","\u002Fjava\u002F20180518","2018-05-18","java注解","2018-05-16T00:00:00.000Z",{},"注解是什么","元注解","\u002Fjava\u002F20180516","2018-05-16","mysql的主从数据库设置","尝试了一下mysql主从数据库的同步，想不到还蛮简单的。网上说mysql做主从同步要数据库版本一样啊，系统都要一样啊等等一堆条件，但是我发现我本地ubuntu的从数据库mysql和vps的centos上面的主数据库mariadb都能成功同步。当然，如果是在生产环境下，这样子可以避免不必要的麻烦。还有主从数据库的数据一开始还是要一致的。",{},"\u002Fblog-code\u002Fpage\u002F折腾\u002F20180515\u002F1\u002F","mysql和mariadb的安装卸载","centos卸载mariadb",{})));