__NUXT_JSONP__("/view/%E5%88%86%E5%B8%83%E5%BC%8F/20200717/Spring%20Cloud%E7%BB%84%E4%BB%B6%E6%80%BB%E7%BB%93", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R){return {data:[{navbarConfig:{brandText:t,brandUrl:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}]},homeConfig:{brandInterval:10000,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1649603267501),siteName:t,file:{slug:u,description:"",createdAt:v,updatedAt:v,toc:[{id:w,depth:n,text:x},{id:y,depth:n,text:z},{id:A,depth:n,text:B},{id:C,depth:n,text:D},{id:E,depth:n,text:F}],body:{type:G,children:[{type:a,value:c},{type:b,tag:l,props:{id:H},children:[{type:b,tag:e,props:{href:"#%E5%BE%AE%E6%9C%8D%E5%8A%A1",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:H}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"微服务是将一个大的单体应用，根据服务拆分为多个功能专一的轻量服务。\n各个微服务之间可以使用不同的语言和数据库，服务之间通过HTTP进行调用。"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"服务能很容易的横线扩展"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"服务之间松耦合"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"服务简单，内聚度高，开发效率高"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"微服务通信"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"数据一致性"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"调用性能监控"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"多服务运维"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{id:"spring-cloud与dubbo"},children:[{type:b,tag:e,props:{href:"#spring-cloud%E4%B8%8Edubbo",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:"Spring Cloud与dubbo"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"dubbo与zookeeper实现了服务发现和RPC调用。而spring cloud是定位于微服务治理全家桶。\n像配置中心、熔断器、服务网关等，spring cloud都有相应的组件实现，而dubbo则需要其他中间件的配合。"}]},{type:a,value:c},{type:b,tag:l,props:{id:I},children:[{type:b,tag:e,props:{href:"#%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:I}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"微服务集群服务数量很多，如果通过配置指定依赖的服务的地址，当节点上下线的时候，会大大增加维护成本。\n而注册中心提供服务注册和服务发现的功能。\n每一个微服务都会向注册中心组成自己所提供的服务，并且从注册中心查询所需服务的地址。\n每一个节点也会向注册中心上报健康情况，动态更新服务列表。"}]},{type:a,value:c},{type:b,tag:o,props:{id:w},children:[{type:b,tag:e,props:{href:"#eureka",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Eureka是spring cloud的注册中心组件。\n如上所说，其他服务会通过Eureka客户端连接到Eureka服务端，保持心跳，把自己的信息注册到注册中心。"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"高可用：使用Eureka集群，不同的Eureka节点之间相互注册，通过注册中心本身来监控Eureka节点的更新"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"自我保护模式：如果Eureka在一段时间里没有收到某服务的心跳，会进入自我保护模式。\n并不会清除该服务的注册信息并正常对外提供。\n直到心跳恢复正常才会退出自我保护模式，更新服务列表。简单来说就好有比没有好"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Eureka与ZooKeeper：如果zookeeper的主节点挂了要进行选举，在选举期间是无法对外提供服务的，重于一致性。\nEureka的各个节点之间是平等的，只要有节点正常就能对外提供服务，重于可用性。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{id:J},children:[{type:b,tag:e,props:{href:"#%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9D%87%E8%A1%A1%E8%B4%9F%E8%BD%BD",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:J}]},{type:a,value:c},{type:b,tag:o,props:{id:y},children:[{type:b,tag:e,props:{href:"#ribbon",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:z}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Ribbon是spring cloud的客户端均衡负载组件。\nRibbon会从注册中心获取服务的全部节点信息，使用轮询去均衡请求各个节点。\n使用"},{type:b,tag:"code",props:{},children:[{type:a,value:"@LoadBalanced"}]},{type:a,value:"注解开启均衡负载。"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ribbon与Nginx：Nginx是在反代的过程中均衡负载，请求的流量会经过nginx。Ribbon是客户端请求时直接均衡负载到服务端。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{id:K},children:[{type:b,tag:e,props:{href:"#%E5%A3%B0%E6%98%8E%E5%BC%8Fweb%E5%AE%A2%E6%88%B7%E7%AB%AF",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:K}]},{type:a,value:c},{type:b,tag:o,props:{id:A},children:[{type:b,tag:e,props:{href:"#feign",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Feign是一个声明式web客户端，帮助我就构造请求HTTP接口。\n与Ribbon结合，就能实现轮询的声明式HTTP请求接口。"}]},{type:a,value:c},{type:b,tag:l,props:{id:L},children:[{type:b,tag:e,props:{href:"#%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"微服务集群节点众多，与注册中心一样，需要一样统一的配置中心对不同服务的配置进行管理和更新。\n配置中心基于git，通过git能原始实现对配置文件的版本控制。"}]},{type:a,value:c},{type:b,tag:l,props:{id:M},children:[{type:b,tag:e,props:{href:"#%E7%86%94%E6%96%AD%E5%99%A8",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"在分布式系统里，如果其中有一个服务不可用，服务请求阻塞直到超时，占用服务的全部线程，导致整个服务不可用。\n新的服务不可用又会导致别的服务不可用，最后连锁效应导致整个服务集群发生雪崩效应。"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"隔离：熔断器会隔离不同服务之间的影响"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"监控：熔断器会对每次调用的成功失败、时间进行记录"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"熔断：熔断器监控服务的失败数或者失败率达到一定的值，会对这个服务进行熔断，不再请求这个服务"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"降级：熔断器在熔断后服务会进行降级，调用备用的降级方法，维持服务的可用性"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"关闭：熔断器关闭，请求正常"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"打开：发现某个服务不可用，熔断该服务，熔断器处于打开状态"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"半开：熔断的一段时间后，会将部分请求发给接口"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:o,props:{id:C},children:[{type:b,tag:e,props:{href:"#hystrix",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Tomcat默认只有一个线程池来处理请求，会导致服务雪崩。\nHystrix会给每一个服务配一个线程池，通过线程池隔离不同的服务。除此以外还可以使用信号量方式。"}]},{type:a,value:c},{type:b,tag:l,props:{id:N},children:[{type:b,tag:e,props:{href:"#%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:N}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"服务网关通过路由转发，统一暴露微服务集群的接口。\n并且在服务网关里实现与业务逻辑无关的，如鉴权、限流、缓存、监控、统计等功能。"}]},{type:a,value:c},{type:b,tag:o,props:{id:E},children:[{type:b,tag:e,props:{href:"#zuulzuul2%E4%B8%8Egateway",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:F}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Zuul基于Servlet是BIO，Zuul2基于netty是NIO，Gateway是spring cloud推出的第二代网关，同样是NIO，用于替代zuul。"}]},{type:a,value:c},{type:b,tag:l,props:{id:O},children:[{type:b,tag:e,props:{href:"#%E6%B6%88%E6%81%AF%E6%80%BB%E7%BA%BF",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"可与配置中心结合，实现配置实时更新。"}]},{type:a,value:c},{type:b,tag:l,props:{id:P},children:[{type:b,tag:e,props:{href:"#%E7%BB%84%E4%BB%B6%E5%8F%91%E9%9F%B3",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:P}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Eureka [jʊ'ri:kə]"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ribbon [ˈrɪbən]"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Feign [fen]"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Hystrix [hɪst'rɪks]"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Zuul [zulu]"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Sleuth [sluθ]"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Turbine [ˈtɜ:rbaɪn]"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"参考文章："}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fjuejin.im\u002Fpost\u002F5e94233bf265da47c5584b3b",rel:[p,q,r],target:s},children:[{type:a,value:"SpringCloud面试题（总结最全面的面试题！！！）"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fjuejin.im\u002Fpost\u002F5be13b83f265da6116393fc7",rel:[p,q,r],target:s},children:[{type:a,value:"拜托！面试请不要再问我Spring Cloud底层原理"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fwww.jianshu.com\u002Fp\u002Fdd1c4c3e2a7f",rel:[p,q,r],target:s},children:[{type:a,value:"SpringCloud面试题"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fwww.cnblogs.com\u002Flinkstar\u002Fp\u002F9055900.html",rel:[p,q,r],target:s},children:[{type:a,value:"SpringCloud各个组件说明"}]}]}]},excerpt:{type:G,children:[]},dir:Q,path:"\u002F分布式\u002F20200717\u002FSpring Cloud组件总结",extension:".md",title:u,url:"\u002Fblog-code\u002Fview\u002F分布式\u002F20200717\u002FSpring Cloud组件总结",createAt:new Date(1594944000000),updateAt:new Date(1594944000000),attributes:[{name:"createAt",value:R},{name:"updateAt",value:R},{name:"sort",value:Q,url:"\u002Fblog-code\u002Fpage\u002F分布式\u002F20200717\u002F1\u002F"}]}}],fetch:{},mutations:void 0}}("text","element","\n","li","a","p","true",-1,"span","icon","icon-link","h1","ul",2,"h2","nofollow","noopener","noreferrer","_blank","无名の窝","Spring Cloud组件总结","2020-07-17T00:00:00.000Z","eureka","Eureka","ribbon","Ribbon","feign","Feign","hystrix","Hystrix","zuulzuul2与gateway","Zuul、Zuul2与Gateway","root","微服务","注册中心","客户端均衡负载","声明式web客户端","配置中心","熔断器","服务网关","消息总线","组件发音","\u002F分布式\u002F20200717","2020-07-17")));