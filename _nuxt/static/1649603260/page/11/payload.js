__NUXT_JSONP__("/page/11", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL){r.type=e;r.children=[{type:c,tag:d,props:{},children:[{type:b,value:p}]}];F.type=e;F.children=[{type:c,tag:G,props:{id:H},children:[{type:c,tag:m,props:{ariaHidden:I,href:"#%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2",tabIndex:J},children:[{type:c,tag:K,props:{className:[L,M]},children:[]}]},{type:b,value:H}]},{type:b,value:j},{type:c,tag:d,props:{},children:[{type:b,value:"cpu通过给线程分配时间片，时间片一般是几十毫秒。在线程切换的时候，需要在切换前保存上一个任务的状态，以便下次切换回是可以再加载这个任务。这样一个任务从保存到在加载的过程就叫做上下文切换。多线程虽然能将多核cpu物尽其用，但是线程之间的切换也是需要时间和成本的。在并发编程中，将代码执行速度加快的原子是将代码中串行执行的部分变成并发执行，但是如果将串行执行的部分变成并发执行，因为受限于资源，仍然在串行执行，那程序不仅没有加快，还会变慢，因为增加了上下文切换和资源调度的时间。"}]}];_.type=e;_.children=[];am.type=e;am.children=[];ar.type=e;ar.children=[{type:c,tag:d,props:{},children:[{type:b,value:"先不说废话，看了再说\nb站连接"},{type:c,tag:m,props:{href:as,rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:b,value:as}]},{type:b,value:" (没办法，b站的播放器矫情，不知道为什么报403加载失败，只好请你异步去b站看了)"}]},{type:b,value:j},{type:c,tag:d,props:{},children:[{type:c,tag:"embed",props:{width:"100%",height:500,src:"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FfzQ6gRAEoy0",frameBorder:"0",allow:"autoplay; encrypted-media",allowFullScreen:true},children:[]}]}];ax.type=e;ax.children=[];aB.type=e;aB.children=[{type:c,tag:d,props:{},children:[{type:b,value:"没想到有啥好水，就水水博客的主题设计吧。"}]},{type:b,value:j},{type:c,tag:d,props:{},children:[{type:b,value:"博客的主题风格的设计我是想过挺久的。但是没什么思路，就跑去参考大家的博客。经过（并不）大量的对比之后，我总结出了博客主题的两种类别。第一种类别的版面设计比较简单朴素，页面的背景图片却比较华丽。另一类就是版面比较色彩斑斓，而背景比较朴素简单，简单来说就是朴素的背景，华丽的背景与朴素的版面，华丽的版面的搭配。经过思考主要是这两种搭配是有道理的。朴素的背景加朴素的版面就太朴素了，容易变得简单乏味。华丽的背景加华丽的版面，会令网址色彩过多，容易变成视觉污染。"}]}];aE.type=e;aE.children=[{type:c,tag:G,props:{id:aF},children:[{type:c,tag:m,props:{ariaHidden:I,href:"#%E7%A3%81%E5%8A%9B%E9%93%BE%E6%8E%A5%E7%9A%84%E7%A5%9E%E5%A5%87",tabIndex:J},children:[{type:c,tag:K,props:{className:[L,M]},children:[]}]},{type:b,value:aF}]},{type:b,value:j},{type:c,tag:d,props:{},children:[{type:b,value:"老司机都懂得擦擦键盘来传播磁力链接。一直很好奇为什么磁力链接这种完全去中心化的技术怎么就凭一串毫无规律的字符串，就在浩瀚的互联网里找到我们想要下载的数据呢。p2p不同于S\u002FC，假设我要下载京紫第一集，在S\u002FC模式下，我只需要知道b站有京紫，只要我找到b站就有京紫看，寻找b站只需要在浏览器输入bilibili.com便可以定位到b站了。如果我是通过bt下载京紫来看，可没有“京紫第一集.com”的网址让我去打开。网络里有N多个地址，这些地址后面不一定都有资源，就算有资源，也不一定有京紫呀，难不成我要各个地址都问一下？这岂不是大海捞针？"}]},{type:b,value:j},{type:c,tag:d,props:{},children:[{type:b,value:"说实在话，在网上看了那么多文章还是似懂非懂，但也再次记录一下我的理解吧。"}]}];aJ.type=e;aJ.children=[{type:c,tag:d,props:{},children:[{type:b,value:"这个博客是从17年7月开始写的，但是之前我完全忘了数据库的存在，没脑把服务器的系统重装了。虽说数据库应该有个备份，但现在把博客又重新写了一遍，好多东西都不在兼容，懒得搞，所以文章现在就从头再开始写吧。"}]},{type:b,value:j},{type:c,tag:d,props:{},children:[{type:b,value:"重新把博客写过在这个学期开始的时候开始了，但是当时比现在更水皮，做出来的完全不像样。后来各种破事没空，就一直拖到现在，也总算就做出来了，匆匆赶工，也怕是bug不少。还请各位路过的大神放过小站，小站即没有什么你值得“发掘”的，也没有流量可以让你来钓鱼，就是个无聊的笔记本罢了。"}]},{type:b,value:j},{type:c,tag:d,props:{},children:[{type:b,value:"刚刚上线，第一篇文章是把markdown的主要语法都试了个遍，但是我发现不知道为什么提交评论会有时候被404，导致显示网络异常，但是只要刷新一下页面，多提交几次就好了。"}]},{type:b,value:j},{type:c,tag:d,props:{},children:[{type:b,value:"以上，在此 2018-1-22 晚。"}]}];return {data:[{navbarConfig:{brandText:"无名の窝",brandUrl:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}]},homeConfig:{brandInterval:10000,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1649603270734),pageSize:10,total:109,currentPage:11,files:[{slug:o,description:p,createdAt:q,updatedAt:q,toc:[],body:r,excerpt:r,dir:s,path:"\u002F随笔\u002F20180208\u002F博客的不足",extension:f,title:o,url:"\u002Fblog-code\u002Fview\u002F随笔\u002F20180208\u002F博客的不足",createAt:new Date(1518048000000),updateAt:new Date(1518048000000),attributes:[{name:g,value:t},{name:h,value:t},{name:i,value:s,url:"\u002Fblog-code\u002Fpage\u002F随笔\u002F20180208\u002F1\u002F"}]},{slug:u,description:"上下文切换\ncpu通过给线程分配时间片，时间片一般是几十毫秒。在线程切换的时候，需要在切换前保存上一个任务的状态，以便下次切换回是可以再加载这个任务。这样一个任务从保存到在加载的过程就叫做上下文切换。多线程虽然能将多核cpu物尽其用，但是线程之间的切换也是需要时间和成本的。在并发编程中，将代码执行速度加快的原子是将代码中串行执行的部分变成并发执行，但是如果将串行执行的部分变成并发执行，因为受限于资源，仍然在串行执行，那程序不仅没有加快，还会变慢，因为增加了上下文切换和资源调度的时间。",createdAt:v,updatedAt:v,toc:[{id:w,depth:a,text:w},{id:x,depth:a,text:x},{id:y,depth:a,text:y},{id:z,depth:a,text:z},{id:A,depth:a,text:A},{id:"daemon线程",depth:a,text:"Daemon线程"},{id:B,depth:a,text:B},{id:"等待通知机制",depth:a,text:"等待\u002F通知机制"},{id:"管道输入流输出流",depth:a,text:"管道输入流\u002F输出流"},{id:C,depth:a,text:C},{id:D,depth:a,text:D},{id:E,depth:a,text:E}],body:F,excerpt:F,dir:N,path:"\u002Fjava\u002F20180204\u002Fjava并发编程的艺术学习笔记",extension:f,title:u,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180204\u002Fjava并发编程的艺术学习笔记",createAt:new Date(1517702400000),updateAt:new Date(1517702400000),attributes:[{name:g,value:O},{name:h,value:O},{name:i,value:N,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180204\u002F1\u002F"}]},{slug:P,description:n,createdAt:Q,updatedAt:Q,toc:[{id:R,depth:a,text:R},{id:S,depth:a,text:S},{id:T,depth:a,text:T},{id:U,depth:a,text:U},{id:V,depth:a,text:V},{id:W,depth:a,text:W},{id:X,depth:a,text:X},{id:Y,depth:a,text:Y},{id:Z,depth:a,text:Z}],body:_,excerpt:_,dir:$,path:"\u002Fjava\u002F20180202\u002F深入理解java虚拟机第八-十三章学习笔记",extension:f,title:P,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180202\u002F深入理解java虚拟机第八-十三章学习笔记",createAt:new Date(1517529600000),updateAt:new Date(1517529600000),attributes:[{name:g,value:aa},{name:h,value:aa},{name:i,value:$,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180202\u002F1\u002F"}]},{slug:ab,description:n,createdAt:ac,updatedAt:ac,toc:[{id:ad,depth:a,text:ad},{id:ae,depth:a,text:ae},{id:af,depth:a,text:af},{id:ag,depth:a,text:ag},{id:ah,depth:a,text:ah},{id:ai,depth:a,text:ai},{id:aj,depth:a,text:aj},{id:ak,depth:a,text:ak},{id:al,depth:a,text:al}],body:am,excerpt:am,dir:an,path:"\u002Fjava\u002F20180130\u002F深入理解java虚拟机第三-七章学习笔记",extension:f,title:ab,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180130\u002F深入理解java虚拟机第三-七章学习笔记",createAt:new Date(1517270400000),updateAt:new Date(1517270400000),attributes:[{name:g,value:ao},{name:h,value:ao},{name:i,value:an,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180130\u002F1\u002F"}]},{slug:ap,description:"先不说废话，看了再说\nb站连接https:\u002F\u002Fwww.bilibili.com\u002Fvideo\u002Fav8042104\u002F (没办法，b站的播放器矫情，不知道为什么报403加载失败，只好请你异步去b站看了)\n",createdAt:aq,updatedAt:aq,toc:[],body:ar,excerpt:ar,dir:at,path:"\u002F随笔\u002F20180129\u002F小推一个MV：shelter（避难所）",extension:f,title:ap,url:"\u002Fblog-code\u002Fview\u002F随笔\u002F20180129\u002F小推一个MV：shelter（避难所）",createAt:new Date(1517184000000),updateAt:new Date(1517184000000),attributes:[{name:g,value:au},{name:h,value:au},{name:i,value:at,url:"\u002Fblog-code\u002Fpage\u002F随笔\u002F20180129\u002F1\u002F"}]},{slug:av,description:n,createdAt:aw,updatedAt:aw,toc:[],body:ax,excerpt:ax,dir:ay,path:"\u002Fjava\u002F20180127\u002F深入理解java虚拟机第一二章学习笔记",extension:f,title:av,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180127\u002F深入理解java虚拟机第一二章学习笔记",createAt:new Date(1517011200000),updateAt:new Date(1517011200000),attributes:[{name:g,value:az},{name:h,value:az},{name:i,value:ay,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180127\u002F1\u002F"}]},{slug:aA,description:"没想到有啥好水，就水水博客的主题设计吧。\n博客的主题风格的设计我是想过挺久的。但是没什么思路，就跑去参考大家的博客。经过（并不）大量的对比之后，我总结出了博客主题的两种类别。第一种类别的版面设计比较简单朴素，页面的背景图片却比较华丽。另一类就是版面比较色彩斑斓，而背景比较朴素简单，简单来说就是朴素的背景，华丽的背景与朴素的版面，华丽的版面的搭配。经过思考主要是这两种搭配是有道理的。朴素的背景加朴素的版面就太朴素了，容易变得简单乏味。华丽的背景加华丽的版面，会令网址色彩过多，容易变成视觉污染。",createdAt:k,updatedAt:k,toc:[],body:aB,excerpt:aB,dir:aC,path:"\u002F随笔\u002F20180126\u002F博客的主题",extension:f,title:aA,url:"\u002Fblog-code\u002Fview\u002F随笔\u002F20180126\u002F博客的主题",createAt:new Date(1516924800000),updateAt:new Date(1516924800000),attributes:[{name:g,value:l},{name:h,value:l},{name:i,value:aC,url:"\u002Fblog-code\u002Fpage\u002F随笔\u002F20180126\u002F1\u002F"}]},{slug:aD,description:"磁力链接的神奇\n老司机都懂得擦擦键盘来传播磁力链接。一直很好奇为什么磁力链接这种完全去中心化的技术怎么就凭一串毫无规律的字符串，就在浩瀚的互联网里找到我们想要下载的数据呢。p2p不同于S\u002FC，假设我要下载京紫第一集，在S\u002FC模式下，我只需要知道b站有京紫，只要我找到b站就有京紫看，寻找b站只需要在浏览器输入bilibili.com便可以定位到b站了。如果我是通过bt下载京紫来看，可没有“京紫第一集.com”的网址让我去打开。网络里有N多个地址，这些地址后面不一定都有资源，就算有资源，也不一定有京紫呀，难不成我要各个地址都问一下？这岂不是大海捞针？\n说实在话，在网上看了那么多文章还是似懂非懂，但也再次记录一下我的理解吧。",createdAt:k,updatedAt:k,toc:[],body:aE,excerpt:aE,dir:aG,path:"\u002F协议\u002F20180126\u002F初探磁力链接的原理",extension:f,title:aD,url:"\u002Fblog-code\u002Fview\u002F协议\u002F20180126\u002F初探磁力链接的原理",createAt:new Date(1516924800000),updateAt:new Date(1516924800000),attributes:[{name:g,value:l},{name:h,value:l},{name:i,value:aG,url:"\u002Fblog-code\u002Fpage\u002F协议\u002F20180126\u002F1\u002F"}]},{slug:aH,description:"这个博客是从17年7月开始写的，但是之前我完全忘了数据库的存在，没脑把服务器的系统重装了。虽说数据库应该有个备份，但现在把博客又重新写了一遍，好多东西都不在兼容，懒得搞，所以文章现在就从头再开始写吧。\n重新把博客写过在这个学期开始的时候开始了，但是当时比现在更水皮，做出来的完全不像样。后来各种破事没空，就一直拖到现在，也总算就做出来了，匆匆赶工，也怕是bug不少。还请各位路过的大神放过小站，小站即没有什么你值得“发掘”的，也没有流量可以让你来钓鱼，就是个无聊的笔记本罢了。\n刚刚上线，第一篇文章是把markdown的主要语法都试了个遍，但是我发现不知道为什么提交评论会有时候被404，导致显示网络异常，但是只要刷新一下页面，多提交几次就好了。\n以上，在此 2018-1-22 晚。",createdAt:aI,updatedAt:aI,toc:[],body:aJ,excerpt:aJ,dir:aK,path:"\u002F随笔\u002F20180122\u002F博客又伪开张了",extension:f,title:aH,url:"\u002Fblog-code\u002Fview\u002F随笔\u002F20180122\u002F博客又伪开张了",createAt:new Date(1516579200000),updateAt:new Date(1516579200000),attributes:[{name:g,value:aL},{name:h,value:aL},{name:i,value:aK,url:"\u002Fblog-code\u002Fpage\u002F随笔\u002F20180122\u002F1\u002F"}]}]}],fetch:{},mutations:void 0}}(2,"text","element","p","root",".md","createAt","updateAt","sort","\n","2018-01-26T00:00:00.000Z","2018-01-26","a","","博客的不足","发现有个非常不好用的地方，我没有对我写的文章进行版本控制。这导致如果我按浏览器的返回建，返回到文章编辑页面，文章可能是编辑到一半的旧版本。如果我一个不留神保存了，就把新文章覆盖掉，tm又白写了。要版本控制现成的可以考虑备份到github，但是如果是多点部署就势必导致github远程产库和各个本地产库的同步问题，并且github连接速度这么慢，感觉并不是个好解决办法啊！","2018-02-08T00:00:00.000Z",{},"\u002F随笔\u002F20180208","2018-02-08","java并发编程的艺术学习笔记","2018-02-04T00:00:00.000Z","重量级锁","偏向锁","轻量级锁","线程的优先级","线程的状态","线程中断","队列同步器的同步队列","重入锁","读写锁",{},"h1","上下文切换","true",-1,"span","icon","icon-link","\u002Fjava\u002F20180204","2018-02-04","深入理解java虚拟机第八-十三章学习笔记","2018-02-02T00:00:00.000Z","局部变量表","操作数栈","动态连接","方法返回地址","静态分派","公共子表达式消除","数组边界消除","方法内联","逃逸分析",{},"\u002Fjava\u002F20180202","2018-02-02","深入理解java虚拟机第三-七章学习笔记","2018-01-30T00:00:00.000Z","标记-清除算法","复制算法","标记-整理算法","分代收集算法","加载","验证","准备","解析","初始化",{},"\u002Fjava\u002F20180130","2018-01-30","小推一个MV：shelter（避难所）","2018-01-29T00:00:00.000Z",{},"https:\u002F\u002Fwww.bilibili.com\u002Fvideo\u002Fav8042104\u002F","\u002F随笔\u002F20180129","2018-01-29","深入理解java虚拟机第一二章学习笔记","2018-01-27T00:00:00.000Z",{},"\u002Fjava\u002F20180127","2018-01-27","博客的主题",{},"\u002F随笔\u002F20180126","初探磁力链接的原理",{},"磁力链接的神奇","\u002F协议\u002F20180126","博客又伪开张了","2018-01-22T00:00:00.000Z",{},"\u002F随笔\u002F20180122","2018-01-22")));