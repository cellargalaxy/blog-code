__NUXT_JSONP__("/view/分布式/20200709/分布式事务", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D){return {data:[{siteConfig:{siteName:t,siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:10,urlReplace:{"^/file/blog/code":"https:\u002F\u002Foracleamd1.dynv6.net\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:u,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:v,type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:v,type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:f},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:f}]}},homeConfig:{brandInterval:u,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1684599351634),siteName:t,file:{slug:w,description:"",createdAt:x,updatedAt:x,toc:[],body:{type:y,children:[{type:a,value:c},{type:b,tag:h,props:{id:"两阶段提交xa"},children:[{type:b,tag:e,props:{href:"#%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4xa",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:"两阶段提交(XA)"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"两阶段提交需要一个事务管理器，来协调两个阶段。"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"事务管理器会在每个数据库进行预提交，检查是否预提交都就绪"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果都就绪，则让每个数据库提交事务，否则回滚事务"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"尽量保证了数据的一致性"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"事务管理器有单例问题，宕机了整个系统不可用"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"在第二步里通知提交或者回滚都可能通知失败，导致数据不一致"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"在第二步里通知到一半，事务管理器宕机选举，新主节点不知道那些服务还没通知"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"依赖于数据库，性能低"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"不符合微服务设计的每个微服务只能处理自己的数据库"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:"tcctry-confirm-cancel"},children:[{type:b,tag:e,props:{href:"#tcctry-confirm-cancel",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:"TCC(Try Confirm Cancel)"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Try：对各个服务的资源进行检查和冻结"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Confirm：将冻结转为执行具体的操作"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Cancel：在确认阶段失败了，执行已成功的操作的补偿操作"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"回滚依赖于自己实现的补偿代码"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"适合于钱等需要较强一致性的场景"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"需要分布式事务整个流程较短"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:"saga"},children:[{type:b,tag:e,props:{href:"#saga",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:"Saga"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"saga的流程是依次执行提交各个服务的本地事务，如无意外都执行成功则分布式事务完成。\n如果其中有一个事务失败，则对已经执行成功的事务进行补偿操作。"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"适合于分布式事务流程比较长"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"一致性比TCC差"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"不保证事务的隔离性"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:"tcc与saga"},children:[{type:b,tag:e,props:{href:"#tcc%E4%B8%8Esaga",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:"TCC与Saga"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"在TCC的第一步中，全部本地事务都是还没提交的。而Saga里依次执行本地事务是执行就提交的"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"TCC还需要先进行try操作进行冻结。而Saga是直接执行提交，所以少了一次调用"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"因为TCC需要等待全部本地事务进行冻结，所以在这个阶段资源会都被阻塞，需要较短的分布式事务。\n而Saga提交的颗粒度是本地事务，所以适合于较长的分布式事务"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"因为TCC是在一步里确认全部的本地事务，所以一致性强于Saga的逐个本地事务进行提交"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"因为TCC在try里阻塞了资源，所以分布式事务之间是隔离的。而Saga的逐个本地事务则不隔离"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:z},children:[{type:b,tag:e,props:{href:"#%E6%9C%AC%E5%9C%B0%E6%B6%88%E6%81%AF%E8%A1%A8",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:z}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A服务在本地事务里除了进行业务操作，还在一个消息表里插入一条数据，然后往MQ里丢一条消息"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A服务也会定期扫描消息表，把消息表的消息丢到MQ里"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"B服务从MQ收到消息后执行本地事务。如果成功则去除A服务里消息表对应的数据，否则通知A服务执行补偿操作"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"依赖于数据库管理事务，性能低"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:A},children:[{type:b,tag:e,props:{href:"#%E6%9C%80%E5%A4%A7%E5%8A%AA%E5%8A%9B%E9%80%9A%E7%9F%A5",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"适合于不支持消息事务的MQ。"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A服务执行本地事务，执行成功后往MQ里丢一条消息"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"有一个最大努力通知服务来专门消费MQ的消息，去调B服务来执行本地事务"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果B服务执行成功，则分布式事务完成，否则重试几次，重试不行就放弃"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{id:B},children:[{type:b,tag:e,props:{href:"#%E5%8F%AF%E9%9D%A0%E6%B6%88%E6%81%AF%E6%9C%8D%E5%8A%A1",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"需要使用一个MQ来实现，其功能目前只有RocketMQ支持消息事务。"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A服务向MQ丢一条消息，MQ只先持久化消息，不放到队列里。如果失败了则取消事务"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"丢成功以后，A服务执行本地事务。如果执行成功通知MQ把消息放到队列里，否则丢弃消息取消事务"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"其中A服务对MQ的调用如果丢失了，MQ会在消息投递后的一段时间后，回调A服务的接口，查询A服务的本地事务是执行已提交、已回滚还是执行中"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"之后B服务就会从MQ里收到消息，然后同步执行本地事务。成功的话向MQ提交，分布式事务完成，否则B服务会有个重试次数，再不行则报警"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A服务的本地事务与MQ同步是异步的，以提高A服务的并发"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A服务与MQ的异步消息丢失通过MQ回调来弥补"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"参考文章："}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fjuejin.im\u002Fpost\u002F5aa3c7736fb9a028bb189bca",rel:[p,q,r],target:s},children:[{type:a,value:"常用的分布式事务解决方案"}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fxiaomi-info.github.io\u002F2020\u002F01\u002F02\u002Fdistributed-transaction\u002F",rel:[p,q,r],target:s},children:[{type:a,value:"分布式事务，这一篇就够了"}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fdoocs.github.io\u002Fadvanced-java\u002F#\u002Fdocs\u002Fdistributed-system\u002Fdistributed-transaction",rel:[p,q,r],target:s},children:[{type:a,value:"分布式事务了解吗？"}]}]}]},excerpt:{type:y,children:[]},dir:C,path:"\u002F分布式\u002F20200709\u002F分布式事务",extension:".md",title:w,url:"\u002Fblog-code\u002Fview\u002F分布式\u002F20200709\u002F分布式事务\u002F",createAt:new Date(1594252800000),updateAt:new Date(1594252800000),attributes:[{name:"createAt",value:D},{name:"updateAt",value:D},{name:"sort",value:C,url:"\u002Fblog-code\u002Fpage\u002F分布式\u002F20200709\u002F1\u002F"}]}}],fetch:{},mutations:void 0}}("text","element","\n","li","a","wide","p","h1","true",-1,"span","icon","icon-link","ul","ol","nofollow","noopener","noreferrer","_blank","无名の窝",10000,"青春猪头-牧之原翔子-江之岛","分布式事务","2020-07-09T00:00:00.000Z","root","本地消息表","最大努力通知","可靠消息服务","\u002F分布式\u002F20200709","2020-07-09")));