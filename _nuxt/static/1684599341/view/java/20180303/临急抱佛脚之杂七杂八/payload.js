__NUXT_JSONP__("/view/java/20180303/临急抱佛脚之杂七杂八", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT){return {data:[{siteConfig:{siteName:ar,siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:10,urlReplace:{"^/file/blog/code":"https:\u002F\u002Foracleamd1.dynv6.net\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:as,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:at,type:I},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:at,type:I},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:I},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:I},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:I},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:I},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:I},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:I}]}},homeConfig:{brandInterval:as,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1684599349545),siteName:ar,file:{slug:au,description:av,createdAt:aw,updatedAt:aw,toc:[{id:ax,depth:r,text:ay},{id:az,depth:r,text:aA},{id:aB,depth:r,text:aC},{id:aD,depth:r,text:aE},{id:aF,depth:r,text:aG},{id:aH,depth:r,text:aI},{id:aJ,depth:r,text:aK},{id:aL,depth:r,text:aM},{id:aN,depth:r,text:aO},{id:aP,depth:r,text:aQ},{id:V,depth:r,text:V},{id:aR,depth:r,text:aS},{id:aT,depth:r,text:aU},{id:aV,depth:r,text:aW},{id:aX,depth:r,text:aY},{id:aZ,depth:r,text:a_},{id:a$,depth:r,text:ba},{id:bb,depth:r,text:bc},{id:bd,depth:r,text:be},{id:W,depth:P,text:W},{id:X,depth:P,text:X},{id:bf,depth:P,text:bg},{id:Y,depth:P,text:Y},{id:Z,depth:P,text:Z},{id:_,depth:P,text:_},{id:$,depth:P,text:$},{id:aa,depth:r,text:aa},{id:ab,depth:r,text:ab}],body:{type:bh,children:[{type:a,value:e},{type:b,tag:z,props:{id:bi},children:[{type:b,tag:h,props:{href:"#java%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:bi}]},{type:a,value:e},{type:b,tag:s,props:{id:ax},children:[{type:b,tag:h,props:{href:"#string%E7%B1%BB%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AFfinal%E7%9A%84",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:ay}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"final char[],但数组的值可变，为了不被重写方法修改char[]值，所以final String维持不可变性。"}]},{type:a,value:e},{type:b,tag:s,props:{id:az},children:[{type:b,tag:h,props:{href:"#stringstringbuilderstringbuffer-%E5%8C%BA%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aA}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Stringbuilder不是线程安全，Stringbuffer是线程安全。当有大量字符串操作时，效率：Stringbuilder》Stringbuffer》String"}]},{type:a,value:e},{type:b,tag:s,props:{id:aB},children:[{type:b,tag:h,props:{href:"#classforname%E5%92%8Cclassloader%E7%9A%84%E5%8C%BA%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aC}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"一个类的装载有三个过程：加载（将class文件读取到jvm里），连接，初始化（执行类的静态块）。而Class.forName会执行初始化过程，classloader不会。"}]},{type:a,value:e},{type:b,tag:J,props:{className:[K]},children:[{type:b,tag:L,props:{className:[M,S]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002FClass.forName的源码"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bj}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:T}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,bk]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:bm}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:bn}]}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bo}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"String"}]},{type:a,value:" className"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,bk]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:bm}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:bn}]}]},{type:a,value:" caller "},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:ac}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"Reflection"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"getCallerClass"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F这里这个true表示初始化这个类"}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"return"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"forName0"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:"className"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ai}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,"boolean"]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ai}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"getClassLoader"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:"caller"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ai}]},{type:a,value:" caller"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"测试代码"}]},{type:a,value:e},{type:b,tag:J,props:{className:[K]},children:[{type:b,tag:L,props:{className:[M,S]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"package"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,bp]},children:[{type:a,value:"reflect"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,ak,C]},children:[{type:a,value:"\u002F**\n * Created by cellargalaxy on 17-10-21.\n *\u002F"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bj}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"class"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"People"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"implements"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"HelloSay"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:T}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"\"执行了People的静态块\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F。。。"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:J,props:{className:[K]},children:[{type:b,tag:L,props:{className:[M,S]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,ak,C]},children:[{type:a,value:bq}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:br}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:T}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bs}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"test13"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aj}]},{type:a,value:" classLoader"},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"getSystemClassLoader"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:U}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:ac}]},{type:a,value:"classLoader"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"loadClass"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:bu}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"\"classLoader加载\""}]},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:bv}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,ak,C]},children:[{type:a,value:bq}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:br}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:T}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bs}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"test12"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:U}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bo}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:bu}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"\"Class.forName加载\""}]},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:bv}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"运行结果"}]},{type:a,value:e},{type:b,tag:J,props:{className:[K]},children:[{type:b,tag:L,props:{className:[M,bx]},children:[{type:b,tag:o,props:{},children:[{type:a,value:"\u002F\u002Ftest12()\n执行了People的静态块\nClass.forName加载class reflect.People\n\u002F\u002Ftest13()\nclassLoader加载class reflect.People\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"所以在JDBC中，使用的是"},{type:b,tag:o,props:{},children:[{type:a,value:"Class.forName(\"com.mysql.jdbc.Driver\")"}]}]},{type:a,value:e},{type:b,tag:J,props:{className:[K]},children:[{type:b,tag:L,props:{className:[M,S]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:T}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"try"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,q]},children:[{type:b,tag:c,props:{className:[d,bp]},children:[{type:a,value:"java"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:"sql"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]}]},{type:a,value:"DriverManager"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"registerDriver"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:by}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"Driver"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"catch"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"SQLException"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"E"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"throw"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:by}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"RuntimeException"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"\"Can't register driver!\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:s,props:{id:aD},children:[{type:b,tag:h,props:{href:"#session%E5%92%8Ccookie%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BBsession%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aE}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:"table",props:{},children:[{type:b,tag:"thead",props:{},children:[{type:b,tag:ap,props:{},children:[{type:b,tag:ad,props:{},children:[{type:a,value:"对象"}]},{type:b,tag:ad,props:{},children:[{type:a,value:"保存时间"}]},{type:b,tag:ad,props:{},children:[{type:a,value:"应用范围"}]},{type:b,tag:ad,props:{},children:[{type:a,value:"保存位置"}]}]}]},{type:b,tag:"tbody",props:{},children:[{type:b,tag:ap,props:{},children:[{type:b,tag:O,props:{},children:[{type:a,value:"Session"}]},{type:b,tag:O,props:{},children:[{type:a,value:"用户活动时间+一段延迟时间(默认20分钟)"}]},{type:b,tag:O,props:{},children:[{type:a,value:bz}]},{type:b,tag:O,props:{},children:[{type:a,value:"服务器端"}]}]},{type:b,tag:ap,props:{},children:[{type:b,tag:O,props:{},children:[{type:a,value:"Cookie"}]},{type:b,tag:O,props:{},children:[{type:a,value:"浏览器周期"}]},{type:b,tag:O,props:{},children:[{type:a,value:bz}]},{type:b,tag:O,props:{},children:[{type:a,value:"客户端"}]}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"浏览器访问服务器时，服务器会按需要创建一个session对象。这个session对象有一个唯一的id，这个id默认通过cookie机制发送给浏览器，当浏览器再次访问服务器时会带上这个cookie，服务器就会根据这个cookie查找对于的session。所以session是基于cookie的。如果浏览器禁用了cookie，可以通过url重写或者隐藏的表单域的方法向服务器提交cookie。url重写既是把cookie写在url的参数上，隐藏的表单域法就是创建一个隐藏的表单域，在浏览器提交表单时把表单的cookie信息随便提交给服务器。"}]},{type:a,value:e},{type:b,tag:z,props:{id:bA},children:[{type:b,tag:h,props:{href:"#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:bA}]},{type:a,value:e},{type:b,tag:s,props:{id:aF},children:[{type:b,tag:h,props:{href:"#%E5%87%A0%E4%B8%AAjava%E9%9B%86%E5%90%88%E7%B1%BB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aG}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"List集合类：ArrayList，LinkedList\nSet集合类：HashSet，TreeSet\nMap集合类：HashMap，TreeMap"}]},{type:a,value:e},{type:b,tag:s,props:{id:aH},children:[{type:b,tag:h,props:{href:"#arraylist%E5%92%8Clinkedlist%E5%90%84%E8%87%AA%E5%AE%9E%E7%8E%B0%E5%92%8C%E5%8C%BA%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aI}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"ArrayList是对数组操作的分装，数组大小不够时需要进行扩容。在前面或者中间进行增删操作需要移动后面的元素，时间复杂度O(n)。查找通过下标查找，时间复杂度O(1)。LinkedList是由节点构成并存储数据，不需要进行扩容，任意的增删操作时间复杂度O(1)。查找需要按顺序一个一个节点查找，时间复杂度O(n)。需要大量随机查找ArrayList好，需要大量前面或者中间插入LinkedList好。"}]},{type:a,value:e},{type:b,tag:s,props:{id:aJ},children:[{type:b,tag:h,props:{href:"#java%E4%B8%AD%E7%9A%84%E9%98%9F%E5%88%97%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aK}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"相比于普通队列，阻塞队列会在队列为空而从队列里获取数据，会被阻塞，直到有数据被添加到队列里。同样，当队列已满，往队列里添加数据会被阻塞，知道有数据被移除为止。"}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"ArrayDeque 双向队列"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"LinkedBlockingDeque 阻塞双端队列"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"ArrayBlockingQueue 双向并发阻塞队列"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"LinkedBlockingQueue FIFO 队列"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"ConcurrentLinkedQueue 基于链接节点的无界线程安全队列"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"PriorityBlockingQueue 带优先级的无界阻塞队列"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:z,props:{id:"java虚拟机"},children:[{type:b,tag:h,props:{href:"#java%E8%99%9A%E6%8B%9F%E6%9C%BA",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:"Java虚拟机"}]},{type:a,value:e},{type:b,tag:s,props:{id:aL},children:[{type:b,tag:h,props:{href:"#java%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E7%9A%84%E9%97%AE%E9%A2%98%E8%B0%83%E6%9F%A5%E5%AE%9A%E4%BD%8D",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aM}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"jmap用于获取jvm某个时刻的快照，导出为dump文件。\njstat可以用来某个Java进程内的线程堆栈信息。"}]},{type:a,value:e},{type:b,tag:J,props:{className:[K]},children:[{type:b,tag:L,props:{className:[M,"language-shell"]},children:[{type:b,tag:o,props:{},children:[{type:a,value:"jstat "},{type:b,tag:c,props:{className:[d,"parameter","variable"]},children:[{type:a,value:"-gc"}]},{type:a,value:" pid\n"},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"#可以显示gc的信息，查看gc的次数，及时间"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"#其中最后五项，分别是young gc的次数，young gc的时间，full gc的次数，full gc的时间，gc的总时间"}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:s,props:{id:aN},children:[{type:b,tag:h,props:{href:"#jvm%E5%8F%82%E6%95%B0%E5%A0%86%E5%86%85%E5%AD%98%E5%A4%A7%E5%B0%8F",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aO}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"-Xms：启动JVM时的堆内存空间"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"-Xmx：堆内存最大限制"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:z,props:{id:"java并发编程"},children:[{type:b,tag:h,props:{href:"#java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:"Java并发编程"}]},{type:a,value:e},{type:b,tag:s,props:{id:aP},children:[{type:b,tag:h,props:{href:"#%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8Bstart%E6%96%B9%E6%B3%95%E5%92%8Crun%E7%9A%84%E5%8C%BA%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aQ}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"直接调用run方法只是普通的调用，也要等到run方法返回了才能继续往下执行。而调用start方法将启动一个线程，线程从创建状态转变成就绪状态。当线程获得cpu时间，start方法将会调用run方法。"}]},{type:a,value:e},{type:b,tag:s,props:{id:V},children:[{type:b,tag:h,props:{href:"#%E5%B8%B8%E7%94%A8%E7%9A%84%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%A8%A1%E5%BC%8F%E4%BB%A5%E5%8F%8A%E4%B8%8D%E5%90%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:V}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"newCachedThreadPool：创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"newFixedThreadPool：创建一个定长线程池，可控制线程最大并发数，超出的线程会在队列中等待"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"newScheduledThreadPool：创建一个定长线程池，支持定时及周期性任务执行"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"newSingleThreadExecutor：创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序 (FIFO, LIFO, 优先级) 执行"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:s,props:{id:aR},children:[{type:b,tag:h,props:{href:"#%E4%BA%86%E8%A7%A3%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81%E7%9A%84%E5%90%AB%E4%B9%89%E4%BB%A5%E5%8F%8Areentrantlock%E5%92%8Csynchronized%E7%9A%84%E5%8C%BA%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aS}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"重入锁是同一个线程可以多次获取同一个锁。synchronized需要一个对象作为锁对象，代码进入synchronized块即获取锁，报异常或者离开synchronized块jvm或自动是否锁，避免锁死。ReentrantLock通过计数器作为标志加锁，获取锁需要显式声明，所释放需放在finally里，需要手动释放，避免死锁。在低并发下，synchronized好，在高并发下，synchronized效率会下降几十倍，而ReentrantLock效率比较稳定。ReentrantLock除了synchronized的功能，多了三个高级功能：等待可中断，公平锁，绑定多个 Condition。"}]},{type:a,value:e},{type:b,tag:z,props:{id:"spring"},children:[{type:b,tag:h,props:{href:"#spring",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:"Spring"}]},{type:a,value:e},{type:b,tag:s,props:{id:aT},children:[{type:b,tag:h,props:{href:"#springspring-mvc%E5%8F%8Aspring-boot%E5%8C%BA%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aU}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Spring一般指的是Spring Framework，核心容器（Spring Code）提供控制反转（IOC）功能。在核心容器的控制反转功能上，继续开发了："}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Spring AOP"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Spring JDBC"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Spring MVC"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Spring ORM"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Spring JMS"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Spring Test"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:bB}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"可见，Spring MVC是一个基于Spring的MVC框架。随着功能越来越多，配置文件越来越臃肿，虽然后来加入了注解的配置方法，但是还是好麻烦。所以Spring Boot以"},{type:b,tag:ae,props:{},children:[{type:a,value:"约定优于配置原则"}]},{type:a,value:"，对Spring各个功能都有一套默认的配置，免除开发时反复粘贴默认习惯的配置，实现"},{type:b,tag:ae,props:{},children:[{type:a,value:"自动配置"}]},{type:a,value:"，降低项目搭建的复杂度。使用这些默认配置只需在pom.xml引入Spring Boot的starter形式的依赖。"}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"spring-boot-starter-web-services：针对SOAP Web Services"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"spring-boot-starter-web：针对Web应用与网络接口"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"spring-boot-starter-jdbc：针对JDBC"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"spring-boot-starter-data-jpa：基于hibernate的持久层框架"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"spring-boot-starter-cache：针对缓存支持"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:bB}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:"img",props:{alt:av,"data-src":"https:\u002F\u002Foracleamd1.dynv6.net\u002Ffile\u002Ffile\u002Fblog\u002Fcode\u002F20180303\u002Fupload-images.jianshu.io-upload_images-4185175-a0a50bf022178e1d.png"},children:[]}]},{type:a,value:e},{type:b,tag:s,props:{id:aV},children:[{type:b,tag:h,props:{href:"#%E5%9F%BA%E4%BA%8Ejdk%E4%BB%A3%E7%90%86%E5%92%8Ccglib%E7%9A%84aop%E5%AE%9E%E7%8E%B0%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aW}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"动态代理有两种，一种是JDK自带的东塔代理，另一种是使用asm开源包的cglib动态代理。因此，Spring的切面编程（AOP）也有两种实现。JDK的动态代理需要获取被代理类的接口，代理类实现被代理类的接口并顺便代理。"},{type:b,tag:ae,props:{},children:[{type:a,value:"因此JDK动态代理只能代理接口而不能代理类。"},{type:b,tag:ae,props:{},children:[{type:a,value:"而cglib能代理类，他是通过继承被代理类来代理的，因此"}]},{type:a,value:"使用cglib的被代理类及其全部方法都不能被声明为final。"}]}]},{type:a,value:e},{type:b,tag:s,props:{id:aX},children:[{type:b,tag:h,props:{href:"#%E7%9B%91%E5%90%AC%E5%99%A8%E6%8B%A6%E6%88%AA%E5%99%A8%E7%9A%84%E4%BD%9C%E7%94%A8%E5%8C%BA%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aY}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"监听器Listener，实现了javax.servlet.ServletContextListener接口，随web应用的启动而启动，只初始化一次，随web应用的停止而销毁，用来进行一些初始化操作。过滤器Filter，实现了javax.servlet.Filter接口，对指定路径的请求进行拦截，用来做字符编码，用户登录的检查等。"}]},{type:a,value:e},{type:b,tag:s,props:{id:aZ},children:[{type:b,tag:h,props:{href:"#tomcat%E8%B7%9Fservlet%E7%9A%84%E5%85%B3%E7%B3%BB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:a_}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Tomcat是一个免费的开放源代码的Servlet容器，Servlet是tomcat的组件。tomcat接收客户请求，创建出HttpRequest对象和HttpResponse对象，将HttpRequest对象和HttpResponse对象传递给Servlet，Servlet根据HttpRequest对象和HttpResponse对象返回响应数据给tomcat，tomcat再把响应数据返回给客户。"}]},{type:a,value:e},{type:b,tag:s,props:{id:a$},children:[{type:b,tag:h,props:{href:"#servlet%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:ba}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Servlet生命周期总共分为三个步骤"}]},{type:a,value:e},{type:b,tag:bC,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:aq},{type:b,tag:o,props:{},children:[{type:a,value:"init()"}]},{type:a,value:"方法初始化，只调用一次"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:aq},{type:b,tag:o,props:{},children:[{type:a,value:"service()"}]},{type:a,value:"方法来处理客户端的请求，service方法会检查HTTP请求类型，调用 doGet、doPost、doPut、doDelete 方法"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:aq},{type:b,tag:o,props:{},children:[{type:a,value:"destroy()"}]},{type:a,value:"方法释放资源，标记自身为可回收，Servlet 生命周期结束时调用"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:z,props:{id:"mysql"},children:[{type:b,tag:h,props:{href:"#mysql",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:"MySQL"}]},{type:a,value:e},{type:b,tag:s,props:{id:bb},children:[{type:b,tag:h,props:{href:"#mysql%E5%BC%95%E6%93%8E%E7%9A%84%E7%89%B9%E7%82%B9",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:bc}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"|特性|MyISAM|InnoDB|Memory|Archive|NDB|BDB|\n|----|--|--|--|--|--|--|--|--|--|--|--|\n|存储限制|No| 64TB| Yes|  No|Yes| No|\n|事务|×|√|×|×|×|√|\n|MVCC|×|√|×|√|√|×|\n|锁粒度|Table| Row| Table|Row|Row| Page|\n|B树索引|√|√|√|×|√|√|\n|哈希索引|×| √| √|×| √|×|\n|全文索引|√|5.6支持e文|×|×|×|×|\n|集群索引|×|√|×|×|×|×|\n|数据缓存|×|√|√|×|√|×|\n|索引缓存| √| √| √|×| √|×|\n|数据压缩|√|×|×|√|×|×|\n|批量插入|高|相对低|高|非常高| 高|高|\n|内存消耗|低|高|中| 低|高| 低|\n|外键支持|×|√|×|×|×|×|\n|复制支持|√|√|√|√|√|√|\n|查询缓存|√|√|√|√|√|√|\n|集群支持|×|×|×|×|√|×|"}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"MyISAM"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"MyISAM是mysql默认的引擎。需要经常执行OPTIMIZE TABLE命令来消除碎片，否则会影响效率。\n优点：与操作系统独立。大量查询和插入时速度快。单独保存表行数\n缺点：不支持事务，行锁和外键。update效率低"}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"InnoDB"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"优点： 支持事务，自增长列，外键。使用颗粒度小的行锁，写和更新操作高。提供系统奔溃修复能力，支持自动灾难恢复。"}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"MEMORY"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"优点：使用内存储存，有很高性能\n缺点：mysql守护进程奔溃时，内存里的数据会全部丢失。不可使用长度可变数据类型（如BLOB和TEXT），但varchar类型可用（varchar在MySQL内部被当做char类型）"}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"CSV"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"使用csv文件保存数据。不支持索引，没有主键，不允许为空"}]},{type:a,value:e},{type:b,tag:D,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"ARCHIVE"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"ARCHIVE适合存储大量独立、作为历史记录的数据。ARCHIVE提供压缩功能，插入高效，但不支持索引，查询较慢。"}]},{type:a,value:e},{type:b,tag:s,props:{id:bd},children:[{type:b,tag:h,props:{href:"#mysql%E6%9C%80%E5%B7%A6%E5%8C%B9%E9%85%8D%E5%8E%9F%E5%88%99",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:be}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"例如建立了一个索引(a,b,c)，则相当于建立里(a)，(a,b)，(a,b,c)三个索引。"}]},{type:a,value:e},{type:b,tag:Q,props:{id:W},children:[{type:b,tag:h,props:{href:"#%E5%85%A8%E5%88%97%E5%8C%B9%E9%85%8D",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:W}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:af},{type:b,tag:o,props:{},children:[{type:a,value:"where a=1 and b=2 and c=3"}]},{type:a,value:"，使用了索引(a,b,c)。理论上where语句的顺序会影响，但是mysql会调整顺序以使用适合的索引。"}]},{type:a,value:e},{type:b,tag:Q,props:{id:X},children:[{type:b,tag:h,props:{href:"#%E6%9C%80%E5%B7%A6%E5%89%8D%E7%BC%80%E5%8C%B9%E9%85%8D",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:X}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"where只有索引连续的前几个，例如"},{type:b,tag:o,props:{},children:[{type:a,value:"where a=1 and b=2"}]},{type:a,value:"，使用到索引。"}]},{type:a,value:e},{type:b,tag:Q,props:{id:bf},children:[{type:b,tag:h,props:{href:"#%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6%E7%94%A8%E5%88%B0%E4%BA%86%E7%B4%A2%E5%BC%95%E4%B8%AD%E5%88%97%E7%9A%84%E7%B2%BE%E7%A1%AE%E5%8C%B9%E9%85%8D%E4%BD%86%E6%98%AF%E4%B8%AD%E9%97%B4%E6%9F%90%E4%B8%AA%E6%9D%A1%E4%BB%B6%E6%9C%AA%E6%8F%90%E4%BE%9B",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:bg}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:af},{type:b,tag:o,props:{},children:[{type:a,value:"where a=1 and c=3"}]},{type:a,value:"，因为没有b，所以所以只使用到a索引。在a的结果再对c进行过滤。"}]},{type:a,value:e},{type:b,tag:Q,props:{id:Y},children:[{type:b,tag:h,props:{href:"#%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6%E6%B2%A1%E6%9C%89%E6%8C%87%E5%AE%9A%E7%B4%A2%E5%BC%95%E7%AC%AC%E4%B8%80%E5%88%97",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:Y}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:bD}]},{type:a,value:e},{type:b,tag:Q,props:{id:Z},children:[{type:b,tag:h,props:{href:"#%E5%8C%B9%E9%85%8D%E6%9F%90%E5%88%97%E7%9A%84%E5%89%8D%E7%BC%80%E5%AD%97%E7%AC%A6%E4%B8%B2",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:Z}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:af},{type:b,tag:o,props:{},children:[{type:a,value:"where  a=1 and b like 'Senior%'"}]},{type:a,value:",此时可以用到索引，但需要通配符%不出现在开头。"}]},{type:a,value:e},{type:b,tag:Q,props:{id:_},children:[{type:b,tag:h,props:{href:"#%E8%8C%83%E5%9B%B4%E6%9F%A5%E8%AF%A2",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:_}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:af},{type:b,tag:o,props:{},children:[{type:a,value:"where a \u003C 1 and b=2"}]},{type:a,value:"，范围列可以用到索引，但是范围列后面的列无法用到索引。所以如果查询条件中有两个范围列则无法用全到索引。"}]},{type:a,value:e},{type:b,tag:Q,props:{id:$},children:[{type:b,tag:h,props:{href:"#%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6%E4%B8%AD%E5%90%AB%E6%9C%89%E5%87%BD%E6%95%B0%E6%88%96%E8%A1%A8%E8%BE%BE%E5%BC%8F",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:$}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:bD}]},{type:a,value:e},{type:b,tag:s,props:{id:aa},children:[{type:b,tag:h,props:{href:"#%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9B%9B%E4%B8%AA%E7%89%B9%E6%80%A7",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:aa}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"原子性：即一个事务要不全部完成，要不全部失败。如果失败不能对数据库有任何影响。"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"一致性：完成一个事务，数据库是从一个一致状态转变到另一个一致状态。即事务前后，数据库的数据都需要一致正确。"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"持久性：一旦一个事务完成，即便是数据库奔溃，操作依然不会丢失。"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"隔离性：当并发执行多个事务时，各个事务之间不能相互干扰。"}]},{type:a,value:e},{type:b,tag:s,props:{id:ab},children:[{type:b,tag:h,props:{href:"#%E4%BA%8B%E5%8A%A1%E7%9A%84%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:ab}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"脏读：读取到了其他还没提交的事务修改的数据"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"不可重复读：在同一个事务中多次读取同一个数据，由于期间被其他事务所修改，其数据的值并不一样。与脏读读取到的是未提交的数据不同，不可重复读读取到的是前一个事务提交了的数据。"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"幻读：不是很理解，看了几篇文章都没有比较精炼的语言来概括，这里就只能举个例子：一个事务读取2次，得到的记录条数不一致，由于2次读取之间另外一个事务对数据进行了增删。"}]},{type:a,value:e},{type:b,tag:bC,props:{},children:[{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Serializable (串行化)：可避免脏读、不可重复读、幻读的发生"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Repeatable read (可重复读)：可避免脏读、不可重复读的发生"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Read committed (读已提交)：可避免脏读的发生"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"Read uncommitted (读未提交)：最低级别，任何情况都无法保证"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:z,props:{id:bE},children:[{type:b,tag:h,props:{href:"#%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:bE}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"使用数据库连接池能重复利用数据库连接。创建销毁一个数据库连接需要花费大量开销。数据库连接池能先建立一些数据库连接，但程序需要使用数据库连接是，直接从数据库中获取，使用完归还给数据库连接池，提高程序的响应速度。数据库连接池的存在使得可以统一管理数据库连接，限制程序所创建的连接数，避免单一程序占用过多的连接资源。还可以设置连接占用时间，避免连接泄露（就是连接被异常情况一直占用）"}]},{type:a,value:e},{type:b,tag:z,props:{id:"scheduled注解实现定时任务"},children:[{type:b,tag:h,props:{href:"#scheduled%E6%B3%A8%E8%A7%A3%E5%AE%9E%E7%8E%B0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:"@Scheduled注解实现定时任务"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"第一步，需要在Spring Boot的主类中加入"},{type:b,tag:o,props:{},children:[{type:a,value:"@EnableScheduling"}]},{type:a,value:"注解，启用定时任务的配置\n"},{type:b,tag:o,props:{},children:[{type:a,value:"@Scheduled(fixedRate = 5000)"}]},{type:a,value:"：上一次开始执行时间点之后5秒再执行\n"},{type:b,tag:o,props:{},children:[{type:a,value:"@Scheduled(fixedDelay = 5000)"}]},{type:a,value:"：上一次执行完毕时间点之后5秒再执行\n"},{type:b,tag:o,props:{},children:[{type:a,value:"@Scheduled(initialDelay=1000, fixedRate=5000)"}]},{type:a,value:"：第一次延迟1秒后执行，之后按fixedRate的规则每5秒执行一次"}]},{type:a,value:e},{type:b,tag:z,props:{id:"spring-boot中的filter自动注入为空"},children:[{type:b,tag:h,props:{href:"#spring-boot%E4%B8%AD%E7%9A%84filter%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5%E4%B8%BA%E7%A9%BA",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:"Spring Boot中的Filter自动注入为空"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"发生这个情况的原因以前在网上看过，模糊记得原因是：tomcat加载顺序依次是监听器，过滤器和servlet。当监听器和过滤器被加载时spring还没启动，因此其实并没有注入，所以为空。解决办法是在监听器的"},{type:b,tag:o,props:{},children:[{type:a,value:"contextInitialized"}]},{type:a,value:bF},{type:b,tag:o,props:{},children:[{type:a,value:"WebApplicationContextUtils.getRequiredWebApplicationContext(servletContextEvent.getServletContext()).getAutowireCapableBeanFactory().autowireBean(this);"}]},{type:a,value:"，过滤器的"},{type:b,tag:o,props:{},children:[{type:a,value:"doFilter"}]},{type:a,value:bF},{type:b,tag:o,props:{},children:[{type:a,value:"SpringBeanAutowiringSupport.processInjectionBasedOnServletContext(this, filterConfig.getServletContext());"}]}]},{type:a,value:e},{type:b,tag:z,props:{id:bG},children:[{type:b,tag:h,props:{href:"#commons-codec%E5%8C%85",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:bG}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"commons-codec包的使用很简单，使用DigestUtils类下的各种静态方法即可，例如"},{type:b,tag:o,props:{},children:[{type:a,value:"DigestUtils.sha256Hex(string)"}]}]},{type:a,value:e},{type:b,tag:z,props:{id:"利用生产者消费者模式"},children:[{type:b,tag:h,props:{href:"#%E5%88%A9%E7%94%A8%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85%E6%A8%A1%E5%BC%8F",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:"利用生产者\u002F消费者模式"}]},{type:a,value:e},{type:b,tag:J,props:{className:[K]},children:[{type:b,tag:L,props:{className:[M,S]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F等待方"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bH}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:bI},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"while"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:"条件不满足"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:"\n        锁对象"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"wait"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:"\n    其他逻辑\n"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F通知方"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bH}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:bI},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:A}]},{type:a,value:"\n    改变条件\n    锁对象"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"notify"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:B}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:z,props:{id:"使用nginx提供文件服务器功能并实现双机负载均衡"},children:[{type:b,tag:h,props:{href:"#%E4%BD%BF%E7%94%A8nginx%E6%8F%90%E4%BE%9B%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%9F%E8%83%BD%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%8F%8C%E6%9C%BA%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1",ariaHidden:i,tabIndex:j},children:[{type:b,tag:c,props:{className:[k,l]},children:[]}]},{type:a,value:"使用Nginx提供文件服务器功能，并实现双机负载均衡"}]},{type:a,value:e},{type:b,tag:J,props:{className:[K]},children:[{type:b,tag:L,props:{className:[M,bx]},children:[{type:b,tag:o,props:{},children:[{type:a,value:"http{\n    upstream  xxx  {\n        #ip_hash;\n        server   ip1:port1  weight=1;\n        server   ip2:port2  weight=1;\n    }\n    server {\n        listen       80;\n        server_name  domain.com;\n        location \u002F {\n            proxy_pass  http:\u002F\u002Fxxx;\n        }\n    }\n    server {\n        listen  81;\n        server_name    domain.com;\n\n        charset utf-8;\n        access_log  logs\u002Fhost.access.log  main;\n        root 文件的绝对路径;\n\n        location \u002F {计算机网络\n1.http是无状态通信，http的请求方式有哪些，可以自己定义新的请求方式么。\n有一个分隔符，分隔符是怎么确认的，在哪里可以拿到\nheader和二进制的文件数据之间是怎么区分的\n            #autoindex on;#索引\n            #autoindex_exact_size on; #显示文件大小\n            #autoindex_localtime on; #显示文件时间\n        }\n    }\n}\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"参考文献"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{href:"http:\u002F\u002Fngudream.com\u002F2017\u002F03\u002F17\u002Fjava-interview\u002F",rel:[E,F,G],target:H,title:bJ},children:[{type:a,value:bJ}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{href:"http:\u002F\u002Fblog.csdn.net\u002FSCGH_Fx\u002Farticle\u002Fdetails\u002F71171392",rel:[E,F,G],target:H,title:bK},children:[{type:a,value:bK}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{href:"https:\u002F\u002Fwww.jianshu.com\u002Fp\u002Faa29da2c374f",rel:[E,F,G],target:H,title:bL},children:[{type:a,value:bL}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{href:"https:\u002F\u002Fwww.jianshu.com\u002Fp\u002F42620a0a2c33",rel:[E,F,G],target:H,title:bM},children:[{type:a,value:bM}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.cnblogs.com\u002Fbinyue\u002Fp\u002F4519652.html",rel:[E,F,G],target:H,title:bN},children:[{type:a,value:bN}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{href:"http:\u002F\u002Fblog.51cto.com\u002F395469372\u002F1726147",rel:[E,F,G],target:H,title:bO},children:[{type:a,value:bO}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{href:"http:\u002F\u002Fblog.csdn.net\u002Fu014556057\u002Farticle\u002Fdetails\u002F70742367",rel:[E,F,G],target:H,title:bP},children:[{type:a,value:bP}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{href:"https:\u002F\u002Fwww.kancloud.cn\u002Fkancloud\u002Ftheory-of-mysql-index\u002F41857",rel:[E,F,G],target:H,title:bQ},children:[{type:a,value:bQ}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{href:"https:\u002F\u002Fwww.cnblogs.com\u002Ffjdingsd\u002Fp\u002F5273008.html",rel:[E,F,G],target:H,title:bR},children:[{type:a,value:bR}]}]}]},excerpt:{type:bh,children:[]},dir:bS,path:"\u002Fjava\u002F20180303\u002F临急抱佛脚之杂七杂八",extension:".md",title:au,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180303\u002F临急抱佛脚之杂七杂八\u002F",createAt:new Date(1520035200000),updateAt:new Date(1520035200000),attributes:[{name:"createAt",value:bT},{name:"updateAt",value:bT},{name:"sort",value:bS,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180303\u002F1\u002F"}]}}],fetch:{},mutations:void 0}}("text","element","span","token","\n","punctuation","p","a","true",-1,"icon","icon-link"," ","li","code","keyword","class-name",2,"h2","(",")","\n    ",".","function",";","h1","{","}","comment","ul","nofollow","noopener","noreferrer","_blank","wide","div","nuxt-content-highlight","pre","line-numbers","operator","td",3,"h3","string","language-java","static","Class","常用的线程池模式以及不同线程池的使用场景","全列匹配","最左前缀匹配","查询条件没有指定索引第一列","匹配某列的前缀字符串","范围查询","查询条件中含有函数或表达式","事务的四个特性","事务的隔离级别","=","th","strong","例如","throws","ClassNotFoundException",",","ClassLoader","doc-comment","\n        ","System","out","println","tr","调用","无名の窝",10000,"青春猪头-牧之原翔子-江之岛","临急抱佛脚之杂七杂八","","2018-03-03T00:00:00.000Z","string类为什么是final的","String类为什么是final的","stringstringbuilderstringbuffer-区别","String、Stringbuilder、Stringbuffer 区别","classforname和classloader的区别","Class.forName和classloader的区别","session和cookie的区别和联系session的生命周期","session和cookie的区别和联系，session的生命周期","几个java集合类","几个Java集合类","arraylist和linkedlist各自实现和区别","ArrayList和LinkedList各自实现和区别","java中的队列都有哪些有什么区别","Java中的队列都有哪些，有什么区别","java内存泄露的问题调查定位","Java内存泄露的问题调查定位","jvm参数堆内存大小","jvm参数，堆内存大小","直接调用并发编程start方法和run的区别","直接调用并发编程start()方法和run()的区别","了解可重入锁的含义以及reentrantlock和synchronized的区别","了解可重入锁的含义，以及ReentrantLock和synchronized的区别","springspring-mvc及spring-boot区别","Spring，Spring MVC及Spring Boot区别","基于jdk代理和cglib的aop实现有什么区别","基于JDK代理和cglib的AOP实现有什么区别","监听器拦截器的作用区别","监听器，拦截器的作用区别","tomcat跟servlet的关系","Tomcat跟servlet的关系","servlet生命周期","Servlet生命周期","mysql引擎的特点","MySQL引擎的特点","mysql最左匹配原则","MySQL最左匹配原则","查询条件用到了索引中列的精确匹配但是中间某个条件未提供","查询条件用到了索引中列的精确匹配，但是中间某个条件未提供","root","java程序设计语言","public","generics","\u003C","?","\u003E","forName","namespace","\u002F**\n* Class.forName与classLoader的区别\n*\u002F","private","void"," clazz","\"reflect.People\"","+","clazz","language-text","new","单个用户","数据结构","等等","ol","没法用到索引","数据库连接池","方法开始加上","commons-codec包","synchronized","锁对象","Java 面试题归类汇总","Java面试题","[收藏文章]Java岗位面试题","Spring,Spring MVC及Spring Boot区别","JDK和CGLIB生成动态代理类的区别","MySQL各存储引擎特点及选择建议","MySQL各种引擎特点简述","最左前缀原理与相关优化","数据库事务的四大特性以及事务的隔离级别","\u002Fjava\u002F20180303","2018-03-03")));