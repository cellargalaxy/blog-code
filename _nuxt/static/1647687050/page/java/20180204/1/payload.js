__NUXT_JSONP__("/page/java/20180204/1", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){p.type="root";p.children=[{type:b,tag:"h1",props:{id:q},children:[{type:b,tag:"a",props:{ariaHidden:"true",href:"#%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2",tabIndex:-1},children:[{type:b,tag:"span",props:{className:["icon","icon-link"]},children:[]}]},{type:c,value:q}]},{type:c,value:"\n"},{type:b,tag:"p",props:{},children:[{type:c,value:"cpu通过给线程分配时间片，时间片一般是几十毫秒。在线程切换的时候，需要在切换前保存上一个任务的状态，以便下次切换回是可以再加载这个任务。这样一个任务从保存到在加载的过程就叫做上下文切换。多线程虽然能将多核cpu物尽其用，但是线程之间的切换也是需要时间和成本的。在并发编程中，将代码执行速度加快的原子是将代码中串行执行的部分变成并发执行，但是如果将串行执行的部分变成并发执行，因为受限于资源，仍然在串行执行，那程序不仅没有加快，还会变慢，因为增加了上下文切换和资源调度的时间。"}]}];return {data:[{navbarConfig:{brandText:"无名の窝",brandUrl:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}]},homeConfig:{brandInterval:10000,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1647687062496),pageSize:10,total:d,currentPage:d,files:[{slug:e,description:"上下文切换\ncpu通过给线程分配时间片，时间片一般是几十毫秒。在线程切换的时候，需要在切换前保存上一个任务的状态，以便下次切换回是可以再加载这个任务。这样一个任务从保存到在加载的过程就叫做上下文切换。多线程虽然能将多核cpu物尽其用，但是线程之间的切换也是需要时间和成本的。在并发编程中，将代码执行速度加快的原子是将代码中串行执行的部分变成并发执行，但是如果将串行执行的部分变成并发执行，因为受限于资源，仍然在串行执行，那程序不仅没有加快，还会变慢，因为增加了上下文切换和资源调度的时间。",createdAt:f,updatedAt:f,toc:[{id:g,depth:a,text:g},{id:h,depth:a,text:h},{id:i,depth:a,text:i},{id:j,depth:a,text:j},{id:k,depth:a,text:k},{id:"daemon线程",depth:a,text:"Daemon线程"},{id:l,depth:a,text:l},{id:"等待通知机制",depth:a,text:"等待\u002F通知机制"},{id:"管道输入流输出流",depth:a,text:"管道输入流\u002F输出流"},{id:m,depth:a,text:m},{id:n,depth:a,text:n},{id:o,depth:a,text:o}],body:p,excerpt:p,dir:r,path:"\u002Fjava\u002F20180204\u002Fjava并发编程的艺术学习笔记",extension:".md",title:e,url:"\u002Fblog-code\u002Fview\u002Fjava\u002F20180204\u002Fjava并发编程的艺术学习笔记",createAt:new Date(1517702400000),updateAt:new Date(1517702400000),attributes:[{name:"createAt",value:s},{name:"updateAt",value:s},{name:"sort",value:r,url:"\u002Fblog-code\u002Fpage\u002Fjava\u002F20180204\u002F1\u002F"}]}]}],fetch:{},mutations:void 0}}(2,"element","text",1,"java并发编程的艺术学习笔记","2018-02-04T00:00:00.000Z","重量级锁","偏向锁","轻量级锁","线程的优先级","线程的状态","线程中断","队列同步器的同步队列","重入锁","读写锁",{},"上下文切换","\u002Fjava\u002F20180204","2018-02-04")));