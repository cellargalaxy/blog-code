__NUXT_JSONP__("/page/$E6$8A$98$E8$85$BE/20200402/1", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){n.type="root";n.children=[{type:b,tag:"h1",props:{id:o},children:[{type:b,tag:p,props:{href:"#%E9%80%89%E5%9E%8B",ariaHidden:"true",tabIndex:-1},children:[{type:b,tag:"span",props:{className:["icon","icon-link"]},children:[]}]},{type:a,value:o}]},{type:a,value:c},{type:b,tag:"ol",props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Disqus，需要翻墙，不过我不觉得是什么问题。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"来必力，韩国的评论系统，自带中文，无需翻墙。感觉比Disqus要友好。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Valine，开源的前端评论框架，数据保存在leancloud里。leancloud貌似是国内服务，注册需要手机，告辞。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"utterances、gitalk、gitment、vssue等issue系，利用github的issue实现的评论系统。数据难以备份和迁移，对于每一页的博文都要手动去初始化，略有麻烦。然后看到"},{type:b,tag:p,props:{href:"https:\u002F\u002Faimingoo.github.io\u002F1-1722.html",rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:"手记4：谈谈Gitment中泄露secret的前因后果与解决方法"}]},{type:a,value:"一文，说了一句卧槽，告辞。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"commento，开源的评论系统，服务端可以自己部署，不过依赖于PostgreSQL数据库，太小题大做了，管理麻烦，下一个。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Statiman，开源的评论系统，服务端可以自己部署，将评论保存在yaml或者json文件，然后保存到github库上。很方便对数据进行备份迁移，看来一下部署教程有点复杂，自己部署服务数据还不在自己手上，作罢。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Isso，也是个开源的评论系统，服务端好像是用php写的，占几十m内存，数据库用sqlite，docker部署，备份管理简单。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:"p",props:{},children:[{type:a,value:"最后我还是选择了Isso。由于Disqus被墙，也不是很好看，所以本来我是想用来必力的了。但是基于能不注册就不注册，数据能在自己手里就在自己手里的原则，最后还是选择了自己搭建，也就几十M内存，还过得去。"}]}];return {data:[{siteConfig:{siteName:"无名の窝",siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:f},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:g,urlReplace:{"^/file/blog/code":"http:\u002F\u002F123.207.79.108\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:h,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:i,type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:i,type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:d},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:d}]}},homeConfig:{brandInterval:h,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1652942884866),rootPath:f,crumbs:[{text:"折腾",url:"\u002Fblog-code\u002Fpage\u002F$E6$8A$98$E8$85$BE\u002F1\u002F"},{text:"20200402",url:j}],pageSize:g,total:k,currentPage:k,files:[{slug:l,description:"选型\n\nDisqus，需要翻墙，不过我不觉得是什么问题。\n来必力，韩国的评论系统，自带中文，无需翻墙。感觉比Disqus要友好。\nValine，开源的前端评论框架，数据保存在leancloud里。leancloud貌似是国内服务，注册需要手机，告辞。\nutterances、gitalk、gitment、vssue等issue系，利用github的issue实现的评论系统。数据难以备份和迁移，对于每一页的博文都要手动去初始化，略有麻烦。然后看到手记4：谈谈Gitment中泄露secret的前因后果与解决方法一文，说了一句卧槽，告辞。\ncommento，开源的评论系统，服务端可以自己部署，不过依赖于PostgreSQL数据库，太小题大做了，管理麻烦，下一个。\nStatiman，开源的评论系统，服务端可以自己部署，将评论保存在yaml或者json文件，然后保存到github库上。很方便对数据进行备份迁移，看来一下部署教程有点复杂，自己部署服务数据还不在自己手上，作罢。\nIsso，也是个开源的评论系统，服务端好像是用php写的，占几十m内存，数据库用sqlite，docker部署，备份管理简单。\n\n最后我还是选择了Isso。由于Disqus被墙，也不是很好看，所以本来我是想用来必力的了。但是基于能不注册就不注册，数据能在自己手里就在自己手里的原则，最后还是选择了自己搭建，也就几十M内存，还过得去。",createdAt:m,updatedAt:m,toc:[],body:n,excerpt:n,dir:q,path:"\u002F折腾\u002F20200402\u002F博客评论系统",extension:".md",title:l,url:"\u002Fblog-code\u002Fview\u002F$E6$8A$98$E8$85$BE\u002F20200402\u002F$E5$8D$9A$E5$AE$A2$E8$AF$84$E8$AE$BA$E7$B3$BB$E7$BB$9F\u002F",createAt:new Date(1585785600000),updateAt:new Date(1585785600000),attributes:[{name:"createAt",value:r},{name:"updateAt",value:r},{name:"sort",value:q,url:j}]}]}],fetch:{},mutations:void 0}}("text","element","\n","wide","li","\u002Fblog-code\u002Fpage\u002F1\u002F",10,10000,"青春猪头-牧之原翔子-江之岛","\u002Fblog-code\u002Fpage\u002F$E6$8A$98$E8$85$BE\u002F20200402\u002F1\u002F",1,"博客评论系统","2020-04-02T00:00:00.000Z",{},"选型","a","\u002F折腾\u002F20200402","2020-04-02")));