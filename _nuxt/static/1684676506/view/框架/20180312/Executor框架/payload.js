__NUXT_JSONP__("/view/框架/20180312/Executor框架", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K){return {data:[{siteConfig:{siteName:t,siteHost:"https:\u002F\u002Fcellargalaxy.github.io",basePath:"\u002Fblog-code\u002F",navs:[{text:"文章",url:"\u002Fblog-code\u002Fpage\u002F1\u002F"},{text:"归档",url:"\u002Fblog-code\u002Farchive\u002F0\u002F"},{text:"画画",url:"\u002Fblog-code\u002Fhtml\u002Fhua.html"},{text:"开源",url:"\u002Fblog-code\u002Fhttps:\u002Fgithub.com\u002Fcellargalaxy\u002Fblog-vue"}],pageSize:10,urlReplace:{"^/file/blog/code":"https:\u002F\u002Foracleamd1.dynv6.net\u002Ffile\u002Ffile\u002Fblog\u002Fcode"},backgroundImage:{duration:u,fade:1000,images:[{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FcofTzDQXitjeVZ6.jpg",description:v,type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F25\u002FsfaRJ2lVeM3NDbE.jpg",description:v,type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F26\u002FKybiTdftam5Su7x.jpg",description:"青春猪头-双葉理央",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F09\u002F08\u002FxdX73nfs24qgOYk.jpg",description:"京吹-明日香,久美子",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F14\u002FMAiruNcEFW2HYtg.jpg",description:"终将成为你-七海灯子,小糸侑",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F05\u002FEojdAxTDJsFpbPw.jpg",description:"玉子市场-北白川玉子",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F31\u002FAXxwJDRS9fmN2uU.jpg",description:"fate_hf-弓道馆",type:i},{url:"https:\u002F\u002Fi.loli.net\u002F2020\u002F02\u002F01\u002FaHhVObpJus6dnM4.jpg",description:"fate_hf-樱花树",type:i}]}},homeConfig:{brandInterval:u,brands:[{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F01\u002F21\u002FmMEAnwY5XPC2pFb.jpg",title:"日常",texts:["我们所度过的每个平凡的日常，也许就是连续不断发生的奇迹。","日々、私たちが過ごしている日常は、実は奇跡の連続なのかもしれない。"]},{imageUrl:"https:\u002F\u002Fi.loli.net\u002F2020\u002F04\u002F19\u002FH1MmXb9xPcYEhT2.jpg",title:"昨日之歌",texts:["时间梭梭箭如飞，人道漫漫步蹒跚","人間そんな変わるもんじゃないのに、月日ばっかどんどん過ぎて"]}],navs:[{text:"Github",url:"https:\u002F\u002Fgithub.com\u002Fcellargalaxy\u002F"}]},pageFootConfig:{lines:[[{text:"Copyright © 2017-? ."},{text:"备案？不存在的"},{text:"Powered by Nuxt.js & Github"}]]},buildTime:new Date(1684676517924),siteName:t,file:{slug:w,description:"Executor框架是自带的线程池框架。\nExecutor\nExecutor是一个接口，只有void execute(Runnable command);方法。",createdAt:x,updatedAt:x,toc:[],body:{type:y,children:[{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:c},{type:b,tag:k,props:{id:A},children:[{type:b,tag:j,props:{href:B,ariaHidden:l,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:D},{type:b,tag:g,props:{},children:[{type:a,value:E}]},{type:a,value:F}]},{type:a,value:c},{type:a,value:c},{type:b,tag:k,props:{id:"executorservice"},children:[{type:b,tag:j,props:{href:"#executorservice",ariaHidden:l,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:"ExecutorService"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"ExecutorService也是一个接口，继承Executor。但是比Executor多了些方法，例如："}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"void shutdown();"}]},{type:a,value:"：关闭线程池，不再接受新的任务，直到现有任务都完成就完成关闭"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"void shutdownNow();"}]},{type:a,value:"：关闭线程池，不再接受新的任务，现有任务的线程终止"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"boolean isShutdown();"}]},{type:a,value:"：线程池是否已经关闭"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"\u003CT\u003E Future\u003CT\u003E submit(Callable\u003CT\u003E task);"}]},{type:a,value:"：提交Callable任务"}]},{type:a,value:c},{type:b,tag:k,props:{id:"runable"},children:[{type:b,tag:j,props:{href:"#runable",ariaHidden:l,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:"Runable"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"向线程池提交Runable对象是用于计算没有返回的任务。"}]},{type:a,value:c},{type:b,tag:k,props:{id:"callable"},children:[{type:b,tag:j,props:{href:"#callable",ariaHidden:l,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:"Callable"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"跟Runable相识，但是Callable用于计算有返回结果的任务，返回的结果通过Future封装"}]},{type:a,value:c},{type:b,tag:k,props:{id:"future与futuretask"},children:[{type:b,tag:j,props:{href:"#future%E4%B8%8Efuturetask",ariaHidden:l,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:"Future与FutureTask"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Future是个接口，FutureTask实现了Future和Runable。FutureTask是Future唯一的实现。Future的方法例如："}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"boolean cancel(boolean mayInterruptIfRunning);"}]},{type:a,value:"：取消任务，mayInterruptIfRunning表示是否要取消正在执行但还没执行完成的任务。取消成功返回true"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"isCancelled()"}]},{type:a,value:"：任务是否已经被取消"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"isDone()"}]},{type:a,value:"：任务是否已经完成"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"V get() throws InterruptedException, ExecutionException;"}]},{type:a,value:"：获取计算结果，会阻塞直到计算完成"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"V get(long timeout, TimeUnit unit) throws InterruptedException,ExecutionException,TimeoutException;"}]},{type:a,value:"：超时版"}]},{type:a,value:c},{type:b,tag:k,props:{id:"executors"},children:[{type:b,tag:j,props:{href:"#executors",ariaHidden:l,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:"Executors"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Executors的静态方法提供好几种现成的线程池，这些静态方法都是创建"},{type:b,tag:g,props:{},children:[{type:a,value:G}]},{type:a,value:"对象的。"}]},{type:a,value:c},{type:b,tag:"div",props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:"pre",props:{className:["language-java","line-numbers"]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:d,props:{className:[f,s]},children:[{type:a,value:"public"}]},{type:a,value:" "},{type:b,tag:d,props:{className:[f,p]},children:[{type:a,value:G}]},{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:"("}]},{type:b,tag:d,props:{className:[f,s]},children:[{type:a,value:H}]},{type:a,value:" corePoolSize"},{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:d,props:{className:[f,s]},children:[{type:a,value:H}]},{type:a,value:" maximumPoolSize"},{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:d,props:{className:[f,s]},children:[{type:a,value:"long"}]},{type:a,value:" keepAliveTime"},{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:d,props:{className:[f,p]},children:[{type:a,value:"TimeUnit"}]},{type:a,value:" unit"},{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:d,props:{className:[f,p]},children:[{type:a,value:"BlockingQueue"}]},{type:b,tag:d,props:{className:[f,"generics"]},children:[{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:"\u003C"}]},{type:b,tag:d,props:{className:[f,p]},children:[{type:a,value:"Runnable"}]},{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:"\u003E"}]}]},{type:a,value:" workQueue"},{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:d,props:{className:[f,p]},children:[{type:a,value:"ThreadFactory"}]},{type:a,value:" threadFactory"},{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:d,props:{className:[f,p]},children:[{type:a,value:"RejectedExecutionHandler"}]},{type:a,value:" handler"},{type:b,tag:d,props:{className:[f,h]},children:[{type:a,value:")"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"newFixedThreadPool(int nThreads)"}]},{type:a,value:"：创建一个线程数固定的，等待队列无界的线程池"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"newSingleThreadExecutor()"}]},{type:a,value:"：创建一个单线程，等待队列无界的线程池"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"newCachedThreadPool()"}]},{type:a,value:"：创建一个线程数自动的，等待队列无界的线程池"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"newScheduledThreadPool(int corePoolSize)"}]},{type:a,value:"：创建支持定时以及周期性执行任务的，等待队列无界的线程池"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"参考文献\n"},{type:b,tag:j,props:{href:"https:\u002F\u002Fwww.jianshu.com\u002Fp\u002F8826a459471f",rel:["nofollow","noopener","noreferrer"],target:"_blank",title:I},children:[{type:a,value:I}]}]}]},excerpt:{type:y,children:[{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:c},{type:b,tag:k,props:{id:A},children:[{type:b,tag:j,props:{ariaHidden:l,href:B,tabIndex:m},children:[{type:b,tag:d,props:{className:[n,o]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:D},{type:b,tag:g,props:{},children:[{type:a,value:E}]},{type:a,value:F}]}]},dir:J,path:"\u002F框架\u002F20180312\u002FExecutor框架",extension:".md",title:w,url:"\u002Fblog-code\u002Fview\u002F框架\u002F20180312\u002FExecutor框架\u002F",createAt:new Date(1520812800000),updateAt:new Date(1520812800000),attributes:[{name:"createAt",value:K},{name:"updateAt",value:K},{name:"sort",value:J,url:"\u002Fblog-code\u002Fpage\u002F框架\u002F20180312\u002F1\u002F"}]}}],fetch:{},mutations:void 0}}("text","element","\n","span","p","token","code","punctuation","wide","a","h1","true",-1,"icon","icon-link","class-name",",","\n                          ","keyword","无名の窝",10000,"青春猪头-牧之原翔子-江之岛","Executor框架","2018-03-12T00:00:00.000Z","root","Executor框架是自带的线程池框架。","executor","#executor","Executor","Executor是一个接口，只有","void execute(Runnable command);","方法。","ThreadPoolExecutor","int","Executor框架简介","\u002F框架\u002F20180312","2018-03-12")));